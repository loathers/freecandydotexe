"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = function(fn, res) {
  return function() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
};
var __commonJS = function(cb, mod) {
  return function() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
};
var __export = function(target, all2) {
  for (var name in all2)
    __defProp(target, name, { get: all2[name], enumerable: !0 });
}, __copyProps = function(to, from, except, desc) {
  if (from && typeof from == "object" || typeof from == "function")
    for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++)
      key = keys[i], !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: function(k) {
        return from[k];
      }.bind(null, key), enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = function(mod, isNodeMode, target) {
  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
    mod
  );
}, __toCommonJS = function(mod) {
  return __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
};

// kolmafia-polyfill.js
var kolmafia, console, init_kolmafia_polyfill = __esm({
  "kolmafia-polyfill.js": function() {
    "use strict";
    kolmafia = require("kolmafia"), console = {
      log: kolmafia.print
    };
  }
});

// node_modules/libram/dist/logger.js
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties2(Constructor.prototype, protoProps), staticProps && _defineProperties2(Constructor, staticProps), Constructor;
}
function _defineProperty2(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
var import_kolmafia2, _defaultHandlers, LogLevels, defaultHandlers, Logger, logger_default, init_logger = __esm({
  "node_modules/libram/dist/logger.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia2 = require("kolmafia");
    (function(LogLevels2) {
      LogLevels2[LogLevels2.NONE = 0] = "NONE", LogLevels2[LogLevels2.ERROR = 1] = "ERROR", LogLevels2[LogLevels2.WARNING = 2] = "WARNING", LogLevels2[LogLevels2.INFO = 3] = "INFO", LogLevels2[LogLevels2.DEBUG = 4] = "DEBUG";
    })(LogLevels || (LogLevels = {}));
    defaultHandlers = (_defaultHandlers = {}, _defineProperty2(_defaultHandlers, LogLevels.INFO, function(message) {
      (0, import_kolmafia2.printHtml)("<b>[Libram Info]</b> ".concat(message)), (0, import_kolmafia2.logprint)("[Libram] ".concat(message));
    }), _defineProperty2(_defaultHandlers, LogLevels.WARNING, function(message) {
      (0, import_kolmafia2.printHtml)('<span style="background: orange; color: white;"><b>[Libram Warning]</b> '.concat(message, "</span>")), (0, import_kolmafia2.logprint)("[Libram] ".concat(message));
    }), _defineProperty2(_defaultHandlers, LogLevels.ERROR, function(error2) {
      (0, import_kolmafia2.printHtml)('<span style="background: red; color: white;"><b>[Libram Error]</b> '.concat(error2.toString(), "</span>")), (0, import_kolmafia2.logprint)("[Libram] ".concat(error2));
    }), _defineProperty2(_defaultHandlers, LogLevels.DEBUG, function(message) {
      (0, import_kolmafia2.printHtml)('<span style="background: red; color: white;"><b>[Libram Debug]</b> '.concat(message, "</span>")), (0, import_kolmafia2.logprint)("[Libram] ".concat(message));
    }), _defaultHandlers), Logger = /* @__PURE__ */ function() {
      function Logger2() {
        _classCallCheck2(this, Logger2), _defineProperty2(this, "handlers", defaultHandlers);
      }
      return _createClass2(Logger2, [{
        key: "level",
        get: function() {
          return Logger2.currentLevel;
        }
      }, {
        key: "setLevel",
        value: function(level) {
          Logger2.currentLevel = level;
        }
      }, {
        key: "setHandler",
        value: function(level, callback) {
          this.handlers[level] = callback;
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
      }, {
        key: "log",
        value: function(level, message) {
          this.level >= level && this.handlers[level](message);
        }
      }, {
        key: "info",
        value: function(message) {
          this.log(LogLevels.INFO, message);
        }
      }, {
        key: "warning",
        value: function(message) {
          this.log(LogLevels.WARNING, message);
        }
      }, {
        key: "error",
        value: function(message) {
          this.log(LogLevels.ERROR, message);
        }
      }, {
        key: "debug",
        value: function(message) {
          this.log(LogLevels.DEBUG, message);
        }
      }]), Logger2;
    }();
    _defineProperty2(Logger, "currentLevel", LogLevels.ERROR);
    logger_default = new Logger();
  }
});

// node_modules/libram/dist/propertyTypes.js
var propertyTypes_exports = {};
__export(propertyTypes_exports, {
  booleanProperties: function() {
    return booleanProperties;
  },
  familiarProperties: function() {
    return familiarProperties;
  },
  locationProperties: function() {
    return locationProperties;
  },
  monsterProperties: function() {
    return monsterProperties;
  },
  numericOrStringProperties: function() {
    return numericOrStringProperties;
  },
  numericProperties: function() {
    return numericProperties;
  },
  phylumProperties: function() {
    return phylumProperties;
  },
  statProperties: function() {
    return statProperties;
  },
  stringProperties: function() {
    return stringProperties;
  }
});
var booleanProperties, numericProperties, monsterProperties, locationProperties, stringProperties, numericOrStringProperties, familiarProperties, statProperties, phylumProperties, init_propertyTypes = __esm({
  "node_modules/libram/dist/propertyTypes.js": function() {
    init_kolmafia_polyfill();
    booleanProperties = ["abortOnChoiceWhenNotInChoice", "addChatCommandLine", "addCreationQueue", "addStatusBarToFrames", "allowCloseableDesktopTabs", "allowNegativeTally", "allowNonMoodBurning", "allowSummonBurning", "autoHighlightOnFocus", "broadcastEvents", "cacheMallSearches", "chatBeep", "chatLinksUseRelay", "compactChessboard", "copyAsHTML", "customizedTabs", "debugBuy", "debugConsequences", "debugFoxtrotRemoval", "debugPathnames", "debugTopMenuStyle", "gapProtection", "gitInstallDependencies", "gitShowCommitMessages", "gitUpdateOnLogin", "greenScreenProtection", "guiUsesOneWindow", "hideServerDebugText", "logAcquiredItems", "logBattleAction", "logBrowserInteractions", "logChatMessages", "logChatRequests", "logCleanedHTML", "logDecoratedResponses", "logFamiliarActions", "logGainMessages", "logReadableHTML", "logPreferenceChange", "logMonsterHealth", "logReverseOrder", "logStatGains", "logStatusEffects", "logStatusOnLogin", "macroDebug", "macroLens", "mementoListActive", "mergeHobopolisChat", "pingLogin", "pingStealthyTimein", "printStackOnAbort", "proxySet", "relayAddSounds", "relayAddsCustomCombat", "relayAddsDiscoHelper", "relayAddsGraphicalCLI", "relayAddsQuickScripts", "relayAddsRestoreLinks", "relayAddsUpArrowLinks", "relayAddsUseLinks", "relayAddsWikiLinks", "relayAllowRemoteAccess", "relayBrowserOnly", "relayCacheUncacheable", "relayFormatsChatText", "relayHidesJunkMallItems", "relayMaintainsEffects", "relayMaintainsHealth", "relayMaintainsMana", "relayOverridesImages", "relayRunsAfterAdventureScript", "relayRunsBeforeBattleScript", "relayRunsBeforePVPScript", "relayScriptButtonFirst", "relayTextualizesEffects", "relayTrimsZapList", "relayUsesInlineLinks", "relayUsesIntegratedChat", "relayWarnOnRecoverFailure", "removeMalignantEffects", "saveSettingsOnSet", "sharePriceData", "showAllRequests", "showExceptionalRequests", "stealthLogin", "svnAlwaysAdd", "svnAlwaysOverwrite", "svnInstallDependencies", "svnShowCommitMessages", "svnUpdateOnLogin", "switchEquipmentForBuffs", "syncAfterSvnUpdate", "useChatToolbar", "useContactsFrame", "useDevProxyServer", "useDockIconBadge", "useHugglerChannel", "useImageCache", "useLastUserAgent", "useSystemTrayIcon", "useTabbedChatFrame", "useToolbars", "useCachedVolcanoMaps", "useZoneComboBox", "verboseSpeakeasy", "verboseFloundry", "wrapLongLines", "_gitUpdated", "_svnRepoFileFetched", "_svnUpdated", "antagonisticSnowmanKitAvailable", "arcadeGameHints", "armoryUnlocked", "autoForbidIgnoringStores", "autoCraft", "autoQuest", "autoEntangle", "autoGarish", "autoManaRestore", "autoFillMayoMinder", "autoPinkyRing", "autoPlantHardcore", "autoPlantSoftcore", "autoPotionID", "autoRepairBoxServants", "autoSatisfyWithCloset", "autoSatisfyWithCoinmasters", "autoSatisfyWithMall", "autoSatisfyWithNPCs", "autoSatisfyWithStash", "autoSatisfyWithStorage", "autoSetConditions", "autoSteal", "autoTuxedo", "backupCameraReverserEnabled", "badMoonEncounter01", "badMoonEncounter02", "badMoonEncounter03", "badMoonEncounter04", "badMoonEncounter05", "badMoonEncounter06", "badMoonEncounter07", "badMoonEncounter08", "badMoonEncounter09", "badMoonEncounter10", "badMoonEncounter11", "badMoonEncounter12", "badMoonEncounter13", "badMoonEncounter14", "badMoonEncounter15", "badMoonEncounter16", "badMoonEncounter17", "badMoonEncounter18", "badMoonEncounter19", "badMoonEncounter20", "badMoonEncounter21", "badMoonEncounter22", "badMoonEncounter23", "badMoonEncounter24", "badMoonEncounter25", "badMoonEncounter26", "badMoonEncounter27", "badMoonEncounter28", "badMoonEncounter29", "badMoonEncounter30", "badMoonEncounter31", "badMoonEncounter32", "badMoonEncounter33", "badMoonEncounter34", "badMoonEncounter35", "badMoonEncounter36", "badMoonEncounter37", "badMoonEncounter38", "badMoonEncounter39", "badMoonEncounter40", "badMoonEncounter41", "badMoonEncounter42", "badMoonEncounter43", "badMoonEncounter44", "badMoonEncounter45", "badMoonEncounter46", "badMoonEncounter47", "badMoonEncounter48", "barrelShrineUnlocked", "bigBrotherRescued", "blackBartsBootyAvailable", "bondAdv", "bondBeach", "bondBeat", "bondBooze", "bondBridge", "bondDesert", "bondDR", "bondDrunk1", "bondDrunk2", "bondHoney", "bondHP", "bondInit", "bondItem1", "bondItem2", "bondItem3", "bondJetpack", "bondMartiniDelivery", "bondMartiniPlus", "bondMartiniTurn", "bondMeat", "bondMox1", "bondMox2", "bondMPregen", "bondMus1", "bondMus2", "bondMys1", "bondMys2", "bondSpleen", "bondStat", "bondStat2", "bondStealth", "bondStealth2", "bondSymbols", "bondWar", "bondWeapon2", "bondWpn", "booPeakLit", "bootsCharged", "breakfastCompleted", "burrowgrubHiveUsed", "calzoneOfLegendEaten", "canteenUnlocked", "chaosButterflyThrown", "chatbotScriptExecuted", "chateauAvailable", "chatLiterate", "chatServesUpdates", "checkJackassHardcore", "checkJackassSoftcore", "clanAttacksEnabled", "coldAirportAlways", "considerShadowNoodles", "controlRoomUnlock", "concertVisited", "controlPanel1", "controlPanel2", "controlPanel3", "controlPanel4", "controlPanel5", "controlPanel6", "controlPanel7", "controlPanel8", "controlPanel9", "corralUnlocked", "dailyDungeonDone", "dampOldBootPurchased", "daycareOpen", "deepDishOfLegendEaten", "demonSummoned", "dinseyAudienceEngagement", "dinseyGarbagePirate", "dinseyRapidPassEnabled", "dinseyRollercoasterNext", "dinseySafetyProtocolsLoose", "doghouseBoarded", "dontStopForCounters", "drippingHallUnlocked", "drippyShieldUnlocked", "edUsedLash", "eldritchFissureAvailable", "eldritchHorrorAvailable", "errorOnAmbiguousFold", "essenceOfAnnoyanceAvailable", "essenceOfBearAvailable", "expressCardUsed", "falloutShelterChronoUsed", "falloutShelterCoolingTankUsed", "fireExtinguisherBatHoleUsed", "fireExtinguisherChasmUsed", "fireExtinguisherCyrptUsed", "fireExtinguisherDesertUsed", "fireExtinguisherHaremUsed", "fistTeachingsHaikuDungeon", "fistTeachingsPokerRoom", "fistTeachingsBarroomBrawl", "fistTeachingsConservatory", "fistTeachingsBatHole", "fistTeachingsFunHouse", "fistTeachingsMenagerie", "fistTeachingsSlums", "fistTeachingsFratHouse", "fistTeachingsRoad", "fistTeachingsNinjaSnowmen", "flickeringPixel1", "flickeringPixel2", "flickeringPixel3", "flickeringPixel4", "flickeringPixel5", "flickeringPixel6", "flickeringPixel7", "flickeringPixel8", "floristFriarAvailable", "floristFriarChecked", "frAlways", "frCemetaryUnlocked", "friarsBlessingReceived", "frMountainsUnlocked", "frSwampUnlocked", "frVillageUnlocked", "frWoodUnlocked", "getawayCampsiteUnlocked", "ghostPencil1", "ghostPencil2", "ghostPencil3", "ghostPencil4", "ghostPencil5", "ghostPencil6", "ghostPencil7", "ghostPencil8", "ghostPencil9", "gingerAdvanceClockUnlocked", "gingerBlackmailAccomplished", "gingerbreadCityAvailable", "gingerExtraAdventures", "gingerNegativesDropped", "gingerSewersUnlocked", "gingerSubwayLineUnlocked", "gingerRetailUnlocked", "glitchItemAvailable", "grabCloversHardcore", "grabCloversSoftcore", "guideToSafariAvailable", "guyMadeOfBeesDefeated", "hallowienerDefiledNook", "hallowienerGuanoJunction", "hallowienerKnollGym", "hallowienerMadnessBakery", "hallowienerMiddleChamber", "hallowienerOvergrownLot", "hallowienerSkeletonStore", "hallowienerSmutOrcs", "hallowienerSonofaBeach", "hallowienerVolcoino", "hardcorePVPWarning", "harvestBatteriesHardcore", "harvestBatteriesSoftcore", "hasAutumnaton", "hasBartender", "hasChef", "hasCocktailKit", "hasCosmicBowlingBall", "hasDetectiveSchool", "hasMaydayContract", "hasOven", "hasRange", "hasShaker", "hasSushiMat", "hasTwinkleVision", "haveBoxingDaydreamHardcore", "haveBoxingDaydreamSoftcore", "hermitHax0red", "holidayHalsBookAvailable", "horseryAvailable", "hotAirportAlways", "implementGlitchItem", "intenseCurrents", "itemBoughtPerAscension637", "itemBoughtPerAscension8266", "itemBoughtPerAscension10790", "itemBoughtPerAscension10794", "itemBoughtPerAscension10795", "itemBoughtPerCharacter6423", "itemBoughtPerCharacter6428", "itemBoughtPerCharacter6429", "kingLiberated", "lastPirateInsult1", "lastPirateInsult2", "lastPirateInsult3", "lastPirateInsult4", "lastPirateInsult5", "lastPirateInsult6", "lastPirateInsult7", "lastPirateInsult8", "lawOfAveragesAvailable", "leafletCompleted", "ledCandleDropped", "libraryCardUsed", "lockPicked", "logBastilleBattalionBattles", "loginRecoveryHardcore", "loginRecoverySoftcore", "lovebugsUnlocked", "loveTunnelAvailable", "lowerChamberUnlock", "madnessBakeryAvailable", "makePocketWishesHardcore", "makePocketWishesSoftcore", "manualOfNumberologyAvailable", "mappingMonsters", "mapToAnemoneMinePurchased", "mapToKokomoAvailable", "mapToMadnessReefPurchased", "mapToTheDiveBarPurchased", "mapToTheMarinaraTrenchPurchased", "mapToTheSkateParkPurchased", "maraisBeaverUnlock", "maraisCorpseUnlock", "maraisDarkUnlock", "maraisVillageUnlock", "maraisWildlifeUnlock", "maraisWizardUnlock", "maximizerAlwaysCurrent", "maximizerCreateOnHand", "maximizerCurrentMallPrices", "maximizerFoldables", "maximizerIncludeAll", "maximizerNoAdventures", "middleChamberUnlock", "milkOfMagnesiumActive", "moonTuned", "neverendingPartyAlways", "noncombatForcerActive", "oasisAvailable", "odeBuffbotCheck", "oilPeakLit", "oscusSodaUsed", "outrageousSombreroUsed", "overgrownLotAvailable", "ownsFloristFriar", "ownsSpeakeasy", "pathedSummonsHardcore", "pathedSummonsSoftcore", "pizzaOfLegendEaten", "popularTartUnlocked", "potatoAlarmClockUsed", "prAlways", "prayedForGlamour", "prayedForProtection", "prayedForVigor", "primaryLabCheerCoreGrabbed", "pyramidBombUsed", "rageGlandVented", "readManualHardcore", "readManualSoftcore", "relayShowSpoilers", "relayShowWarnings", "rememberDesktopSize", "replicaChateauAvailable", "replicaNeverendingPartyAlways", "replicaWitchessSetAvailable", "requireBoxServants", "requireSewerTestItems", "restUsingCampAwayTent", "restUsingChateau", "ROMOfOptimalityAvailable", "safePickpocket", "schoolOfHardKnocksDiplomaAvailable", "scriptCascadingMenus", "serverAddsCustomCombat", "SHAWARMAInitiativeUnlocked", "showForbiddenStores", "showGainsPerUnit", "showIgnoringStorePrices", "showNoSummonOnly", "showTurnFreeOnly", "skeletonStoreAvailable", "sleazeAirportAlways", "snojoAvailable", "sortByEffect", "sortByRoom", "spacegateAlways", "spacegateVaccine1", "spacegateVaccine2", "spacegateVaccine3", "spaceInvaderDefeated", "spelunkyHints", "spiceMelangeUsed", "spookyAirportAlways", "stenchAirportAlways", "stopForFixedWanderer", "stopForUltraRare", "styxPixieVisited", "superconductorDefeated", "suppressInappropriateNags", "suppressPowerPixellation", "suppressMallPriceCacheMessages", "telegraphOfficeAvailable", "telescopeLookedHigh", "timeTowerAvailable", "trackLightsOut", "uneffectWithHotTub", "universalSeasoningActive", "universalSeasoningAvailable", "useBookOfEverySkillHardcore", "useBookOfEverySkillSoftcore", "useCrimboToysHardcore", "useCrimboToysSoftcore", "verboseMaximizer", "visitLoungeHardcore", "visitLoungeSoftcore", "visitRumpusHardcore", "visitRumpusSoftcore", "voteAlways", "wildfireBarrelCaulked", "wildfireDusted", "wildfireFracked", "wildfirePumpGreased", "wildfireSprinkled", "yearbookCameraPending", "youRobotScavenged", "_2002MrStoreCreditsCollected", "_affirmationCookieEaten", "_affirmationHateUsed", "_airFryerUsed", "_akgyxothUsed", "_alienAnimalMilkUsed", "_alienPlantPodUsed", "_allYearSucker", "_aprilShower", "_armyToddlerCast", "_aug1Cast", "_aug2Cast", "_aug3Cast", "_aug4Cast", "_aug5Cast", "_aug6Cast", "_aug7Cast", "_aug8Cast", "_aug9Cast", "_aug10Cast", "_aug11Cast", "_aug12Cast", "_aug13Cast", "_aug14Cast", "_aug15Cast", "_aug16Cast", "_aug17Cast", "_aug18Cast", "_aug19Cast", "_aug20Cast", "_aug21Cast", "_aug22Cast", "_aug23Cast", "_aug24Cast", "_aug25Cast", "_aug26Cast", "_aug27Cast", "_aug28Cast", "_aug29Cast", "_aug30Cast", "_aug31Cast", "_augTodayCast", "_authorsInkUsed", "_baconMachineUsed", "_bagOfCandy", "_bagOfCandyUsed", "_bagOTricksUsed", "_ballastTurtleUsed", "_ballInACupUsed", "_ballpit", "_barrelPrayer", "_bastilleLastBattleWon", "_beachCombing", "_bendHellUsed", "_blackMonolithUsed", "_blankoutUsed", "_bonersSummoned", "_bookOfEverySkillUsed", "_borrowedTimeUsed", "_bowleggedSwaggerUsed", "_bowlFullOfJellyUsed", "_boxOfHammersUsed", "_brainPreservationFluidUsed", "_brassDreadFlaskUsed", "_cameraUsed", "_canSeekBirds", "_carboLoaded", "_cargoPocketEmptied", "_ceciHatUsed", "_chateauDeskHarvested", "_chateauMonsterFought", "_chibiChanged", "_chronerCrossUsed", "_chronerTriggerUsed", "_chubbyAndPlumpUsed", "_circadianRhythmsRecalled", "_circleDrumUsed", "_clanFortuneBuffUsed", "_claraBellUsed", "_coalPaperweightUsed", "_cocoaDispenserUsed", "_cocktailShakerUsed", "_coldAirportToday", "_coldOne", "_communismUsed", "_confusingLEDClockUsed", "_controlPanelUsed", "_cookbookbatRecipeDrops", "_corruptedStardustUsed", "_cosmicSixPackConjured", "_crappyCameraUsed", "_creepyVoodooDollUsed", "_crimboTraining", "_crimboTree", "_cursedKegUsed", "_cursedMicrowaveUsed", "_dailyDungeonMalwareUsed", "_darkChocolateHeart", "_daycareFights", "_daycareNap", "_daycareSpa", "_daycareToday", "_defectiveTokenChecked", "_defectiveTokenUsed", "_dinseyGarbageDisposed", "_discoKnife", "_distentionPillUsed", "_dnaHybrid", "_docClocksThymeCocktailDrunk", "_drippingHallDoor1", "_drippingHallDoor2", "_drippingHallDoor3", "_drippingHallDoor4", "_drippyCaviarUsed", "_drippyNuggetUsed", "_drippyPilsnerUsed", "_drippyPlumUsed", "_drippyWineUsed", "_eldritchHorrorEvoked", "_eldritchTentacleFought", "_entauntaunedToday", "_envyfishEggUsed", "_epicMcTwistUsed", "_essentialTofuUsed", "_etchedHourglassUsed", "_eternalCarBatteryUsed", "_everfullGlassUsed", "_eyeAndATwistUsed", "_fancyChessSetUsed", "_falloutShelterSpaUsed", "_fancyHotDogEaten", "_farmerItemsCollected", "_favoriteBirdVisited", "_firedJokestersGun", "_fireExtinguisherRefilled", "_fireStartingKitUsed", "_fireworksShop", "_fireworksShopHatBought", "_fireworksShopEquipmentBought", "_fireworkUsed", "_fishyPipeUsed", "_floundryItemCreated", "_floundryItemUsed", "_freePillKeeperUsed", "_frToday", "_fudgeSporkUsed", "_garbageItemChanged", "_gingerBiggerAlligators", "_gingerbreadCityToday", "_gingerbreadClockAdvanced", "_gingerbreadClockVisited", "_gingerbreadColumnDestroyed", "_gingerbreadMobHitUsed", "_glennGoldenDiceUsed", "_glitchItemImplemented", "_gnollEyeUsed", "_governmentPerDiemUsed", "_grimBuff", "_guildManualUsed", "_guzzlrQuestAbandoned", "_hardKnocksDiplomaUsed", "_hippyMeatCollected", "_hobbyHorseUsed", "_holidayFunUsed", "_holoWristCrystal", "_hotAirportToday", "_hungerSauceUsed", "_hyperinflatedSealLungUsed", "_iceHotelRoomsRaided", "_iceSculptureUsed", "_incredibleSelfEsteemCast", "_infernoDiscoVisited", "_internetDailyDungeonMalwareBought", "_internetGallonOfMilkBought", "_internetPlusOneBought", "_internetPrintScreenButtonBought", "_internetViralVideoBought", "_interviewIsabella", "_interviewMasquerade", "_interviewVlad", "_inquisitorsUnidentifiableObjectUsed", "_ironicMoustache", "_jackassPlumberGame", "_jarlsCheeseSummoned", "_jarlsCreamSummoned", "_jarlsDoughSummoned", "_jarlsEggsSummoned", "_jarlsFruitSummoned", "_jarlsMeatSummoned", "_jarlsPotatoSummoned", "_jarlsVeggiesSummoned", "_jingleBellUsed", "_jukebox", "_kgbFlywheelCharged", "_kgbLeftDrawerUsed", "_kgbOpened", "_kgbRightDrawerUsed", "_kolConSixPackUsed", "_kolhsCutButNotDried", "_kolhsIsskayLikeAnAshtray", "_kolhsPoeticallyLicenced", "_kolhsSchoolSpirited", "_kudzuSaladEaten", "_lastCombatLost", "_lastCombatWon", "_latteBanishUsed", "_latteCopyUsed", "_latteDrinkUsed", "_legendaryBeat", "_licenseToChillUsed", "_lodestoneUsed", "_lookingGlass", "_loveTunnelToday", "_loveTunnelUsed", "_luckyGoldRingVolcoino", "_lunchBreak", "_lupineHormonesUsed", "_lyleFavored", "_madLiquorDrunk", "_madTeaParty", "_mafiaMiddleFingerRingUsed", "_managerialManipulationUsed", "_mansquitoSerumUsed", "_mapToACandyRichBlockUsed", "_maydayDropped", "_mayoDeviceRented", "_mayoTankSoaked", "_meatballMachineUsed", "_meatifyMatterUsed", "_milkOfMagnesiumUsed", "_mimeArmyShotglassUsed", "_missGravesVermouthDrunk", "_missileLauncherUsed", "_molehillMountainUsed", "_momFoodReceived", "_mrBurnsgerEaten", "_muffinOrderedToday", "_mushroomGardenVisited", "_neverendingPartyToday", "_newYouQuestCompleted", "_olympicSwimmingPool", "_olympicSwimmingPoolItemFound", "_overflowingGiftBasketUsed", "_partyHard", "_pastaAdditive", "_perfectFreezeUsed", "_perfectlyFairCoinUsed", "_petePartyThrown", "_peteRiotIncited", "_photocopyUsed", "_pickyTweezersUsed", "_pingPongGame", "_pirateBellowUsed", "_pirateForkUsed", "_pixelOrbUsed", "_plumbersMushroomStewEaten", "_pneumaticityPotionUsed", "_portableSteamUnitUsed", "_pottedTeaTreeUsed", "_prToday", "_psychoJarFilled", "_psychoJarUsed", "_psychokineticHugUsed", "_rainStickUsed", "_redwoodRainStickUsed", "_replicaSnowconeTomeUsed", "_replicaResolutionLibramUsed", "_replicaSmithsTomeUsed", "_requestSandwichSucceeded", "_rhinestonesAcquired", "_seaJellyHarvested", "_setOfJacksUsed", "_sewingKitUsed", "_sexChanged", "_shadowAffinityToday", "_shadowForestLooted", "_shrubDecorated", "_silverDreadFlaskUsed", "_sitCourseCompleted", "_skateBuff1", "_skateBuff2", "_skateBuff3", "_skateBuff4", "_skateBuff5", "_sleazeAirportToday", "_sobrieTeaUsed", "_softwareGlitchTurnReceived", "_sotParcelReturned", "_spacegateMurderbot", "_spacegateRuins", "_spacegateSpant", "_spacegateToday", "_spacegateVaccine", "_spaghettiBreakfast", "_spaghettiBreakfastEaten", "_spinmasterLatheVisited", "_spinningWheel", "_spookyAirportToday", "_stabonicScrollUsed", "_steelyEyedSquintUsed", "_stenchAirportToday", "_stinkyCheeseBanisherUsed", "_strangeStalagmiteUsed", "_streamsCrossed", "_stuffedPocketwatchUsed", "_styxSprayUsed", "_summonAnnoyanceUsed", "_summonCarrotUsed", "_summonResortPassUsed", "_sweetToothUsed", "_syntheticDogHairPillUsed", "_tacoFlierUsed", "_telegraphOfficeToday", "_templeHiddenPower", "_tempuraAirUsed", "_thesisDelivered", "_timeSpinnerReplicatorUsed", "_toastSummoned", "_tonicDjinn", "_treasuryEliteMeatCollected", "_treasuryHaremMeatCollected", "_trivialAvocationsGame", "_tryptophanDartUsed", "_turtlePowerCast", "_twelveNightEnergyUsed", "_ultraMegaSourBallUsed", "_victorSpoilsUsed", "_villainLairCanLidUsed", "_villainLairColorChoiceUsed", "_villainLairDoorChoiceUsed", "_villainLairFirecrackerUsed", "_villainLairSymbologyChoiceUsed", "_villainLairWebUsed", "_vmaskBanisherUsed", "_voraciTeaUsed", "_volcanoItemRedeemed", "_volcanoSuperduperheatedMetal", "_voteToday", "_VYKEACafeteriaRaided", "_VYKEALoungeRaided", "_walfordQuestStartedToday", "_warbearBankUsed", "_warbearBreakfastMachineUsed", "_warbearGyrocopterUsed", "_warbearSodaMachineUsed", "_wildfireBarrelHarvested", "_witchessBuff", "_workshedItemUsed", "_zombieClover", "_preventScurvy", "lockedItem4637", "lockedItem4638", "lockedItem4639", "lockedItem4646", "lockedItem4647", "unknownRecipe3542", "unknownRecipe3543", "unknownRecipe3544", "unknownRecipe3545", "unknownRecipe3546", "unknownRecipe3547", "unknownRecipe3548", "unknownRecipe3749", "unknownRecipe3751", "unknownRecipe4172", "unknownRecipe4173", "unknownRecipe4174", "unknownRecipe5060", "unknownRecipe5061", "unknownRecipe5062", "unknownRecipe5063", "unknownRecipe5064", "unknownRecipe5066", "unknownRecipe5067", "unknownRecipe5069", "unknownRecipe5070", "unknownRecipe5072", "unknownRecipe5073", "unknownRecipe5670", "unknownRecipe5671", "unknownRecipe6501", "unknownRecipe6564", "unknownRecipe6565", "unknownRecipe6566", "unknownRecipe6567", "unknownRecipe6568", "unknownRecipe6569", "unknownRecipe6570", "unknownRecipe6571", "unknownRecipe6572", "unknownRecipe6573", "unknownRecipe6574", "unknownRecipe6575", "unknownRecipe6576", "unknownRecipe6577", "unknownRecipe6578", "unknownRecipe7752", "unknownRecipe7753", "unknownRecipe7754", "unknownRecipe7755", "unknownRecipe7756", "unknownRecipe7757", "unknownRecipe7758", "unknownRecipe10970", "unknownRecipe10971", "unknownRecipe10972", "unknownRecipe10973", "unknownRecipe10974", "unknownRecipe10975", "unknownRecipe10976", "unknownRecipe10977", "unknownRecipe10978", "unknownRecipe10988", "unknownRecipe10989", "unknownRecipe10990", "unknownRecipe10991", "unknownRecipe10992", "unknownRecipe11000"], numericProperties = ["coinMasterIndex", "dailyDeedsVersion", "defaultDropdown1", "defaultDropdown2", "defaultDropdownSplit", "defaultLimit", "fixedThreadPoolSize", "itemManagerIndex", "lastBuffRequestType", "lastGlobalCounterDay", "lastImageCacheClear", "pingDefaultTestPings", "pingLoginCount", "pingLoginGoal", "pingLoginThreshold", "pingTestPings", "previousUpdateRevision", "relayDelayForSVN", "relaySkillButtonCount", "scriptButtonPosition", "statusDropdown", "svnThreadPoolSize", "toolbarPosition", "_beachTides", "_g9Effect", "8BitBonusTurns", "8BitScore", "addingScrolls", "affirmationCookiesEaten", "aminoAcidsUsed", "antagonisticSnowmanKitCost", "ascensionsToday", "asolDeferredPoints", "asolPointsPigSkinner", "asolPointsCheeseWizard", "asolPointsJazzAgent", "autoAbortThreshold", "autoAntidote", "autoBuyPriceLimit", "autumnatonQuestTurn", "availableCandyCredits", "availableDimes", "availableFunPoints", "availableMrStore2002Credits", "availableQuarters", "availableStoreCredits", "availableSwagger", "averageSwagger", "awolMedicine", "awolPointsBeanslinger", "awolPointsCowpuncher", "awolPointsSnakeoiler", "awolDeferredPointsBeanslinger", "awolDeferredPointsCowpuncher", "awolDeferredPointsSnakeoiler", "awolVenom", "bagOTricksCharges", "ballpitBonus", "bankedKarma", "bartenderTurnsUsed", "basementMallPrices", "basementSafetyMargin", "batmanFundsAvailable", "batmanBonusInitialFunds", "batmanTimeLeft", "bearSwagger", "beeCounter", "beGregariousCharges", "beGregariousFightsLeft", "birdformCold", "birdformHot", "birdformRoc", "birdformSleaze", "birdformSpooky", "birdformStench", "blackBartsBootyCost", "blackPuddingsDefeated", "blackForestProgress", "blankOutUsed", "bloodweiserDrunk", "bondPoints", "bondVillainsDefeated", "boneAbacusVictories", "bookOfFactsGummi", "bookOfFactsPinata", "booPeakProgress", "borisPoints", "breakableHandling", "breakableHandling1964", "breakableHandling9691", "breakableHandling9692", "breakableHandling9699", "breathitinCharges", "brodenBacteria", "brodenSprinkles", "buffBotMessageDisposal", "buffBotPhilanthropyType", "buffJimmyIngredients", "burnoutsDefeated", "burrowgrubSummonsRemaining", "camelSpit", "camerasUsed", "campAwayDecoration", "candyWitchTurnsUsed", "candyWitchCandyTotal", "carboLoading", "catBurglarBankHeists", "cellarLayout", "charitableDonations", "chasmBridgeProgress", "chefTurnsUsed", "chessboardsCleared", "chibiAlignment", "chibiBirthday", "chibiFitness", "chibiIntelligence", "chibiLastVisit", "chibiSocialization", "chilledToTheBone", "cinchoSaltAndLime", "cinderellaMinutesToMidnight", "cinderellaScore", "cocktailSummons", "commerceGhostCombats", "controlPanelOmega", "cornucopiasOpened", "cosmicBowlingBallReturnCombats", "cozyCounter6332", "cozyCounter6333", "cozyCounter6334", "craftingClay", "craftingLeather", "craftingStraw", "crimbo16BeardChakraCleanliness", "crimbo16BootsChakraCleanliness", "crimbo16BungChakraCleanliness", "crimbo16CrimboHatChakraCleanliness", "crimbo16GutsChakraCleanliness", "crimbo16HatChakraCleanliness", "crimbo16JellyChakraCleanliness", "crimbo16LiverChakraCleanliness", "crimbo16NippleChakraCleanliness", "crimbo16NoseChakraCleanliness", "crimbo16ReindeerChakraCleanliness", "crimbo16SackChakraCleanliness", "crimboTrainingSkill", "crimboTreeDays", "cubelingProgress", "currentExtremity", "currentHedgeMazeRoom", "currentMojoFilters", "currentNunneryMeat", "currentPortalEnergy", "currentReplicaStoreYear", "cursedMagnifyingGlassCount", "cyrptAlcoveEvilness", "cyrptCrannyEvilness", "cyrptNicheEvilness", "cyrptNookEvilness", "cyrptTotalEvilness", "darkGyfftePoints", "daycareEquipment", "daycareInstructors", "daycareLastScavenge", "daycareToddlers", "dbNemesisSkill1", "dbNemesisSkill2", "dbNemesisSkill3", "desertExploration", "desktopHeight", "desktopWidth", "dinseyFilthLevel", "dinseyFunProgress", "dinseyNastyBearsDefeated", "dinseySocialJusticeIProgress", "dinseySocialJusticeIIProgress", "dinseyTouristsFed", "dinseyToxicMultiplier", "doctorBagQuestLights", "doctorBagUpgrades", "dreadScroll1", "dreadScroll2", "dreadScroll3", "dreadScroll4", "dreadScroll5", "dreadScroll6", "dreadScroll7", "dreadScroll8", "dripAdventuresSinceAscension", "drippingHallAdventuresSinceAscension", "drippingTreesAdventuresSinceAscension", "drippyBatsUnlocked", "drippyJuice", "drippyOrbsClaimed", "drunkenSwagger", "edDefeatAbort", "edPoints", "eldritchTentaclesFought", "electricKoolAidEaten", "elfGratitude", "encountersUntilDMTChoice", "encountersUntilYachtzeeChoice", "encountersUntilNEPChoice", "encountersUntilSRChoice", "ensorceleeLevel", "entauntaunedColdRes", "essenceOfAnnoyanceCost", "essenceOfBearCost", "extraRolloverAdventures", "falloutShelterLevel", "familiarSweat", "fingernailsClipped", "fistSkillsKnown", "flyeredML", "fossilB", "fossilD", "fossilN", "fossilP", "fossilS", "fossilW", "fratboysDefeated", "frenchGuardTurtlesFreed", "funGuyMansionKills", "garbageChampagneCharge", "garbageFireProgress", "garbageShirtCharge", "garbageTreeCharge", "garlandUpgrades", "getsYouDrunkTurnsLeft", "ghostPepperTurnsLeft", "gingerDigCount", "gingerLawChoice", "gingerMuscleChoice", "gingerTrainScheduleStudies", "gladiatorBallMovesKnown", "gladiatorBladeMovesKnown", "gladiatorNetMovesKnown", "glitchItemCost", "glitchItemImplementationCount", "glitchItemImplementationLevel", "glitchSwagger", "gloverPoints", "gnasirProgress", "goldenMrAccessories", "gongPath", "gooseDronesRemaining", "goreCollected", "gourdItemCount", "greyYouPoints", "grimoire1Summons", "grimoire2Summons", "grimoire3Summons", "grimstoneCharge", "guardTurtlesFreed", "guideToSafariCost", "guyMadeOfBeesCount", "guzzlrBronzeDeliveries", "guzzlrDeliveryProgress", "guzzlrGoldDeliveries", "guzzlrPlatinumDeliveries", "haciendaLayout", "hallowiener8BitRealm", "hallowienerCoinspiracy", "hareMillisecondsSaved", "hareTurnsUsed", "heavyRainsStartingThunder", "heavyRainsStartingRain", "heavyRainsStartingLightning", "heroDonationBoris", "heroDonationJarlsberg", "heroDonationSneakyPete", "hiddenApartmentProgress", "hiddenBowlingAlleyProgress", "hiddenHospitalProgress", "hiddenOfficeProgress", "hiddenTavernUnlock", "highTopPumped", "hippiesDefeated", "holidayHalsBookCost", "holidaySwagger", "homemadeRobotUpgrades", "homebodylCharges", "hpAutoRecovery", "hpAutoRecoveryTarget", "iceSwagger", "jarlsbergPoints", "jungCharge", "junglePuns", "knownAscensions", "kolhsTotalSchoolSpirited", "lastAnticheeseDay", "lastArcadeAscension", "lastBadMoonReset", "lastBangPotionReset", "lastBattlefieldReset", "lastBeardBuff", "lastBreakfast", "lastCartographyBooPeak", "lastCartographyCastleTop", "lastCartographyDarkNeck", "lastCartographyDefiledNook", "lastCartographyFratHouse", "lastCartographyFratHouseVerge", "lastCartographyGuanoJunction", "lastCartographyHauntedBilliards", "lastCartographyHippyCampVerge", "lastCartographyZeppelinProtesters", "lastCastleGroundUnlock", "lastCastleTopUnlock", "lastCellarReset", "lastChanceThreshold", "lastChasmReset", "lastColosseumRoundWon", "lastCouncilVisit", "lastCounterDay", "lastDesertUnlock", "lastDispensaryOpen", "lastDMTDuplication", "lastDwarfFactoryReset", "lastEVHelmetValue", "lastEVHelmetReset", "lastEmptiedStorage", "lastFilthClearance", "lastGoofballBuy", "lastGuildStoreOpen", "lastGuyMadeOfBeesReset", "lastFratboyCall", "lastFriarCeremonyAscension", "lastFriarsElbowNC", "lastFriarsHeartNC", "lastFriarsNeckNC", "lastHippyCall", "lastIslandUnlock", "lastKeyotronUse", "lastKingLiberation", "lastLightsOutTurn", "lastMushroomPlot", "lastMiningReset", "lastNemesisReset", "lastPaperStripReset", "lastPirateEphemeraReset", "lastPirateInsultReset", "lastPlusSignUnlock", "lastQuartetAscension", "lastQuartetRequest", "lastSecondFloorUnlock", "lastShadowForgeUnlockAdventure", "lastSkateParkReset", "lastStillBeatingSpleen", "lastTavernAscension", "lastTavernSquare", "lastTelescopeReset", "lastTempleAdventures", "lastTempleButtonsUnlock", "lastTempleUnlock", "lastThingWithNoNameDefeated", "lastTowelAscension", "lastTr4pz0rQuest", "lastTrainsetConfiguration", "lastVioletFogMap", "lastVoteMonsterTurn", "lastWartDinseyDefeated", "lastWuTangDefeated", "lastYearbookCameraAscension", "lastZapperWand", "lastZapperWandExplosionDay", "lawOfAveragesCost", "legacyPoints", "libramSummons", "lightsOutAutomation", "louvreDesiredGoal", "louvreGoal", "lovebugsAridDesert", "lovebugsBeachBuck", "lovebugsBooze", "lovebugsChroner", "lovebugsCoinspiracy", "lovebugsCyrpt", "lovebugsFreddy", "lovebugsFunFunds", "lovebugsHoboNickel", "lovebugsItemDrop", "lovebugsMeat", "lovebugsMeatDrop", "lovebugsMoxie", "lovebugsMuscle", "lovebugsMysticality", "lovebugsOilPeak", "lovebugsOrcChasm", "lovebugsPowder", "lovebugsWalmart", "lttQuestDifficulty", "lttQuestStageCount", "manaBurnSummonThreshold", "manaBurningThreshold", "manaBurningTrigger", "manorDrawerCount", "manualOfNumberologyCost", "mapToKokomoCost", "masksUnlocked", "maximizerMRUSize", "maximizerCombinationLimit", "maximizerEquipmentLevel", "maximizerEquipmentScope", "maximizerMaxPrice", "maximizerPriceLevel", "maxManaBurn", "mayflyExperience", "mayoLevel", "meansuckerPrice", "merkinVocabularyMastery", "miniAdvClass", "miniMartinisDrunk", "moleTunnelLevel", "mothershipProgress", "mpAutoRecovery", "mpAutoRecoveryTarget", "munchiesPillsUsed", "mushroomGardenCropLevel", "nextParanormalActivity", "nextQuantumFamiliarOwnerId", "nextQuantumFamiliarTurn", "noobPoints", "noobDeferredPoints", "noodleSummons", "nsContestants1", "nsContestants2", "nsContestants3", "nuclearAutumnPoints", "numericSwagger", "nunsVisits", "oilPeakProgress", "optimalSwagger", "optimisticCandleProgress", "palindomeDudesDefeated", "parasolUsed", "pendingMapReflections", "pingpongSkill", "pirateSwagger", "plantingDay", "plumberBadgeCost", "plumberCostumeCost", "plumberPoints", "poolSharkCount", "poolSkill", "primaryLabGooIntensity", "prismaticSummons", "procrastinatorLanguageFluency", "promptAboutCrafting", "puzzleChampBonus", "pyramidPosition", "quantumPoints", "reagentSummons", "reanimatorArms", "reanimatorLegs", "reanimatorSkulls", "reanimatorWeirdParts", "reanimatorWings", "recentLocations", "redSnapperProgress", "relayPort", "relocatePygmyJanitor", "relocatePygmyLawyer", "rockinRobinProgress", "ROMOfOptimalityCost", "rumpelstiltskinKidsRescued", "rumpelstiltskinTurnsUsed", "rwbMonsterCount", "safariSwagger", "sausageGrinderUnits", "schoolOfHardKnocksDiplomaCost", "schoolSwagger", "scrapbookCharges", "screechCombats", "scriptMRULength", "seaodesFound", "SeasoningSwagger", "sexChanges", "shenInitiationDay", "shockingLickCharges", "singleFamiliarRun", "skillBurn3", "skillBurn90", "skillBurn153", "skillBurn154", "skillBurn155", "skillBurn1019", "skillBurn5017", "skillBurn6014", "skillBurn6015", "skillBurn6016", "skillBurn6020", "skillBurn6021", "skillBurn6022", "skillBurn6023", "skillBurn6024", "skillBurn6026", "skillBurn6028", "skillBurn7323", "skillBurn14008", "skillBurn14028", "skillBurn14038", "skillBurn15011", "skillBurn15028", "skillBurn17005", "skillBurn22034", "skillBurn22035", "skillBurn23301", "skillBurn23302", "skillBurn23303", "skillBurn23304", "skillBurn23305", "skillBurn23306", "skillLevel46", "skillLevel47", "skillLevel48", "skillLevel117", "skillLevel118", "skillLevel121", "skillLevel128", "skillLevel134", "skillLevel144", "skillLevel180", "skillLevel188", "skillLevel227", "skillLevel7254", "slimelingFullness", "slimelingStacksDropped", "slimelingStacksDue", "smoresEaten", "smutOrcNoncombatProgress", "sneakyPetePoints", "snojoMoxieWins", "snojoMuscleWins", "snojoMysticalityWins", "sourceAgentsDefeated", "sourceEnlightenment", "sourceInterval", "sourcePoints", "sourceTerminalGram", "sourceTerminalPram", "sourceTerminalSpam", "spaceBabyLanguageFluency", "spacePirateLanguageFluency", "spelunkyNextNoncombat", "spelunkySacrifices", "spelunkyWinCount", "spookyPuttyCopiesMade", "spookyVHSTapeMonsterTurn", "statbotUses", "sugarCounter4178", "sugarCounter4179", "sugarCounter4180", "sugarCounter4181", "sugarCounter4182", "sugarCounter4183", "sugarCounter4191", "summonAnnoyanceCost", "sweat", "tacoDanCocktailSauce", "tacoDanFishMeat", "tavernLayout", "telescopeUpgrades", "tempuraSummons", "timeSpinnerMedals", "timesRested", "tomeSummons", "totalCharitableDonations", "trainsetPosition", "turtleBlessingTurns", "twinPeakProgress", "twoCRSPoints", "unicornHornInflation", "universalSeasoningCost", "usable1HWeapons", "usable1xAccs", "usable2HWeapons", "usable3HWeapons", "usableAccessories", "usableHats", "usableOffhands", "usableOther", "usablePants", "usableShirts", "valueOfAdventure", "valueOfInventory", "valueOfStill", "valueOfTome", "vintnerCharge", "vintnerWineLevel", "violetFogGoal", "walfordBucketProgress", "warehouseProgress", "welcomeBackAdv", "whetstonesUsed", "wolfPigsEvicted", "wolfTurnsUsed", "writingDesksDefeated", "xoSkeleltonXProgress", "xoSkeleltonOProgress", "yearbookCameraAscensions", "yearbookCameraUpgrades", "youRobotBody", "youRobotBottom", "youRobotLeft", "youRobotPoints", "youRobotRight", "youRobotTop", "zeppelinProtestors", "zigguratLianas", "zombiePoints", "_absintheDrops", "_abstractionDropsCrown", "_aguaDrops", "_xenomorphCharge", "_ancestralRecallCasts", "_antihangoverBonus", "_astralDrops", "_augSkillsCast", "_autumnatonQuests", "_backUpUses", "_badlyRomanticArrows", "_badgerCharge", "_balefulHowlUses", "_banderRunaways", "_bastilleCheese", "_bastilleGames", "_bastilleGameTurn", "_bastilleLastCheese", "_beanCannonUses", "_bearHugs", "_beerLensDrops", "_bellydancerPickpockets", "_benettonsCasts", "_birdsSoughtToday", "_bookOfFactsWishes", "_bookOfFactsTatters", "_boomBoxFights", "_boomBoxSongsLeft", "_bootStomps", "_boxingGloveArrows", "_brickoEyeSummons", "_brickoFights", "_campAwayCloudBuffs", "_campAwaySmileBuffs", "_candySummons", "_captainHagnkUsed", "_carnieCandyDrops", "_carrotNoseDrops", "_catBurglarCharge", "_catBurglarHeistsComplete", "_cheerleaderSteam", "_chestXRayUsed", "_chibiAdventures", "_chipBags", "_chocolateCigarsUsed", "_chocolateCoveredPingPongBallsUsed", "_chocolateSculpturesUsed", "_chocolatesUsed", "_chronolithActivations", "_chronolithNextCost", "_cinchUsed", "_cinchoRests", "_circadianRhythmsAdventures", "_clanFortuneConsultUses", "_clipartSummons", "_cloversPurchased", "_coldMedicineConsults", "_coldMedicineEquipmentTaken", "_companionshipCasts", "_cookbookbatCrafting", "_cosmicBowlingSkillsUsed", "_crimbo21ColdResistance", "_dailySpecialPrice", "_daycareGymScavenges", "_daycareRecruits", "_deckCardsDrawn", "_deluxeKlawSummons", "_demandSandwich", "_detectiveCasesCompleted", "_disavowed", "_dnaPotionsMade", "_donhosCasts", "_douseFoeUses", "_dreamJarDrops", "_drunkPygmyBanishes", "_edDefeats", "_edLashCount", "_elronsCasts", "_enamorangs", "_energyCollected", "_expertCornerCutterUsed", "_favorRareSummons", "_feastUsed", "_feelinTheRhythm", "_feelPrideUsed", "_feelExcitementUsed", "_feelHatredUsed", "_feelLonelyUsed", "_feelNervousUsed", "_feelEnvyUsed", "_feelDisappointedUsed", "_feelSuperiorUsed", "_feelLostUsed", "_feelNostalgicUsed", "_feelPeacefulUsed", "_fingertrapArrows", "_fireExtinguisherCharge", "_fragrantHerbsUsed", "_freeBeachWalksUsed", "_frButtonsPressed", "_fudgeWaspFights", "_gapBuffs", "_garbageFireDrops", "_garbageFireDropsCrown", "_genieFightsUsed", "_genieWishesUsed", "_gibbererAdv", "_gibbererCharge", "_gingerbreadCityTurns", "_glarkCableUses", "_glitchMonsterFights", "_gnomeAdv", "_godLobsterFights", "_goldenMoneyCharge", "_gongDrops", "_gothKidCharge", "_gothKidFights", "_greyYouAdventures", "_grimBrotherCharge", "_grimFairyTaleDrops", "_grimFairyTaleDropsCrown", "_grimoireConfiscatorSummons", "_grimoireGeekySummons", "_grimstoneMaskDrops", "_grimstoneMaskDropsCrown", "_grooseCharge", "_grooseDrops", "_grubbyWoolDrops", "_guzzlrDeliveries", "_guzzlrGoldDeliveries", "_guzzlrPlatinumDeliveries", "_hareAdv", "_hareCharge", "_highTopPumps", "_hipsterAdv", "_hoardedCandyDropsCrown", "_hoboUnderlingSummons", "_holoWristDrops", "_holoWristProgress", "_hotAshesDrops", "_hotJellyUses", "_hotTubSoaks", "_humanMuskUses", "_iceballUses", "_inigosCasts", "_jerksHealthMagazinesUsed", "_jiggleCheese", "_jiggleCream", "_jiggleLife", "_jiggleSteak", "_jitbCharge", "_juneCleaverFightsLeft", "_juneCleaverEncounters", "_juneCleaverStench", "_juneCleaverSpooky", "_juneCleaverSleaze", "_juneCleaverHot", "_juneCleaverCold", "_juneCleaverSkips", "_jungDrops", "_kgbClicksUsed", "_kgbDispenserUses", "_kgbTranquilizerDartUses", "_klawSummons", "_kloopCharge", "_kloopDrops", "_kolhsAdventures", "_kolhsSavedByTheBell", "_lastDailyDungeonRoom", "_lastSausageMonsterTurn", "_lastZomboEye", "_latteRefillsUsed", "_leafblowerML", "_legionJackhammerCrafting", "_llamaCharge", "_longConUsed", "_lovebugsBeachBuck", "_lovebugsChroner", "_lovebugsCoinspiracy", "_lovebugsFreddy", "_lovebugsFunFunds", "_lovebugsHoboNickel", "_lovebugsWalmart", "_loveChocolatesUsed", "_lynyrdSnareUses", "_machineTunnelsAdv", "_macrometeoriteUses", "_mafiaThumbRingAdvs", "_mapToACandyRichBlockDrops", "_mayflowerDrops", "_mayflySummons", "_mediumSiphons", "_meteoriteAdesUsed", "_meteorShowerUses", "_micrometeoriteUses", "_mildEvilPerpetrated", "_miniMartiniDrops", "_monkeyPawWishesUsed", "_monsterHabitatsFightsLeft", "_monsterHabitatsRecalled", "_monstersMapped", "_mushroomGardenFights", "_nanorhinoCharge", "_navelRunaways", "_neverendingPartyFreeTurns", "_newYouQuestSharpensDone", "_newYouQuestSharpensToDo", "_nextColdMedicineConsult", "_nextQuantumAlignment", "_nightmareFuelCharges", "_noobSkillCount", "_nuclearStockpileUsed", "_oilExtracted", "_olfactionsUsed", "_optimisticCandleDropsCrown", "_oreDropsCrown", "_otoscopeUsed", "_oysterEggsFound", "_pantsgivingBanish", "_pantsgivingCount", "_pantsgivingCrumbs", "_pantsgivingFullness", "_pasteDrops", "_peteJukeboxFixed", "_peteJumpedShark", "_petePeeledOut", "_pieDrops", "_piePartsCount", "_pixieCharge", "_pocketProfessorLectures", "_poisonArrows", "_pokeGrowFertilizerDrops", "_poolGames", "_powderedGoldDrops", "_powderedMadnessUses", "_powerfulGloveBatteryPowerUsed", "_powerPillDrops", "_powerPillUses", "_precisionCasts", "_questPartyFairItemsOpened", "_radlibSummons", "_raindohCopiesMade", "_rapidPrototypingUsed", "_raveStealCount", "_reflexHammerUsed", "_resolutionAdv", "_resolutionRareSummons", "_riftletAdv", "_robinEggDrops", "_roboDrops", "_rogueProgramCharge", "_romanticFightsLeft", "_saberForceMonsterCount", "_saberForceUses", "_saberMod", "_saltGrainsConsumed", "_sandwormCharge", "_saplingsPlanted", "_sausageFights", "_sausagesEaten", "_sausagesMade", "_sealFigurineUses", "_sealScreeches", "_sealsSummoned", "_shadowBricksUsed", "_shadowRiftCombats", "_shatteringPunchUsed", "_shortOrderCookCharge", "_shrubCharge", "_sloppyDinerBeachBucks", "_smilesOfMrA", "_smithsnessSummons", "_snojoFreeFights", "_snojoParts", "_snokebombUsed", "_snowconeSummons", "_snowglobeDrops", "_snowSuitCount", "_sourceTerminalDigitizeMonsterCount", "_sourceTerminalDigitizeUses", "_sourceTerminalDuplicateUses", "_sourceTerminalEnhanceUses", "_sourceTerminalExtrudes", "_sourceTerminalPortscanUses", "_spaceFurDropsCrown", "_spacegatePlanetIndex", "_spacegateTurnsLeft", "_spaceJellyfishDrops", "_speakeasyDrinksDrunk", "_speakeasyFreeFights", "_spelunkerCharges", "_spelunkingTalesDrops", "_spikolodonSpikeUses", "_spookyJellyUses", "_stackLumpsUses", "_steamCardDrops", "_stickerSummons", "_stinkyCheeseCount", "_stressBallSqueezes", "_sugarSummons", "_sweatOutSomeBoozeUsed", "_taffyRareSummons", "_taffyYellowSummons", "_thanksgettingFoodsEaten", "_thingfinderCasts", "_thinknerdPackageDrops", "_thorsPliersCrafting", "_timeHelmetAdv", "_timeSpinnerMinutesUsed", "_tokenDrops", "_transponderDrops", "_turkeyBlastersUsed", "_turkeyBooze", "_turkeyMuscle", "_turkeyMyst", "_turkeyMoxie", "_unaccompaniedMinerUsed", "_unconsciousCollectiveCharge", "_universalSeasoningsUsed", "_universeCalculated", "_universeImploded", "_usedReplicaBatoomerang", "_vampyreCloakeFormUses", "_villainLairProgress", "_vitachocCapsulesUsed", "_vmaskAdv", "_voidFreeFights", "_volcanoItem1", "_volcanoItem2", "_volcanoItem3", "_volcanoItemCount1", "_volcanoItemCount2", "_volcanoItemCount3", "_voteFreeFights", "_VYKEACompanionLevel", "_warbearAutoAnvilCrafting", "_waxGlobDrops", "_whiteRiceDrops", "_witchessFights", "_xoHugsUsed", "_yellowPixelDropsCrown", "_zapCount", "_zombieSmashPocketsUsed"], monsterProperties = ["beGregariousMonster", "cameraMonster", "chateauMonster", "clumsinessGroveBoss", "crappyCameraMonster", "crudeMonster", "enamorangMonster", "envyfishMonster", "glacierOfJerksBoss", "holdHandsMonster", "iceSculptureMonster", "lastCopyableMonster", "longConMonster", "maelstromOfLoversBoss", "makeFriendsMonster", "merkinLockkeyMonster", "monkeyPointMonster", "motifMonster", "nosyNoseMonster", "olfactedMonster", "photocopyMonster", "rainDohMonster", "romanticTarget", "rufusDesiredEntity", "rwbMonster", "screencappedMonster", "spookyPuttyMonster", "spookyVHSTapeMonster", "stenchCursedMonster", "superficiallyInterestedMonster", "waxMonster", "yearbookCameraTarget", "_gallapagosMonster", "_jiggleCreamedMonster", "_latteMonster", "_monsterHabitatsMonster", "_nanorhinoBanishedMonster", "_newYouQuestMonster", "_relativityMonster", "_saberForceMonster", "_sourceTerminalDigitizeMonster", "_voteMonster"], locationProperties = ["autumnatonQuestLocation", "currentJunkyardLocation", "doctorBagQuestLocation", "ghostLocation", "guzzlrQuestLocation", "nextSpookyravenElizabethRoom", "nextSpookyravenStephenRoom", "rwbLocation", "sourceOracleTarget", "_floundryBassLocation", "_floundryCarpLocation", "_floundryCodLocation", "_floundryHatchetfishLocation", "_floundryTroutLocation", "_floundryTunaLocation", "_sotParcelLocation"], stringProperties = ["autoLogin", "browserBookmarks", "chatFontSize", "combatHotkey0", "combatHotkey1", "combatHotkey2", "combatHotkey3", "combatHotkey4", "combatHotkey5", "combatHotkey6", "combatHotkey7", "combatHotkey8", "combatHotkey9", "commandLineNamespace", "dailyDeedsOptions", "defaultBorderColor", "displayName", "externalEditor", "getBreakfast", "headerStates", "highlightList", "http.proxyHost", "http.proxyPassword", "http.proxyPort", "http.proxyUser", "https.proxyHost", "https.proxyPassword", "https.proxyPort", "https.proxyUser", "initialDesktop", "initialFrames", "lastRelayUpdate", "lastUserAgent", "lastUsername", "logPreferenceChangeFilter", "loginScript", "loginServerName", "loginWindowLogo", "logoutScript", "pingDefaultTestPage", "pingLatest", "pingLoginAbort", "pingLoginCheck", "pingLoginFail", "pingLongest", "pingShortest", "pingTestPage", "previousNotifyList", "previousUpdateVersion", "saveState", "saveStateActive", "scriptList", "swingLookAndFeel", "userAgent", "8BitColor", "afterAdventureScript", "autoOlfact", "autoPutty", "autumnatonUpgrades", "backupCameraMode", "banishedMonsters", "banishedPhyla", "banishingShoutMonsters", "batmanStats", "batmanZone", "batmanUpgrades", "battleAction", "beachHeadsUnlocked", "beforePVPScript", "betweenBattleScript", "boomBoxSong", "breakfastAlways", "breakfastHardcore", "breakfastSoftcore", "buffBotCasting", "buyScript", "cargoPocketsEmptied", "cargoPocketScraps", "chatbotScript", "chatPlayerScript", "chibiName", "choiceAdventureScript", "chosenTrip", "clanFortuneReply1", "clanFortuneReply2", "clanFortuneReply3", "clanFortuneWord1", "clanFortuneWord2", "clanFortuneWord3", "commerceGhostItem", "counterScript", "copperheadClubHazard", "crimbotChassis", "crimbotArm", "crimbotPropulsion", "crystalBallPredictions", "csServicesPerformed", "currentAstralTrip", "currentDistillateMods", "currentEasyBountyItem", "currentHardBountyItem", "currentHippyStore", "currentJunkyardTool", "currentLlamaForm", "currentMood", "currentPVPSeason", "currentPvpVictories", "currentSpecialBountyItem", "currentSITSkill", "customCombatScript", "cyrusAdjectives", "defaultFlowerLossMessage", "defaultFlowerWinMessage", "demonName1", "demonName2", "demonName3", "demonName4", "demonName5", "demonName6", "demonName7", "demonName8", "demonName9", "demonName10", "demonName11", "demonName12", "demonName13", "dinseyGatorStenchDamage", "dinseyRollercoasterStats", "doctorBagQuestItem", "dolphinItem", "duckAreasCleared", "duckAreasSelected", "edPiece", "enamorangMonsterTurn", "ensorcelee", "EVEDirections", "extraCosmeticModifiers", "familiarScript", "forbiddenStores", "gameProBossSpecialPower", "gooseReprocessed", "grimoireSkillsHardcore", "grimoireSkillsSoftcore", "grimstoneMaskPath", "guzzlrQuestClient", "guzzlrQuestBooze", "guzzlrQuestTier", "harvestGardenHardcore", "harvestGardenSoftcore", "hpAutoRecoveryItems", "invalidBuffMessage", "jickSwordModifier", "juneCleaverQueue", "kingLiberatedScript", "lassoTraining", "lastAdventure", "lastBangPotion819", "lastBangPotion820", "lastBangPotion821", "lastBangPotion822", "lastBangPotion823", "lastBangPotion824", "lastBangPotion825", "lastBangPotion826", "lastBangPotion827", "lastChanceBurn", "lastChessboard", "lastCombatEnvironments", "lastDwarfDiceRolls", "lastDwarfDigitRunes", "lastDwarfEquipmentRunes", "lastDwarfFactoryItem118", "lastDwarfFactoryItem119", "lastDwarfFactoryItem120", "lastDwarfFactoryItem360", "lastDwarfFactoryItem361", "lastDwarfFactoryItem362", "lastDwarfFactoryItem363", "lastDwarfFactoryItem364", "lastDwarfFactoryItem365", "lastDwarfFactoryItem910", "lastDwarfFactoryItem3199", "lastDwarfOfficeItem3208", "lastDwarfOfficeItem3209", "lastDwarfOfficeItem3210", "lastDwarfOfficeItem3211", "lastDwarfOfficeItem3212", "lastDwarfOfficeItem3213", "lastDwarfOfficeItem3214", "lastDwarfOreRunes", "lastDwarfHopper1", "lastDwarfHopper2", "lastDwarfHopper3", "lastDwarfHopper4", "lastEncounter", "lastMacroError", "lastMessageId", "lastPaperStrip3144", "lastPaperStrip4138", "lastPaperStrip4139", "lastPaperStrip4140", "lastPaperStrip4141", "lastPaperStrip4142", "lastPaperStrip4143", "lastPaperStrip4144", "lastPirateEphemera", "lastPorkoBoard", "lastPorkoPayouts", "lastPorkoExpected", "lastSlimeVial3885", "lastSlimeVial3886", "lastSlimeVial3887", "lastSlimeVial3888", "lastSlimeVial3889", "lastSlimeVial3890", "lastSlimeVial3891", "lastSlimeVial3892", "lastSlimeVial3893", "lastSlimeVial3894", "lastSlimeVial3895", "lastSlimeVial3896", "latteIngredients", "latteModifier", "latteUnlocks", "ledCandleMode", "libramSkillsHardcore", "libramSkillsSoftcore", "louvreOverride", "lovePotion", "lttQuestName", "maximizerList", "maximizerMRUList", "mayoInMouth", "mayoMinderSetting", "merkinQuestPath", "mineLayout1", "mineLayout2", "mineLayout3", "mineLayout4", "mineLayout5", "mineLayout6", "mpAutoRecoveryItems", "muffinOnOrder", "nextAdventure", "nextDistillateMods", "nextQuantumFamiliarName", "nextQuantumFamiliarOwner", "nsChallenge2", "nsChallenge3", "nsChallenge4", "nsChallenge5", "nsTowerDoorKeysUsed", "oceanAction", "oceanDestination", "parkaMode", "pastaThrall1", "pastaThrall2", "pastaThrall3", "pastaThrall4", "pastaThrall5", "pastaThrall6", "pastaThrall7", "pastaThrall8", "peteMotorbikeTires", "peteMotorbikeGasTank", "peteMotorbikeHeadlight", "peteMotorbikeCowling", "peteMotorbikeMuffler", "peteMotorbikeSeat", "pieStuffing", "plantingDate", "plantingLength", "plantingScript", "plumberCostumeWorn", "pokefamBoosts", "postAscensionScript", "preAscensionScript", "questClumsinessGrove", "questDoctorBag", "questECoBucket", "questESlAudit", "questESlBacteria", "questESlCheeseburger", "questESlCocktail", "questESlDebt", "questESlFish", "questESlMushStash", "questESlSalt", "questESlSprinkles", "questESpClipper", "questESpEVE", "questESpFakeMedium", "questESpGore", "questESpJunglePun", "questESpOutOfOrder", "questESpSerum", "questESpSmokes", "questEStFishTrash", "questEStGiveMeFuel", "questEStNastyBears", "questEStSocialJusticeI", "questEStSocialJusticeII", "questEStSuperLuber", "questEStWorkWithFood", "questEStZippityDooDah", "questEUNewYou", "questF01Primordial", "questF02Hyboria", "questF03Future", "questF04Elves", "questF05Clancy", "questG01Meatcar", "questG02Whitecastle", "questG03Ego", "questG04Nemesis", "questG05Dark", "questG06Delivery", "questG07Myst", "questG08Moxie", "questG09Muscle", "questGlacierOfJerks", "questGuzzlr", "questI01Scapegoat", "questI02Beat", "questL02Larva", "questL03Rat", "questL04Bat", "questL05Goblin", "questL06Friar", "questL07Cyrptic", "questL08Trapper", "questL09Topping", "questL10Garbage", "questL11Black", "questL11Business", "questL11Curses", "questL11Desert", "questL11Doctor", "questL11MacGuffin", "questL11Manor", "questL11Palindome", "questL11Pyramid", "questL11Ron", "questL11Shen", "questL11Spare", "questL11Worship", "questL12HippyFrat", "questL12War", "questL13Final", "questL13Warehouse", "questLTTQuestByWire", "questM01Untinker", "questM02Artist", "questM03Bugbear", "questM05Toot", "questM06Gourd", "questM07Hammer", "questM08Baker", "questM09Rocks", "questM10Azazel", "questM11Postal", "questM12Pirate", "questM13Escape", "questM14Bounty", "questM15Lol", "questM16Temple", "questM17Babies", "questM18Swamp", "questM19Hippy", "questM20Necklace", "questM21Dance", "questM22Shirt", "questM23Meatsmith", "questM24Doc", "questM25Armorer", "questM26Oracle", "questMaelstromOfLovers", "questPAGhost", "questRufus", "questS01OldGuy", "questS02Monkees", "raveCombo1", "raveCombo2", "raveCombo3", "raveCombo4", "raveCombo5", "raveCombo6", "recoveryScript", "relayCounters", "retroCapeSuperhero", "retroCapeWashingInstructions", "royalty", "rufusDesiredArtifact", "rufusDesiredItems", "rufusQuestTarget", "rufusQuestType", "scriptMRUList", "seahorseName", "shadowLabyrinthGoal", "shadowRiftIngress", "shenQuestItem", "shrubGarland", "shrubGifts", "shrubLights", "shrubTopper", "sideDefeated", "sidequestArenaCompleted", "sidequestFarmCompleted", "sidequestJunkyardCompleted", "sidequestLighthouseCompleted", "sidequestNunsCompleted", "sidequestOrchardCompleted", "skateParkStatus", "snowsuit", "sourceTerminalChips", "sourceTerminalEducate1", "sourceTerminalEducate2", "sourceTerminalEnquiry", "sourceTerminalEducateKnown", "sourceTerminalEnhanceKnown", "sourceTerminalEnquiryKnown", "sourceTerminalExtrudeKnown", "spadingData", "spadingScript", "speakeasyName", "spelunkyStatus", "spelunkyUpgrades", "spookyravenRecipeUsed", "stationaryButton1", "stationaryButton2", "stationaryButton3", "stationaryButton4", "stationaryButton5", "streamCrossDefaultTarget", "sweetSynthesisBlacklist", "telescope1", "telescope2", "telescope3", "telescope4", "telescope5", "testudinalTeachings", "textColors", "thanksMessage", "tomeSkillsHardcore", "tomeSkillsSoftcore", "trackVoteMonster", "trainsetConfiguration", "trapperOre", "umbrellaState", "umdLastObtained", "vintnerWineEffect", "vintnerWineName", "vintnerWineType", "violetFogLayout", "volcanoMaze1", "volcanoMaze2", "volcanoMaze3", "volcanoMaze4", "volcanoMaze5", "walfordBucketItem", "warProgress", "watchedPreferences", "workteaClue", "yourFavoriteBird", "yourFavoriteBirdMods", "youRobotCPUUpgrades", "_bastilleBoosts", "_bastilleChoice1", "_bastilleChoice2", "_bastilleChoice3", "_bastilleCurrentStyles", "_bastilleEnemyCastle", "_bastilleEnemyName", "_bastilleLastBattleResults", "_bastilleLastEncounter", "_bastilleStats", "_beachHeadsUsed", "_beachLayout", "_beachMinutes", "_birdOfTheDay", "_birdOfTheDayMods", "_bittycar", "_campAwaySmileBuffSign", "_citizenZone", "_citizenZoneMods", "_cloudTalkMessage", "_cloudTalkSmoker", "_coatOfPaintModifier", "_dailySpecial", "_deckCardsSeen", "_feastedFamiliars", "_floristPlantsUsed", "_frAreasUnlocked", "_frHoursLeft", "_frMonstersKilled", "_horsery", "_horseryCrazyMox", "_horseryCrazyMus", "_horseryCrazyMys", "_horseryCrazyName", "_horseryCurrentName", "_horseryDarkName", "_horseryNormalName", "_horseryPaleName", "_jickJarAvailable", "_jiggleCheesedMonsters", "_lastCombatStarted", "_lastPirateRealmIsland", "_locketMonstersFought", "_mummeryMods", "_mummeryUses", "_newYouQuestSkill", "_noHatModifier", "_pantogramModifier", "_pottedPowerPlant", "_questESp", "_questPartyFair", "_questPartyFairProgress", "_questPartyFairQuest", "_roboDrinks", "_roninStoragePulls", "_spacegateAnimalLife", "_spacegateCoordinates", "_spacegateGear", "_spacegateHazards", "_spacegateIntelligentLife", "_spacegatePlanetName", "_spacegatePlantLife", "_stolenAccordions", "_tempRelayCounters", "_timeSpinnerFoodAvailable", "_unknownEasyBountyItem", "_unknownHardBountyItem", "_unknownSpecialBountyItem", "_untakenEasyBountyItem", "_untakenHardBountyItem", "_untakenSpecialBountyItem", "_userMods", "_villainLairColor", "_villainLairKey", "_voteLocal1", "_voteLocal2", "_voteLocal3", "_voteLocal4", "_voteMonster1", "_voteMonster2", "_voteModifier", "_VYKEACompanionType", "_VYKEACompanionRune", "_VYKEACompanionName"], numericOrStringProperties = ["statusEngineering", "statusGalley", "statusMedbay", "statusMorgue", "statusNavigation", "statusScienceLab", "statusSonar", "statusSpecialOps", "statusWasteProcessing", "choiceAdventure2", "choiceAdventure3", "choiceAdventure4", "choiceAdventure5", "choiceAdventure6", "choiceAdventure7", "choiceAdventure8", "choiceAdventure9", "choiceAdventure10", "choiceAdventure11", "choiceAdventure12", "choiceAdventure14", "choiceAdventure15", "choiceAdventure16", "choiceAdventure17", "choiceAdventure18", "choiceAdventure19", "choiceAdventure20", "choiceAdventure21", "choiceAdventure22", "choiceAdventure23", "choiceAdventure24", "choiceAdventure25", "choiceAdventure26", "choiceAdventure27", "choiceAdventure28", "choiceAdventure29", "choiceAdventure40", "choiceAdventure41", "choiceAdventure42", "choiceAdventure45", "choiceAdventure46", "choiceAdventure47", "choiceAdventure71", "choiceAdventure72", "choiceAdventure73", "choiceAdventure74", "choiceAdventure75", "choiceAdventure76", "choiceAdventure77", "choiceAdventure86", "choiceAdventure87", "choiceAdventure88", "choiceAdventure89", "choiceAdventure90", "choiceAdventure91", "choiceAdventure105", "choiceAdventure106", "choiceAdventure107", "choiceAdventure108", "choiceAdventure109", "choiceAdventure110", "choiceAdventure111", "choiceAdventure112", "choiceAdventure113", "choiceAdventure114", "choiceAdventure115", "choiceAdventure116", "choiceAdventure117", "choiceAdventure118", "choiceAdventure120", "choiceAdventure123", "choiceAdventure125", "choiceAdventure126", "choiceAdventure127", "choiceAdventure129", "choiceAdventure131", "choiceAdventure132", "choiceAdventure135", "choiceAdventure136", "choiceAdventure137", "choiceAdventure138", "choiceAdventure139", "choiceAdventure140", "choiceAdventure141", "choiceAdventure142", "choiceAdventure143", "choiceAdventure144", "choiceAdventure145", "choiceAdventure146", "choiceAdventure147", "choiceAdventure148", "choiceAdventure149", "choiceAdventure151", "choiceAdventure152", "choiceAdventure153", "choiceAdventure154", "choiceAdventure155", "choiceAdventure156", "choiceAdventure157", "choiceAdventure158", "choiceAdventure159", "choiceAdventure160", "choiceAdventure161", "choiceAdventure162", "choiceAdventure163", "choiceAdventure164", "choiceAdventure165", "choiceAdventure166", "choiceAdventure167", "choiceAdventure168", "choiceAdventure169", "choiceAdventure170", "choiceAdventure171", "choiceAdventure172", "choiceAdventure177", "choiceAdventure178", "choiceAdventure180", "choiceAdventure181", "choiceAdventure182", "choiceAdventure184", "choiceAdventure185", "choiceAdventure186", "choiceAdventure187", "choiceAdventure188", "choiceAdventure189", "choiceAdventure191", "choiceAdventure197", "choiceAdventure198", "choiceAdventure199", "choiceAdventure200", "choiceAdventure201", "choiceAdventure202", "choiceAdventure203", "choiceAdventure204", "choiceAdventure205", "choiceAdventure206", "choiceAdventure207", "choiceAdventure208", "choiceAdventure211", "choiceAdventure212", "choiceAdventure213", "choiceAdventure214", "choiceAdventure215", "choiceAdventure216", "choiceAdventure217", "choiceAdventure218", "choiceAdventure219", "choiceAdventure220", "choiceAdventure221", "choiceAdventure222", "choiceAdventure223", "choiceAdventure224", "choiceAdventure225", "choiceAdventure230", "choiceAdventure272", "choiceAdventure273", "choiceAdventure276", "choiceAdventure277", "choiceAdventure278", "choiceAdventure279", "choiceAdventure280", "choiceAdventure281", "choiceAdventure282", "choiceAdventure283", "choiceAdventure284", "choiceAdventure285", "choiceAdventure286", "choiceAdventure287", "choiceAdventure288", "choiceAdventure289", "choiceAdventure290", "choiceAdventure291", "choiceAdventure292", "choiceAdventure293", "choiceAdventure294", "choiceAdventure295", "choiceAdventure296", "choiceAdventure297", "choiceAdventure298", "choiceAdventure299", "choiceAdventure302", "choiceAdventure303", "choiceAdventure304", "choiceAdventure305", "choiceAdventure306", "choiceAdventure307", "choiceAdventure308", "choiceAdventure309", "choiceAdventure310", "choiceAdventure311", "choiceAdventure317", "choiceAdventure318", "choiceAdventure319", "choiceAdventure320", "choiceAdventure321", "choiceAdventure322", "choiceAdventure326", "choiceAdventure327", "choiceAdventure328", "choiceAdventure329", "choiceAdventure330", "choiceAdventure331", "choiceAdventure332", "choiceAdventure333", "choiceAdventure334", "choiceAdventure335", "choiceAdventure336", "choiceAdventure337", "choiceAdventure338", "choiceAdventure339", "choiceAdventure340", "choiceAdventure341", "choiceAdventure342", "choiceAdventure343", "choiceAdventure344", "choiceAdventure345", "choiceAdventure346", "choiceAdventure347", "choiceAdventure348", "choiceAdventure349", "choiceAdventure350", "choiceAdventure351", "choiceAdventure352", "choiceAdventure353", "choiceAdventure354", "choiceAdventure355", "choiceAdventure356", "choiceAdventure357", "choiceAdventure358", "choiceAdventure360", "choiceAdventure361", "choiceAdventure362", "choiceAdventure363", "choiceAdventure364", "choiceAdventure365", "choiceAdventure366", "choiceAdventure367", "choiceAdventure372", "choiceAdventure376", "choiceAdventure387", "choiceAdventure388", "choiceAdventure389", "choiceAdventure390", "choiceAdventure391", "choiceAdventure392", "choiceAdventure393", "choiceAdventure395", "choiceAdventure396", "choiceAdventure397", "choiceAdventure398", "choiceAdventure399", "choiceAdventure400", "choiceAdventure401", "choiceAdventure402", "choiceAdventure403", "choiceAdventure423", "choiceAdventure424", "choiceAdventure425", "choiceAdventure426", "choiceAdventure427", "choiceAdventure428", "choiceAdventure429", "choiceAdventure430", "choiceAdventure431", "choiceAdventure432", "choiceAdventure433", "choiceAdventure435", "choiceAdventure438", "choiceAdventure439", "choiceAdventure442", "choiceAdventure444", "choiceAdventure445", "choiceAdventure446", "choiceAdventure447", "choiceAdventure448", "choiceAdventure449", "choiceAdventure451", "choiceAdventure452", "choiceAdventure453", "choiceAdventure454", "choiceAdventure455", "choiceAdventure456", "choiceAdventure457", "choiceAdventure458", "choiceAdventure460", "choiceAdventure461", "choiceAdventure462", "choiceAdventure463", "choiceAdventure464", "choiceAdventure465", "choiceAdventure467", "choiceAdventure468", "choiceAdventure469", "choiceAdventure470", "choiceAdventure471", "choiceAdventure472", "choiceAdventure473", "choiceAdventure474", "choiceAdventure475", "choiceAdventure477", "choiceAdventure478", "choiceAdventure480", "choiceAdventure483", "choiceAdventure484", "choiceAdventure485", "choiceAdventure486", "choiceAdventure488", "choiceAdventure489", "choiceAdventure490", "choiceAdventure491", "choiceAdventure496", "choiceAdventure497", "choiceAdventure502", "choiceAdventure503", "choiceAdventure504", "choiceAdventure505", "choiceAdventure506", "choiceAdventure507", "choiceAdventure509", "choiceAdventure510", "choiceAdventure511", "choiceAdventure512", "choiceAdventure513", "choiceAdventure514", "choiceAdventure515", "choiceAdventure517", "choiceAdventure518", "choiceAdventure519", "choiceAdventure521", "choiceAdventure522", "choiceAdventure523", "choiceAdventure527", "choiceAdventure528", "choiceAdventure529", "choiceAdventure530", "choiceAdventure531", "choiceAdventure532", "choiceAdventure533", "choiceAdventure534", "choiceAdventure535", "choiceAdventure536", "choiceAdventure538", "choiceAdventure539", "choiceAdventure542", "choiceAdventure543", "choiceAdventure544", "choiceAdventure546", "choiceAdventure548", "choiceAdventure549", "choiceAdventure550", "choiceAdventure551", "choiceAdventure552", "choiceAdventure553", "choiceAdventure554", "choiceAdventure556", "choiceAdventure557", "choiceAdventure558", "choiceAdventure559", "choiceAdventure560", "choiceAdventure561", "choiceAdventure562", "choiceAdventure563", "choiceAdventure564", "choiceAdventure565", "choiceAdventure566", "choiceAdventure567", "choiceAdventure568", "choiceAdventure569", "choiceAdventure571", "choiceAdventure572", "choiceAdventure573", "choiceAdventure574", "choiceAdventure575", "choiceAdventure576", "choiceAdventure577", "choiceAdventure578", "choiceAdventure579", "choiceAdventure581", "choiceAdventure582", "choiceAdventure583", "choiceAdventure584", "choiceAdventure594", "choiceAdventure595", "choiceAdventure596", "choiceAdventure597", "choiceAdventure598", "choiceAdventure599", "choiceAdventure600", "choiceAdventure603", "choiceAdventure604", "choiceAdventure616", "choiceAdventure634", "choiceAdventure640", "choiceAdventure654", "choiceAdventure655", "choiceAdventure656", "choiceAdventure657", "choiceAdventure658", "choiceAdventure664", "choiceAdventure669", "choiceAdventure670", "choiceAdventure671", "choiceAdventure672", "choiceAdventure673", "choiceAdventure674", "choiceAdventure675", "choiceAdventure676", "choiceAdventure677", "choiceAdventure678", "choiceAdventure679", "choiceAdventure681", "choiceAdventure683", "choiceAdventure684", "choiceAdventure685", "choiceAdventure686", "choiceAdventure687", "choiceAdventure688", "choiceAdventure689", "choiceAdventure690", "choiceAdventure691", "choiceAdventure692", "choiceAdventure693", "choiceAdventure694", "choiceAdventure695", "choiceAdventure696", "choiceAdventure697", "choiceAdventure698", "choiceAdventure700", "choiceAdventure701", "choiceAdventure705", "choiceAdventure706", "choiceAdventure707", "choiceAdventure708", "choiceAdventure709", "choiceAdventure710", "choiceAdventure711", "choiceAdventure712", "choiceAdventure713", "choiceAdventure714", "choiceAdventure715", "choiceAdventure716", "choiceAdventure717", "choiceAdventure721", "choiceAdventure725", "choiceAdventure729", "choiceAdventure733", "choiceAdventure737", "choiceAdventure741", "choiceAdventure745", "choiceAdventure749", "choiceAdventure753", "choiceAdventure771", "choiceAdventure778", "choiceAdventure780", "choiceAdventure781", "choiceAdventure783", "choiceAdventure784", "choiceAdventure785", "choiceAdventure786", "choiceAdventure787", "choiceAdventure788", "choiceAdventure789", "choiceAdventure791", "choiceAdventure793", "choiceAdventure794", "choiceAdventure795", "choiceAdventure796", "choiceAdventure797", "choiceAdventure803", "choiceAdventure805", "choiceAdventure808", "choiceAdventure809", "choiceAdventure813", "choiceAdventure815", "choiceAdventure830", "choiceAdventure832", "choiceAdventure833", "choiceAdventure834", "choiceAdventure835", "choiceAdventure837", "choiceAdventure838", "choiceAdventure839", "choiceAdventure840", "choiceAdventure841", "choiceAdventure842", "choiceAdventure851", "choiceAdventure852", "choiceAdventure853", "choiceAdventure854", "choiceAdventure855", "choiceAdventure856", "choiceAdventure857", "choiceAdventure858", "choiceAdventure866", "choiceAdventure873", "choiceAdventure875", "choiceAdventure876", "choiceAdventure877", "choiceAdventure878", "choiceAdventure879", "choiceAdventure880", "choiceAdventure881", "choiceAdventure882", "choiceAdventure888", "choiceAdventure889", "choiceAdventure918", "choiceAdventure919", "choiceAdventure920", "choiceAdventure921", "choiceAdventure923", "choiceAdventure924", "choiceAdventure925", "choiceAdventure926", "choiceAdventure927", "choiceAdventure928", "choiceAdventure929", "choiceAdventure930", "choiceAdventure931", "choiceAdventure932", "choiceAdventure940", "choiceAdventure941", "choiceAdventure942", "choiceAdventure943", "choiceAdventure944", "choiceAdventure945", "choiceAdventure946", "choiceAdventure950", "choiceAdventure955", "choiceAdventure957", "choiceAdventure958", "choiceAdventure959", "choiceAdventure960", "choiceAdventure961", "choiceAdventure962", "choiceAdventure963", "choiceAdventure964", "choiceAdventure965", "choiceAdventure966", "choiceAdventure970", "choiceAdventure973", "choiceAdventure974", "choiceAdventure975", "choiceAdventure976", "choiceAdventure977", "choiceAdventure979", "choiceAdventure980", "choiceAdventure981", "choiceAdventure982", "choiceAdventure983", "choiceAdventure988", "choiceAdventure989", "choiceAdventure993", "choiceAdventure998", "choiceAdventure1000", "choiceAdventure1003", "choiceAdventure1005", "choiceAdventure1006", "choiceAdventure1007", "choiceAdventure1008", "choiceAdventure1009", "choiceAdventure1010", "choiceAdventure1011", "choiceAdventure1012", "choiceAdventure1013", "choiceAdventure1015", "choiceAdventure1016", "choiceAdventure1017", "choiceAdventure1018", "choiceAdventure1019", "choiceAdventure1020", "choiceAdventure1021", "choiceAdventure1022", "choiceAdventure1023", "choiceAdventure1026", "choiceAdventure1027", "choiceAdventure1028", "choiceAdventure1029", "choiceAdventure1030", "choiceAdventure1031", "choiceAdventure1032", "choiceAdventure1033", "choiceAdventure1034", "choiceAdventure1035", "choiceAdventure1036", "choiceAdventure1037", "choiceAdventure1038", "choiceAdventure1039", "choiceAdventure1040", "choiceAdventure1041", "choiceAdventure1042", "choiceAdventure1044", "choiceAdventure1045", "choiceAdventure1046", "choiceAdventure1048", "choiceAdventure1051", "choiceAdventure1052", "choiceAdventure1053", "choiceAdventure1054", "choiceAdventure1055", "choiceAdventure1056", "choiceAdventure1057", "choiceAdventure1059", "choiceAdventure1060", "choiceAdventure1061", "choiceAdventure1062", "choiceAdventure1065", "choiceAdventure1067", "choiceAdventure1068", "choiceAdventure1069", "choiceAdventure1070", "choiceAdventure1071", "choiceAdventure1073", "choiceAdventure1077", "choiceAdventure1080", "choiceAdventure1081", "choiceAdventure1082", "choiceAdventure1083", "choiceAdventure1084", "choiceAdventure1085", "choiceAdventure1091", "choiceAdventure1094", "choiceAdventure1095", "choiceAdventure1096", "choiceAdventure1097", "choiceAdventure1102", "choiceAdventure1106", "choiceAdventure1107", "choiceAdventure1108", "choiceAdventure1110", "choiceAdventure1114", "choiceAdventure1115", "choiceAdventure1116", "choiceAdventure1118", "choiceAdventure1119", "choiceAdventure1120", "choiceAdventure1121", "choiceAdventure1122", "choiceAdventure1123", "choiceAdventure1171", "choiceAdventure1172", "choiceAdventure1173", "choiceAdventure1174", "choiceAdventure1175", "choiceAdventure1193", "choiceAdventure1195", "choiceAdventure1196", "choiceAdventure1197", "choiceAdventure1198", "choiceAdventure1199", "choiceAdventure1202", "choiceAdventure1203", "choiceAdventure1204", "choiceAdventure1205", "choiceAdventure1206", "choiceAdventure1207", "choiceAdventure1208", "choiceAdventure1209", "choiceAdventure1210", "choiceAdventure1211", "choiceAdventure1212", "choiceAdventure1213", "choiceAdventure1214", "choiceAdventure1215", "choiceAdventure1219", "choiceAdventure1222", "choiceAdventure1223", "choiceAdventure1224", "choiceAdventure1225", "choiceAdventure1226", "choiceAdventure1227", "choiceAdventure1228", "choiceAdventure1229", "choiceAdventure1236", "choiceAdventure1237", "choiceAdventure1238", "choiceAdventure1239", "choiceAdventure1240", "choiceAdventure1241", "choiceAdventure1242", "choiceAdventure1243", "choiceAdventure1244", "choiceAdventure1245", "choiceAdventure1246", "choiceAdventure1247", "choiceAdventure1248", "choiceAdventure1249", "choiceAdventure1250", "choiceAdventure1251", "choiceAdventure1252", "choiceAdventure1253", "choiceAdventure1254", "choiceAdventure1255", "choiceAdventure1256", "choiceAdventure1266", "choiceAdventure1280", "choiceAdventure1281", "choiceAdventure1282", "choiceAdventure1283", "choiceAdventure1284", "choiceAdventure1285", "choiceAdventure1286", "choiceAdventure1287", "choiceAdventure1288", "choiceAdventure1289", "choiceAdventure1290", "choiceAdventure1291", "choiceAdventure1292", "choiceAdventure1293", "choiceAdventure1294", "choiceAdventure1295", "choiceAdventure1296", "choiceAdventure1297", "choiceAdventure1298", "choiceAdventure1299", "choiceAdventure1300", "choiceAdventure1301", "choiceAdventure1302", "choiceAdventure1303", "choiceAdventure1304", "choiceAdventure1305", "choiceAdventure1307", "choiceAdventure1310", "choiceAdventure1312", "choiceAdventure1313", "choiceAdventure1314", "choiceAdventure1315", "choiceAdventure1316", "choiceAdventure1317", "choiceAdventure1318", "choiceAdventure1319", "choiceAdventure1321", "choiceAdventure1322", "choiceAdventure1323", "choiceAdventure1324", "choiceAdventure1325", "choiceAdventure1326", "choiceAdventure1327", "choiceAdventure1328", "choiceAdventure1332", "choiceAdventure1333", "choiceAdventure1335", "choiceAdventure1340", "choiceAdventure1341", "choiceAdventure1345", "choiceAdventure1389", "choiceAdventure1392", "choiceAdventure1397", "choiceAdventure1399", "choiceAdventure1405", "choiceAdventure1411", "choiceAdventure1415", "choiceAdventure1427", "choiceAdventure1428", "choiceAdventure1429", "choiceAdventure1430", "choiceAdventure1431", "choiceAdventure1432", "choiceAdventure1433", "choiceAdventure1434", "choiceAdventure1436", "choiceAdventure1460", "choiceAdventure1461", "choiceAdventure1467", "choiceAdventure1468", "choiceAdventure1469", "choiceAdventure1470", "choiceAdventure1471", "choiceAdventure1472", "choiceAdventure1473", "choiceAdventure1474", "choiceAdventure1475", "choiceAdventure1486", "choiceAdventure1487", "choiceAdventure1488", "choiceAdventure1489", "choiceAdventure1491", "choiceAdventure1494", "choiceAdventure1505"], familiarProperties = ["commaFamiliar", "nextQuantumFamiliar", "stillsuitFamiliar"], statProperties = ["nsChallenge1", "snojoSetting"], phylumProperties = ["dnaSyringe", "locketPhylum", "redSnapperPhylum", "_circadianRhythmsPhylum"];
  }
});

// node_modules/libram/dist/propertyTyping.js
function isBooleanProperty(property) {
  return booleanPropertiesSet.has(property);
}
function isNumericProperty(property) {
  return numericPropertiesSet.has(property);
}
function isNumericOrStringProperty(property) {
  return numericOrStringPropertiesSet.has(property);
}
function isStringProperty(property) {
  return stringPropertiesSet.has(property);
}
function isLocationProperty(property) {
  return locationPropertiesSet.has(property);
}
function isMonsterProperty(property) {
  return monsterPropertiesSet.has(property);
}
function isFamiliarProperty(property) {
  return familiarPropertiesSet.has(property);
}
function isStatProperty(property) {
  return statPropertiesSet.has(property);
}
function isPhylumProperty(property) {
  return phylumPropertiesSet.has(property);
}
var booleanPropertiesSet, numericPropertiesSet, numericOrStringPropertiesSet, stringPropertiesSet, locationPropertiesSet, monsterPropertiesSet, familiarPropertiesSet, statPropertiesSet, phylumPropertiesSet, init_propertyTyping = __esm({
  "node_modules/libram/dist/propertyTyping.js": function() {
    init_kolmafia_polyfill();
    init_propertyTypes();
    booleanPropertiesSet = new Set(booleanProperties), numericPropertiesSet = new Set(numericProperties), numericOrStringPropertiesSet = new Set(numericOrStringProperties), stringPropertiesSet = new Set(stringProperties), locationPropertiesSet = new Set(locationProperties), monsterPropertiesSet = new Set(monsterProperties), familiarPropertiesSet = new Set(familiarProperties), statPropertiesSet = new Set(statProperties), phylumPropertiesSet = new Set(phylumProperties);
  }
});

// node_modules/libram/dist/property.js
var property_exports = {};
__export(property_exports, {
  PropertiesManager: function() {
    return PropertiesManager;
  },
  decrement: function() {
    return decrement;
  },
  get: function() {
    return get;
  },
  getBoolean: function() {
    return getBoolean;
  },
  getBounty: function() {
    return getBounty;
  },
  getClass: function() {
    return getClass;
  },
  getCoinmaster: function() {
    return getCoinmaster;
  },
  getCommaSeparated: function() {
    return getCommaSeparated;
  },
  getEffect: function() {
    return getEffect;
  },
  getElement: function() {
    return getElement;
  },
  getFamiliar: function() {
    return getFamiliar;
  },
  getItem: function() {
    return getItem;
  },
  getLocation: function() {
    return getLocation;
  },
  getMonster: function() {
    return getMonster;
  },
  getNumber: function() {
    return getNumber;
  },
  getPhylum: function() {
    return getPhylum;
  },
  getServant: function() {
    return getServant;
  },
  getSkill: function() {
    return getSkill;
  },
  getSlot: function() {
    return getSlot;
  },
  getStat: function() {
    return getStat;
  },
  getString: function() {
    return getString;
  },
  getThrall: function() {
    return getThrall;
  },
  increment: function() {
    return increment;
  },
  set: function() {
    return _set;
  },
  setProperties: function() {
    return setProperties;
  },
  withChoice: function() {
    return withChoice;
  },
  withChoices: function() {
    return withChoices;
  },
  withProperties: function() {
    return withProperties;
  },
  withProperty: function() {
    return withProperty;
  }
});
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), !0).forEach(function(key) {
      _defineProperty3(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass3(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties3(Constructor.prototype, protoProps), staticProps && _defineProperties3(Constructor, staticProps), Constructor;
}
function _defineProperty3(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray2(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray2(o, minLen);
  }
}
function _arrayLikeToArray2(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function get(property, _default) {
  var value = getString(property);
  if (isBooleanProperty(property)) {
    var _getBoolean;
    return (_getBoolean = getBoolean(property, _default)) !== null && _getBoolean !== void 0 ? _getBoolean : !1;
  } else if (isNumericProperty(property)) {
    var _getNumber;
    return (_getNumber = getNumber(property, _default)) !== null && _getNumber !== void 0 ? _getNumber : 0;
  } else {
    if (isNumericOrStringProperty(property))
      return value.match(/^\d+$/) ? parseInt(value) : value;
    if (isLocationProperty(property))
      return getLocation(property, _default);
    if (isMonsterProperty(property))
      return getMonster(property, _default);
    if (isFamiliarProperty(property))
      return getFamiliar(property, _default);
    if (isStatProperty(property))
      return getStat(property, _default);
    if (isPhylumProperty(property))
      return getPhylum(property, _default);
    if (isStringProperty(property))
      return value;
  }
  return _default instanceof import_kolmafia3.Location ? getLocation(property, _default) : _default instanceof import_kolmafia3.Monster ? getMonster(property, _default) : _default instanceof import_kolmafia3.Familiar ? getFamiliar(property, _default) : _default instanceof import_kolmafia3.Stat ? getStat(property, _default) : _default instanceof import_kolmafia3.Phylum ? getPhylum(property, _default) : typeof _default == "boolean" ? value === "true" ? !0 : value === "false" ? !1 : _default : typeof _default == "number" ? value === "" ? _default : parseInt(value) : value === "" ? _default === void 0 ? "" : _default : value;
}
function _set(property, value) {
  var stringValue = value === null ? "" : value.toString();
  return (0, import_kolmafia3.setProperty)(property, stringValue), value;
}
function increment(property) {
  var delta = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, max = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1 / 0, value = get(property);
  if (!isNumericProperty(property))
    return value;
  var nextValue = Math.min(max, value + delta);
  return _set(property, nextValue);
}
function decrement(property) {
  var delta = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, min = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1 / 0, value = get(property);
  if (!isNumericProperty(property))
    return value;
  var nextValue = Math.max(min, value - delta);
  return _set(property, nextValue);
}
function setProperties(properties) {
  for (var _i = 0, _Object$entries = Object.entries(properties); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), prop = _Object$entries$_i[0], value = _Object$entries$_i[1];
    _set(prop, value);
  }
}
function withProperties(properties, callback) {
  var propertiesBackup = Object.fromEntries(Object.entries(properties).map(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 1), prop = _ref2[0];
    return [prop, get(prop)];
  }));
  setProperties(properties);
  try {
    return callback();
  } finally {
    setProperties(propertiesBackup);
  }
}
function withProperty(property, value, callback) {
  return withProperties(_defineProperty3({}, property, value), callback);
}
function withChoices(choices2, callback) {
  var properties = Object.fromEntries(Object.entries(choices2).map(function(_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), choice = _ref4[0], option = _ref4[1];
    return ["choiceAdventure".concat(choice), option];
  }));
  return withProperties(properties, callback);
}
function withChoice(choice, value, callback) {
  return withChoices(_defineProperty3({}, choice, value), callback);
}
var import_kolmafia3, createPropertyGetter, createMafiaClassPropertyGetter, getString, getCommaSeparated, getBoolean, getNumber, getBounty, getClass, getCoinmaster, getEffect, getElement, getFamiliar, getItem, getLocation, getMonster, getPhylum, getServant, getSkill, getSlot, getStat, getThrall, PropertiesManager, init_property = __esm({
  "node_modules/libram/dist/property.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia3 = require("kolmafia");
    init_propertyTyping();
    createPropertyGetter = function(transform) {
      return function(property, default_) {
        var value = (0, import_kolmafia3.getProperty)(property);
        return default_ !== void 0 && value === "" ? default_ : transform(value, property);
      };
    }, createMafiaClassPropertyGetter = function(Type, toType) {
      return createPropertyGetter(function(value) {
        if (value === "")
          return null;
        var v = toType(value);
        return v === Type.none ? null : v;
      });
    }, getString = createPropertyGetter(function(value) {
      return value;
    }), getCommaSeparated = createPropertyGetter(function(value) {
      return value.split(/, ?/);
    }), getBoolean = createPropertyGetter(function(value) {
      return value === "true";
    }), getNumber = createPropertyGetter(function(value) {
      return Number(value);
    }), getBounty = createMafiaClassPropertyGetter(import_kolmafia3.Bounty, import_kolmafia3.toBounty), getClass = createMafiaClassPropertyGetter(import_kolmafia3.Class, import_kolmafia3.toClass), getCoinmaster = createMafiaClassPropertyGetter(import_kolmafia3.Coinmaster, import_kolmafia3.toCoinmaster), getEffect = createMafiaClassPropertyGetter(import_kolmafia3.Effect, import_kolmafia3.toEffect), getElement = createMafiaClassPropertyGetter(import_kolmafia3.Element, import_kolmafia3.toElement), getFamiliar = createMafiaClassPropertyGetter(import_kolmafia3.Familiar, import_kolmafia3.toFamiliar), getItem = createMafiaClassPropertyGetter(import_kolmafia3.Item, import_kolmafia3.toItem), getLocation = createMafiaClassPropertyGetter(import_kolmafia3.Location, import_kolmafia3.toLocation), getMonster = createMafiaClassPropertyGetter(import_kolmafia3.Monster, import_kolmafia3.toMonster), getPhylum = createMafiaClassPropertyGetter(import_kolmafia3.Phylum, import_kolmafia3.toPhylum), getServant = createMafiaClassPropertyGetter(import_kolmafia3.Servant, import_kolmafia3.toServant), getSkill = createMafiaClassPropertyGetter(import_kolmafia3.Skill, import_kolmafia3.toSkill), getSlot = createMafiaClassPropertyGetter(import_kolmafia3.Slot, import_kolmafia3.toSlot), getStat = createMafiaClassPropertyGetter(import_kolmafia3.Stat, import_kolmafia3.toStat), getThrall = createMafiaClassPropertyGetter(import_kolmafia3.Thrall, import_kolmafia3.toThrall);
    PropertiesManager = /* @__PURE__ */ function() {
      function PropertiesManager2() {
        _classCallCheck3(this, PropertiesManager2), _defineProperty3(this, "properties", {});
      }
      return _createClass3(PropertiesManager2, [{
        key: "storedValues",
        get: function() {
          return this.properties;
        }
        /**
         * Sets a collection of properties to the given values, storing the old values.
         *
         * @param propertiesToSet A Properties object, keyed by property name.
         */
      }, {
        key: "set",
        value: function(propertiesToSet) {
          for (var _i2 = 0, _Object$entries2 = Object.entries(propertiesToSet); _i2 < _Object$entries2.length; _i2++) {
            var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2), propertyName = _Object$entries2$_i[0], propertyValue = _Object$entries2$_i[1];
            this.properties[propertyName] === void 0 && (this.properties[propertyName] = get(propertyName)), _set(propertyName, propertyValue);
          }
        }
        /**
         * Sets a collection of choice adventure properties to the given values, storing the old values.
         *
         * @param choicesToSet An object keyed by choice adventure number.
         */
      }, {
        key: "setChoices",
        value: function(choicesToSet) {
          this.set(Object.fromEntries(Object.entries(choicesToSet).map(function(_ref5) {
            var _ref6 = _slicedToArray(_ref5, 2), choiceNumber = _ref6[0], choiceValue = _ref6[1];
            return ["choiceAdventure".concat(choiceNumber), choiceValue];
          })));
        }
        /**
         * Sets a single choice adventure property to the given value, storing the old value.
         *
         * @param choiceToSet The number of the choice adventure to set the property for.
         * @param value The value to assign to that choice adventure.
         */
      }, {
        key: "setChoice",
        value: function(choiceToSet, value) {
          this.setChoices(_defineProperty3({}, choiceToSet, value));
        }
        /**
         * Resets the given properties to their original stored value. Does not delete entries from the manager.
         *
         * @param properties Collection of properties to reset.
         */
      }, {
        key: "reset",
        value: function() {
          for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++)
            properties[_key] = arguments[_key];
          for (var _i3 = 0, _properties = properties; _i3 < _properties.length; _i3++) {
            var property = _properties[_i3], value = this.properties[property];
            value && _set(property, value);
          }
        }
        /**
         * Iterates over all stored values, setting each property back to its original stored value. Does not delete entries from the manager.
         */
      }, {
        key: "resetAll",
        value: function() {
          setProperties(this.properties);
        }
        /**
         * Stops storing the original values of inputted properties.
         *
         * @param properties Properties for the manager to forget.
         */
      }, {
        key: "clear",
        value: function() {
          for (var _len2 = arguments.length, properties = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)
            properties[_key2] = arguments[_key2];
          for (var _i4 = 0, _properties2 = properties; _i4 < _properties2.length; _i4++) {
            var property = _properties2[_i4];
            this.properties[property] && delete this.properties[property];
          }
        }
        /**
         * Clears all properties.
         */
      }, {
        key: "clearAll",
        value: function() {
          this.properties = {};
        }
        /**
         * Increases a numeric property to the given value if necessary.
         *
         * @param property The numeric property we want to potentially raise.
         * @param value The minimum value we want that property to have.
         * @returns Whether we needed to change the property.
         */
      }, {
        key: "setMinimumValue",
        value: function(property, value) {
          return get(property, 0) < value ? (this.set(_defineProperty3({}, property, value)), !0) : !1;
        }
        /**
         * Decrease a numeric property to the given value if necessary.
         *
         * @param property The numeric property we want to potentially lower.
         * @param value The maximum value we want that property to have.
         * @returns Whether we needed to change the property.
         */
      }, {
        key: "setMaximumValue",
        value: function(property, value) {
          return get(property, 0) > value ? (this.set(_defineProperty3({}, property, value)), !0) : !1;
        }
        /**
         * Creates a new PropertiesManager with identical stored values to this one.
         *
         * @returns A new PropertiesManager, with identical stored values to this one.
         */
      }, {
        key: "clone",
        value: function() {
          var newGuy = new PropertiesManager2();
          return newGuy.properties = this.storedValues, newGuy;
        }
        /**
         * Clamps a numeric property, modulating it up or down to fit within a specified range
         *
         * @param property The numeric property to clamp
         * @param min The lower bound for what we want the property to be allowed to be.
         * @param max The upper bound for what we want the property to be allowed to be.
         * @returns Whether we ended up changing the property or not.
         */
      }, {
        key: "clamp",
        value: function(property, min, max) {
          if (max < min)
            return !1;
          var start = get(property);
          return this.setMinimumValue(property, min), this.setMaximumValue(property, max), start !== get(property);
        }
        /**
         * Determines whether this PropertiesManager has identical stored values to another.
         *
         * @param other The PropertiesManager to compare to this one.
         * @returns Whether their StoredValues are identical.
         */
      }, {
        key: "equals",
        value: function(other) {
          var thisProps = Object.entries(this.storedValues), otherProps = new Map(Object.entries(other.storedValues));
          if (thisProps.length !== otherProps.size)
            return !1;
          for (var _i5 = 0, _thisProps = thisProps; _i5 < _thisProps.length; _i5++) {
            var _thisProps$_i = _slicedToArray(_thisProps[_i5], 2), propertyName = _thisProps$_i[0], propertyValue = _thisProps$_i[1];
            if (otherProps.get(propertyName) === propertyValue)
              return !1;
          }
          return !0;
        }
        /**
         * Merges a PropertiesManager onto this one, letting the input win in the event that both PropertiesManagers have a value stored.
         *
         * @param other The PropertiesManager to be merged onto this one.
         * @returns A new PropertiesManager with stored values from both its parents.
         */
      }, {
        key: "merge",
        value: function(other) {
          var newGuy = new PropertiesManager2();
          return newGuy.properties = _objectSpread2(_objectSpread2({}, this.properties), other.properties), newGuy;
        }
        /**
         * Merges an arbitrary collection of PropertiesManagers, letting the rightmost PropertiesManager win in the event of verlap.
         *
         * @param mergees The PropertiesManagers to merge together.
         * @returns A PropertiesManager that is just an amalgam of all the constituents.
         */
      }], [{
        key: "merge",
        value: function() {
          for (var _len3 = arguments.length, mergees = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)
            mergees[_key3] = arguments[_key3];
          return mergees.length === 0 ? new PropertiesManager2() : mergees.reduce(function(a, b) {
            return a.merge(b);
          });
        }
      }]), PropertiesManager2;
    }();
  }
});

// node_modules/libram/dist/utils.js
function _createForOfIteratorHelper2(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray3(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray3(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray3(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray3(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray3(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray3(o, minLen);
  }
}
function _iterableToArray(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray3(arr);
}
function _arrayLikeToArray3(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function notNull(value) {
  return value !== null;
}
function parseNumber(n) {
  return Number.parseInt(n.replace(/,/g, ""));
}
function clamp(n, min, max) {
  return Math.max(min, Math.min(max, n));
}
function chunk(array, chunkSize) {
  for (var result = [], i = 0; i < array.length; i += chunkSize)
    result.push(array.slice(i, i + chunkSize));
  return result;
}
function arrayToCountedMap(array) {
  if (!Array.isArray(array))
    return array;
  var map = /* @__PURE__ */ new Map();
  return array.forEach(function(item10) {
    map.set(item10, (map.get(item10) || 0) + 1);
  }), map;
}
function countedMapToArray(map) {
  var _ref;
  return (_ref = []).concat.apply(_ref, _toConsumableArray(_toConsumableArray(map).map(function(_ref2) {
    var _ref3 = _slicedToArray2(_ref2, 2), item10 = _ref3[0], quantity = _ref3[1];
    return Array(quantity).fill(item10);
  })));
}
function countedMapToString(map) {
  return _toConsumableArray(map).map(function(_ref4) {
    var _ref5 = _slicedToArray2(_ref4, 2), item10 = _ref5[0], quantity = _ref5[1];
    return "".concat(quantity, " x ").concat(item10);
  }).join(", ");
}
function sum(addends, x) {
  return addends.reduce(function(subtotal, element) {
    return subtotal + (typeof x == "function" ? x(element) : element[x]);
  }, 0);
}
function sumNumbers(addends) {
  return sum(addends, function(x) {
    return x;
  });
}
function arrayContains(item10, array) {
  return array.includes(item10);
}
function setEqual(a, b) {
  var sortedA = _toConsumableArray(a).sort(), sortedB = _toConsumableArray(b).sort();
  return a.length === b.length && sortedA.every(function(item10, index) {
    return item10 === sortedB[index];
  });
}
function invertMap(map) {
  var returnValue = /* @__PURE__ */ new Map(), _iterator = _createForOfIteratorHelper2(map), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _step$value = _slicedToArray2(_step.value, 2), key = _step$value[0], value = _step$value[1];
      returnValue.set(value, key);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return returnValue;
}
function splitByCommasWithEscapes(str) {
  var returnValue = [], ignoreNext = !1, currentString = "", _iterator2 = _createForOfIteratorHelper2(str.split("")), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var char = _step2.value;
      char === "\\" ? ignoreNext = !0 : (char == "," && !ignoreNext ? (returnValue.push(currentString.trim()), currentString = "") : currentString += char, ignoreNext = !1);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return returnValue.push(currentString.trim()), returnValue;
}
function maxBy(array, optimizer) {
  var reverse = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  if (!array.length)
    throw new Error("Cannot call maxBy on an empty array!");
  return typeof optimizer == "function" ? _toConsumableArray(array).reduce(function(_ref6, other) {
    var value = _ref6.value, item10 = _ref6.item, otherValue = optimizer(other);
    return value >= otherValue !== reverse ? {
      value: value,
      item: item10
    } : {
      value: otherValue,
      item: other
    };
  }, {
    item: array[0],
    value: optimizer(array[0])
  }).item : array.reduce(function(a, b) {
    return a[optimizer] >= b[optimizer] !== reverse ? a : b;
  });
}
function arrayEquals(left, right) {
  return left.length !== right.length ? !1 : left.every(function(element, index) {
    return element === right[index];
  });
}
function undelay(delayedObject) {
  for (var _len = arguments.length, args2 = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
    args2[_key - 1] = arguments[_key];
  return typeof delayedObject == "function" ? delayedObject.apply(void 0, args2) : delayedObject;
}
function makeByXFunction(source) {
  return function(options) {
    var _options$val, val = undelay(source);
    return "default" in options ? (_options$val = options[val]) !== null && _options$val !== void 0 ? _options$val : options.default : options[val];
  };
}
function flat(arr) {
  var depth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1 / 0, flatArray = [], _iterator3 = _createForOfIteratorHelper2(arr), _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
      var item10 = _step3.value;
      Array.isArray(item10) && depth > 0 ? flatArray = flatArray.concat(flat(item10, depth - 1)) : flatArray.push(item10);
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  return flatArray;
}
function random(array) {
  return array[Math.floor(Math.random() * array.length)];
}
var tc, init_utils = __esm({
  "node_modules/libram/dist/utils.js": function() {
    init_kolmafia_polyfill();
    tc = function(word) {
      return word.charAt(0).toUpperCase() + word.slice(1);
    };
  }
});

// node_modules/libram/dist/template-string.js
var import_kolmafia4, concatTemplateString, handleTypeGetError, createSingleConstant, createPluralConstant, $bounty, $bounties, $class, $classes, $coinmaster, $coinmasters, $effect, $effects, $element, $elements, $familiar, $familiars, $item, $items, $location, $locations, $modifier, $modifiers, $monster, $monsters, $phylum, $phyla, $servant, $servants, $skill, $skills, $slot, $slots, $stat, $stats, $thrall, $thralls, $path, $paths, init_template_string = __esm({
  "node_modules/libram/dist/template-string.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia4 = require("kolmafia");
    init_utils();
    concatTemplateString = function(literals) {
      for (var _len = arguments.length, placeholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
        placeholders[_key - 1] = arguments[_key];
      return literals.raw.reduce(function(acc, literal, i) {
        var _placeholders$i;
        return acc + literal + ((_placeholders$i = placeholders[i]) !== null && _placeholders$i !== void 0 ? _placeholders$i : "");
      }, "");
    }, handleTypeGetError = function(Type, error2) {
      var message = "".concat(error2), match = message.match(RegExp("Bad ".concat(Type.name.toLowerCase(), " value: .*")));
      match ? (0, import_kolmafia4.print)("".concat(match[0], "; if you're certain that this ").concat(Type.name, " exists and is spelled correctly, please update KoLMafia"), "red") : (0, import_kolmafia4.print)(message);
    }, createSingleConstant = function(Type) {
      var tagFunction = function(literals) {
        for (var _len2 = arguments.length, placeholders = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
          placeholders[_key2 - 1] = arguments[_key2];
        var input = concatTemplateString.apply(void 0, [literals].concat(placeholders));
        try {
          return Type.get(input);
        } catch (error2) {
          handleTypeGetError(Type, error2);
        }
        (0, import_kolmafia4.abort)();
      };
      return tagFunction.none = Type.none, tagFunction;
    }, createPluralConstant = function(Type) {
      var tagFunction = function(literals) {
        for (var _len3 = arguments.length, placeholders = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++)
          placeholders[_key3 - 1] = arguments[_key3];
        var input = concatTemplateString.apply(void 0, [literals].concat(placeholders));
        if (input === "")
          return Type.all();
        try {
          return Type.get(splitByCommasWithEscapes(input));
        } catch (error2) {
          handleTypeGetError(Type, error2);
        }
        (0, import_kolmafia4.abort)();
      };
      return tagFunction.all = function() {
        return Type.all();
      }, tagFunction;
    }, $bounty = createSingleConstant(import_kolmafia4.Bounty), $bounties = createPluralConstant(import_kolmafia4.Bounty), $class = createSingleConstant(import_kolmafia4.Class), $classes = createPluralConstant(import_kolmafia4.Class), $coinmaster = createSingleConstant(import_kolmafia4.Coinmaster), $coinmasters = createPluralConstant(import_kolmafia4.Coinmaster), $effect = createSingleConstant(import_kolmafia4.Effect), $effects = createPluralConstant(import_kolmafia4.Effect), $element = createSingleConstant(import_kolmafia4.Element), $elements = createPluralConstant(import_kolmafia4.Element), $familiar = createSingleConstant(import_kolmafia4.Familiar), $familiars = createPluralConstant(import_kolmafia4.Familiar), $item = createSingleConstant(import_kolmafia4.Item), $items = createPluralConstant(import_kolmafia4.Item), $location = createSingleConstant(import_kolmafia4.Location), $locations = createPluralConstant(import_kolmafia4.Location), $modifier = createSingleConstant(import_kolmafia4.Modifier), $modifiers = createPluralConstant(import_kolmafia4.Modifier), $monster = createSingleConstant(import_kolmafia4.Monster), $monsters = createPluralConstant(import_kolmafia4.Monster), $phylum = createSingleConstant(import_kolmafia4.Phylum), $phyla = createPluralConstant(import_kolmafia4.Phylum), $servant = createSingleConstant(import_kolmafia4.Servant), $servants = createPluralConstant(import_kolmafia4.Servant), $skill = createSingleConstant(import_kolmafia4.Skill), $skills = createPluralConstant(import_kolmafia4.Skill), $slot = createSingleConstant(import_kolmafia4.Slot), $slots = createPluralConstant(import_kolmafia4.Slot), $stat = createSingleConstant(import_kolmafia4.Stat), $stats = createPluralConstant(import_kolmafia4.Stat), $thrall = createSingleConstant(import_kolmafia4.Thrall), $thralls = createPluralConstant(import_kolmafia4.Thrall), $path = createSingleConstant(import_kolmafia4.Path), $paths = createPluralConstant(import_kolmafia4.Path);
  }
});

// node_modules/libram/dist/lib.js
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _inherits(subClass, superClass) {
  if (typeof superClass != "function" && superClass !== null)
    throw new TypeError("Super expression must either be null or a function");
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf(subClass, superClass);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else
      result = Super.apply(this, arguments);
    return _possibleConstructorReturn(this, result);
  };
}
function _possibleConstructorReturn(self, call) {
  if (call && (typeof call == "object" || typeof call == "function"))
    return call;
  if (call !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
  if (self === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return self;
}
function _wrapNativeSuper(Class6) {
  var _cache = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
  return _wrapNativeSuper = function(Class7) {
    if (Class7 === null || !_isNativeFunction(Class7))
      return Class7;
    if (typeof Class7 != "function")
      throw new TypeError("Super expression must either be null or a function");
    if (typeof _cache != "undefined") {
      if (_cache.has(Class7))
        return _cache.get(Class7);
      _cache.set(Class7, Wrapper);
    }
    function Wrapper() {
      return _construct(Class7, arguments, _getPrototypeOf(this).constructor);
    }
    return Wrapper.prototype = Object.create(Class7.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, Class7);
  }, _wrapNativeSuper(Class6);
}
function _construct(Parent, args2, Class6) {
  return _isNativeReflectConstruct() ? _construct = Reflect.construct : _construct = function(Parent2, args3, Class7) {
    var a = [null];
    a.push.apply(a, args3);
    var Constructor = Function.bind.apply(Parent2, a), instance = new Constructor();
    return Class7 && _setPrototypeOf(instance, Class7.prototype), instance;
  }, _construct.apply(null, arguments);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch (e) {
    return !1;
  }
}
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _setPrototypeOf(o, p) {
  return _setPrototypeOf = Object.setPrototypeOf || function(o2, p2) {
    return o2.__proto__ = p2, o2;
  }, _setPrototypeOf(o, p);
}
function _getPrototypeOf(o) {
  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  }, _getPrototypeOf(o);
}
function _createForOfIteratorHelper3(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray4(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _slicedToArray3(arr, i) {
  return _arrayWithHoles3(arr) || _iterableToArrayLimit3(arr, i) || _unsupportedIterableToArray4(arr, i) || _nonIterableRest3();
}
function _nonIterableRest3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray4(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray4(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray4(o, minLen);
  }
}
function _arrayLikeToArray4(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit3(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles3(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function getSongLimit() {
  return 3 + ((0, import_kolmafia5.booleanModifier)("Four Songs") ? 1 : 0) + (0, import_kolmafia5.numericModifier)("Additional Song");
}
function isSong(skillOrEffect) {
  if (skillOrEffect instanceof import_kolmafia5.Effect && skillOrEffect.attributes.includes("song"))
    return !0;
  var skill = skillOrEffect instanceof import_kolmafia5.Effect ? (0, import_kolmafia5.toSkill)(skillOrEffect) : skillOrEffect;
  return skill.class === $class(_templateObject || (_templateObject = _taggedTemplateLiteral(["Accordion Thief"]))) && skill.buff;
}
function getActiveEffects() {
  return Object.keys((0, import_kolmafia5.myEffects)()).map(function(e) {
    return import_kolmafia5.Effect.get(e);
  });
}
function getActiveSongs() {
  return getActiveEffects().filter(isSong);
}
function getSongCount() {
  return getActiveSongs().length;
}
function canRememberSong() {
  var quantity = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
  return getSongLimit() - getSongCount() >= quantity;
}
function getMonsterLocations(monster) {
  return import_kolmafia5.Location.all().filter(function(location) {
    return monster.name in (0, import_kolmafia5.appearanceRates)(location);
  });
}
function getRemainingLiver() {
  return (0, import_kolmafia5.inebrietyLimit)() - (0, import_kolmafia5.myInebriety)();
}
function getRemainingStomach() {
  return (0, import_kolmafia5.fullnessLimit)() - (0, import_kolmafia5.myFullness)();
}
function getRemainingSpleen() {
  return (0, import_kolmafia5.spleenLimit)() - (0, import_kolmafia5.mySpleenUse)();
}
function have(thing) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if (thing instanceof import_kolmafia5.Effect)
    return (0, import_kolmafia5.haveEffect)(thing) >= quantity;
  if (thing instanceof import_kolmafia5.Familiar)
    return (0, import_kolmafia5.haveFamiliar)(thing);
  if (thing instanceof import_kolmafia5.Item)
    return (0, import_kolmafia5.availableAmount)(thing) >= quantity;
  if (thing instanceof import_kolmafia5.Servant)
    return (0, import_kolmafia5.haveServant)(thing);
  if (thing instanceof import_kolmafia5.Skill)
    return (0, import_kolmafia5.haveSkill)(thing);
  if (thing instanceof import_kolmafia5.Thrall) {
    var thrall = (0, import_kolmafia5.myThrall)();
    return thrall.id === thing.id && thrall.level >= quantity;
  }
  return !1;
}
function haveInCampground(item10) {
  return Object.keys((0, import_kolmafia5.getCampground)()).map(function(i) {
    return import_kolmafia5.Item.get(i);
  }).includes(item10);
}
function haveCounter(counterName) {
  var minTurns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, maxTurns = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 500;
  return (0, import_kolmafia5.getCounters)(counterName, minTurns, maxTurns) === counterName;
}
function haveWandererCounter(wanderer2) {
  if (deterministicWanderers.includes(wanderer2))
    return haveCounter(wanderer2);
  var begin = wanderer2 + " window begin", end = wanderer2 + " window end";
  return haveCounter(begin) || haveCounter(end);
}
function isVoteWandererNow() {
  return (0, import_kolmafia5.totalTurnsPlayed)() % 11 === 1 && get("lastVoteMonsterTurn") < (0, import_kolmafia5.totalTurnsPlayed)();
}
function isWandererNow(wanderer2) {
  if (deterministicWanderers.includes(wanderer2))
    return haveCounter(wanderer2, 0, 0);
  if (wanderer2 === Wanderer.Kramco)
    return !0;
  if (wanderer2 === Wanderer.Vote)
    return isVoteWandererNow();
  if (wanderer2 === Wanderer.Familiar)
    return get("_hipsterAdv") < 7;
  var begin = wanderer2 + " window begin", end = wanderer2 + " window end";
  return !haveCounter(begin, 1) && haveCounter(end);
}
function getKramcoWandererChance() {
  var fights = get("_sausageFights"), lastFight = get("_lastSausageMonsterTurn"), totalTurns = (0, import_kolmafia5.totalTurnsPlayed)();
  if (fights < 1)
    return lastFight === totalTurns && (0, import_kolmafia5.myTurncount)() < 1 ? 0.5 : 1;
  var turnsSinceLastFight = totalTurns - lastFight;
  return Math.min(1, (turnsSinceLastFight + 1) / (5 + fights * 3 + Math.pow(Math.max(0, fights - 5), 3)));
}
function getFamiliarWandererChance() {
  var totalFights = get("_hipsterAdv"), probability = [0.5, 0.4, 0.3, 0.2];
  return totalFights < 4 ? probability[totalFights] : totalFights > 7 ? 0 : 0.1;
}
function getWandererChance(wanderer2) {
  if (deterministicWanderers.includes(wanderer2))
    return haveCounter(wanderer2, 0, 0) ? 1 : 0;
  if (wanderer2 === Wanderer.Kramco && getKramcoWandererChance(), wanderer2 === Wanderer.Vote)
    return isVoteWandererNow() ? 1 : 0;
  wanderer2 === Wanderer.Familiar && getFamiliarWandererChance();
  var begin = wanderer2 + " window begin", end = wanderer2 + " window end";
  if (haveCounter(begin, 1, 100))
    return 0;
  var counters = get("relayCounters"), re = new RegExp("(\\d+):" + end), matches = counters.match(re);
  if (matches && matches.length === 2) {
    var window = Number.parseInt(matches[1]) - (0, import_kolmafia5.myTurncount)();
    return 1 / window;
  }
  return 0;
}
function isCurrentFamiliar(familiar7) {
  return (0, import_kolmafia5.myFamiliar)() === familiar7;
}
function getFoldGroup(item10) {
  return Object.entries((0, import_kolmafia5.getRelated)(item10, "fold")).sort(function(_ref, _ref2) {
    var _ref3 = _slicedToArray3(_ref, 2), a = _ref3[1], _ref4 = _slicedToArray3(_ref2, 2), b = _ref4[1];
    return a - b;
  }).map(function(_ref5) {
    var _ref6 = _slicedToArray3(_ref5, 1), i = _ref6[0];
    return import_kolmafia5.Item.get(i);
  });
}
function getZapGroup(item10) {
  return Object.keys((0, import_kolmafia5.getRelated)(item10, "zap")).map(function(i) {
    return import_kolmafia5.Item.get(i);
  });
}
function getBanishedMonsters() {
  var banishes = chunk(get("banishedMonsters").split(":"), 3), result = /* @__PURE__ */ new Map(), _iterator = _createForOfIteratorHelper3(banishes), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _step$value = _slicedToArray3(_step.value, 2), foe = _step$value[0], banisher = _step$value[1];
      if (foe === void 0 || banisher === void 0)
        break;
      var banisherItem = (0, import_kolmafia5.toItem)(banisher);
      if (banisher.toLowerCase() === "saber force")
        result.set($skill(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["Use the Force"]))), import_kolmafia5.Monster.get(foe));
      else if (banisher.toLowerCase() === "nanorhino")
        result.set($skill(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["Unleash Nanites"]))), import_kolmafia5.Monster.get(foe));
      else if ([import_kolmafia5.Item.none, import_kolmafia5.Item.get("training scroll:  Snokebomb"), import_kolmafia5.Item.get("tomayohawk-style reflex hammer"), null].includes(banisherItem)) {
        if (import_kolmafia5.Skill.get(banisher) === $skill.none)
          break;
        result.set(import_kolmafia5.Skill.get(banisher), import_kolmafia5.Monster.get(foe));
      } else
        result.set(banisherItem, import_kolmafia5.Monster.get(foe));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return result;
}
function canUse(item10) {
  var path3 = (0, import_kolmafia5.myPath)();
  return !(path3 !== import_kolmafia5.Path.get("Nuclear Autumn") && $items(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["Shrieking Weasel holo-record, Power-Guy 2000 holo-record, Lucky Strikes holo-record, EMD holo-record, Superdrifter holo-record, The Pigs holo-record, Drunk Uncles holo-record"]))).includes(item10) || path3 === import_kolmafia5.Path.get("G-Lover") && !item10.name.toLowerCase().includes("g") || path3 === import_kolmafia5.Path.get("Bees Hate You") && item10.name.toLowerCase().includes("b"));
}
function noneToNull(thing) {
  return thing instanceof import_kolmafia5.Effect ? thing === import_kolmafia5.Effect.none ? null : thing : thing instanceof import_kolmafia5.Familiar ? thing === import_kolmafia5.Familiar.none ? null : thing : thing instanceof import_kolmafia5.Item && thing === import_kolmafia5.Item.none ? null : thing;
}
function getAverage(range) {
  var _range$match;
  if (range.indexOf("-") < 0)
    return Number(range);
  var _ref7 = (_range$match = range.match(/(-?[0-9]+)-(-?[0-9]+)/)) !== null && _range$match !== void 0 ? _range$match : ["0", "0", "0"], _ref8 = _slicedToArray3(_ref7, 3), lower = _ref8[1], upper = _ref8[2];
  return (Number(lower) + Number(upper)) / 2;
}
function getAverageAdventures(item10) {
  return getAverage(item10.adventures);
}
function uneffect(effect2) {
  return (0, import_kolmafia5.cliExecute)("uneffect ".concat(effect2.name));
}
function getPlayerFromIdOrName(idOrName) {
  var id = typeof idOrName == "number" ? idOrName : parseInt((0, import_kolmafia5.getPlayerId)(idOrName));
  return {
    name: (0, import_kolmafia5.getPlayerName)(id),
    id: id
  };
}
function questStep(questName) {
  var stringStep = get(questName);
  if (stringStep === "unstarted")
    return -1;
  if (stringStep === "started")
    return 0;
  if (stringStep === "finished" || stringStep === "")
    return 999;
  if (stringStep.substring(0, 4) !== "step")
    throw new Error("Quest state parsing error.");
  return parseInt(stringStep.substring(4), 10);
}
function ensureEffect(ef) {
  var turns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  if ((0, import_kolmafia5.haveEffect)(ef) < turns) {
    if (ef.default === null)
      throw new EnsureError(ef, "No default action");
    if (!(0, import_kolmafia5.cliExecute)(ef.default) || (0, import_kolmafia5.haveEffect)(ef) === 0)
      throw new EnsureError(ef);
  }
}
function getSaleValue() {
  for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++)
    items[_key] = arguments[_key];
  return items.map(function(item10) {
    return valueMap.has(item10) || (item10.discardable ? valueMap.set(item10, (0, import_kolmafia5.mallPrice)(item10) > Math.max(2 * (0, import_kolmafia5.autosellPrice)(item10), 100) ? MALL_VALUE_MODIFIER * (0, import_kolmafia5.mallPrice)(item10) : (0, import_kolmafia5.autosellPrice)(item10)) : valueMap.set(item10, (0, import_kolmafia5.mallPrice)(item10) > 100 ? MALL_VALUE_MODIFIER * (0, import_kolmafia5.mallPrice)(item10) : 0)), valueMap.get(item10) || 0;
  }).reduce(function(s, price2) {
    return s + price2;
  }, 0) / items.length;
}
function findLeprechaunMultiplier(familiar7) {
  if (familiar7 === $familiar(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["Mutant Cactus Bud"]))))
    return (0, import_kolmafia5.numericModifier)(familiar7, "Leprechaun Effectiveness", 1, $item.none);
  if (familiar7 === $familiar(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["Reanimated Reanimator"]))))
    return 0;
  var meatBonus = (0, import_kolmafia5.numericModifier)(familiar7, "Meat Drop", 1, $item.none);
  return meatBonus === 0 ? 0 : Math.pow(Math.sqrt(meatBonus / 2 + 55 / 4 + 3) - Math.sqrt(55) / 2, 2);
}
function findFairyMultiplier(familiar7) {
  if (familiar7 === $familiar(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["Mutant Fire Ant"]))))
    return (0, import_kolmafia5.numericModifier)(familiar7, "Fairy Effectiveness", 1, $item.none);
  if (familiar7 === $familiar(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["Reanimated Reanimator"]))))
    return 0;
  var itemBonus = (0, import_kolmafia5.numericModifier)(familiar7, "Item Drop", 1, $item.none);
  return itemBonus === 0 ? 0 : Math.pow(Math.sqrt(itemBonus + 55 / 4 + 3) - Math.sqrt(55) / 2, 2);
}
function getTodaysHolidayWanderers() {
  return flat((0, import_kolmafia5.holiday)().split("/").map(function(holiday2) {
    var _holidayWanderers$get;
    return (_holidayWanderers$get = holidayWanderers.get(holiday2)) !== null && _holidayWanderers$get !== void 0 ? _holidayWanderers$get : [];
  }));
}
function canVisitUrl() {
  return (0, import_kolmafia5.currentRound)() ? (logger_default.debug("Current round is ".concat((0, import_kolmafia5.currentRound)(), "; you're in combat.")), !1) : (0, import_kolmafia5.inMultiFight)() ? (logger_default.debug("You're in a multifight."), !1) : (0, import_kolmafia5.choiceFollowsFight)() ? (logger_default.debug("A choice follows this fight."), !1) : (0, import_kolmafia5.handlingChoice)() ? (logger_default.debug("You're currently in a choice adventure"), !1) : !0;
}
function damageTakenByElement(baseDamage, element) {
  if (baseDamage < 0)
    return 1;
  var res = (0, import_kolmafia5.elementalResistance)(element);
  return Math.max(1, Math.ceil(baseDamage - baseDamage * res / 100));
}
function telescope() {
  return {
    statContest: telescopeStats.get(get("telescope1")),
    elementContest: telescopeElements.get(get("telescope2")),
    hedge1: hedgeTrap1.get(get("telescope3")),
    hedge2: hedgeTrap2.get(get("telescope4")),
    hedge3: hedgeTrap3.get(get("telescope5"))
  };
}
function examine(thing) {
  var url = thing instanceof import_kolmafia5.Item ? "desc_item.php?whichitem=".concat(thing.descid) : thing instanceof import_kolmafia5.Familiar ? "desc_familiar.php?which=".concat(thing.id) : thing instanceof import_kolmafia5.Effect ? "desc_effect.php?whicheffect=".concat(thing.descid) : "desc_skill.php?whichskill=".concat(thing.id);
  return (0, import_kolmafia5.visitUrl)(url);
}
function directlyUse(item10) {
  return (0, import_kolmafia5.visitUrl)("inv_use.php?which=3&whichitem=".concat(item10.id, "&pwd"));
}
function unequip(thing) {
  if (thing instanceof import_kolmafia5.Slot)
    return (0, import_kolmafia5.equip)(thing, $item.none);
  var failedSlots = import_kolmafia5.Slot.all().filter(function(s) {
    return (0, import_kolmafia5.equippedItem)(s) !== thing ? !1 : !unequip(thing);
  });
  return failedSlots.length && logger_default.debug("Failed to unequip ".concat(thing, " from slots ").concat(failedSlots.join(", "))), failedSlots.length === 0;
}
function gameDay() {
  var _todayToString$match, _map = ((_todayToString$match = (0, import_kolmafia5.todayToString)().match(/(\d{4})(\d{2})(\d{2})/)) !== null && _todayToString$match !== void 0 ? _todayToString$match : []).map(Number), _map2 = _slicedToArray3(_map, 4), year = _map2[1], month = _map2[2], day = _map2[3];
  return new Date(year, month - 1, day, 0, 0, 0);
}
function freeCrafts() {
  var type = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "all", effectCrafts = function(effect2) {
    return Math.floor((0, import_kolmafia5.haveEffect)(effect2) / 5);
  }, all2 = (have($skill(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral(["Rapid Prototyping"])))) ? 5 - get("_rapidPrototypingUsed") : 0) + (have($skill(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral(["Expert Corner-Cutter"])))) ? 5 - get("_expertCornerCutterUsed") : 0) + effectCrafts($effect(_templateObject37 || (_templateObject37 = _taggedTemplateLiteral(["Inigo's Incantation of Inspiration"])))) + effectCrafts($effect(_templateObject38 || (_templateObject38 = _taggedTemplateLiteral(["Craft Tea"])))) + // eslint-disable-next-line libram/verify-constants
  effectCrafts($effect(_templateObject39 || (_templateObject39 = _taggedTemplateLiteral(["Cooking Concentrate"])))), food = type === "food" ? 5 - get("_cookbookbatCrafting") : 0, smith = type === "smith" ? 5 - get("_thorsPliersCrafting") : 0, booze = 0;
  return all2 + food + smith + booze;
}
function realmAvailable(identifier) {
  return identifier === "fantasy" ? get("_frToday") || get("frAlways") : identifier === "pirate" ? get("_prToday") || get("prAlways") : get("_".concat(identifier, "AirportToday")) || get("".concat(identifier, "AirportAlways"));
}
function realmCurrency(realm) {
  switch (realm) {
    case "sleaze":
      return $item(_templateObject40 || (_templateObject40 = _taggedTemplateLiteral(["Beach Buck"])));
    case "spooky":
      return $item(_templateObject41 || (_templateObject41 = _taggedTemplateLiteral(["Coinspiracy"])));
    case "stench":
      return $item(_templateObject42 || (_templateObject42 = _taggedTemplateLiteral(["FunFunds\u2122"])));
    case "cold":
      return $item(_templateObject43 || (_templateObject43 = _taggedTemplateLiteral(["Wal-Mart gift certificate"])));
    case "hot":
      return $item(_templateObject44 || (_templateObject44 = _taggedTemplateLiteral(["Volcoino"])));
    case "fantasy":
      return $item(_templateObject45 || (_templateObject45 = _taggedTemplateLiteral(["Rubee\u2122"])));
  }
}
function lgrCurrencies() {
  return realmTypes.filter(function(realm) {
    return realmAvailable(realm) && !(realm === "hot" && get("_luckyGoldRingVolcoino"));
  }).map(realmCurrency).filter(function(i) {
    return !!i;
  });
}
var import_kolmafia5, _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36, _templateObject37, _templateObject38, _templateObject39, _templateObject40, _templateObject41, _templateObject42, _templateObject43, _templateObject44, _templateObject45, Wanderer, deterministicWanderers, EnsureError, valueMap, MALL_VALUE_MODIFIER, Environment, holidayWanderers, telescopeStats, telescopeElements, hedgeTrap1, hedgeTrap2, hedgeTrap3, byStat, byClass, realmTypes, init_lib = __esm({
  "node_modules/libram/dist/lib.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia5 = require("kolmafia");
    init_logger();
    init_property();
    init_template_string();
    init_utils();
    (function(Wanderer2) {
      Wanderer2.Digitize = "Digitize Monster", Wanderer2.Enamorang = "Enamorang Monster", Wanderer2.Familiar = "Familiar", Wanderer2.Holiday = "Holiday Monster", Wanderer2.Kramco = "Kramco", Wanderer2.Nemesis = "Nemesis Assassin", Wanderer2.Portscan = "portscan.edu", Wanderer2.Romantic = "Romantic Monster", Wanderer2.Vote = "Vote Monster";
    })(Wanderer || (Wanderer = {}));
    deterministicWanderers = [Wanderer.Digitize, Wanderer.Portscan];
    EnsureError = /* @__PURE__ */ function(_Error) {
      _inherits(EnsureError2, _Error);
      var _super = _createSuper(EnsureError2);
      function EnsureError2(cause, reason) {
        var _this;
        return _classCallCheck4(this, EnsureError2), _this = _super.call(this, "Failed to ensure ".concat(cause.name, "!").concat(reason ? " ".concat(reason) : "")), _this.name = "Ensure Error", _this;
      }
      return EnsureError2;
    }(/* @__PURE__ */ _wrapNativeSuper(Error));
    valueMap = /* @__PURE__ */ new Map(), MALL_VALUE_MODIFIER = 0.9;
    Environment = {
      Outdoor: "outdoor",
      Indoor: "indoor",
      Underground: "underground",
      Underwater: "underwater"
    };
    holidayWanderers = /* @__PURE__ */ new Map([["El Dia De Los Muertos Borrachos", $monsters(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["Novia Cad\xE1ver, Novio Cad\xE1ver, Padre Cad\xE1ver, Persona Inocente Cad\xE1ver"])))], ["Feast of Boris", $monsters(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["Candied Yam Golem, Malevolent Tofurkey, Possessed Can of Cranberry Sauce, Stuffing Golem"])))], ["Talk Like a Pirate Day", $monsters(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["ambulatory pirate, migratory pirate, peripatetic pirate"])))]]);
    telescopeStats = /* @__PURE__ */ new Map([["standing around flexing their muscles and using grip exercisers", $stat(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["Muscle"])))], ["sitting around playing chess and solving complicated-looking logic puzzles", $stat(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["Mysticality"])))], ["all wearing sunglasses and dancing", $stat(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["Moxie"])))]]), telescopeElements = /* @__PURE__ */ new Map([["people, all of whom appear to be on fire", $element(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral(["hot"])))], ["people, surrounded by a cloud of eldritch mist", $element(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral(["spooky"])))], ["greasy-looking people furtively skulking around", $element(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral(["sleaze"])))], ["people, surrounded by garbage and clouds of flies", $element(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral(["stench"])))], ["people, clustered around a group of igloos", $element(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral(["cold"])))]]), hedgeTrap1 = /* @__PURE__ */ new Map([["smoldering bushes on the outskirts of a hedge maze", $element(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral(["hot"])))], ["creepy-looking black bushes on the outskirts of a hedge maze", $element(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral(["spooky"])))], ["purplish, greasy-looking hedges", $element(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral(["sleaze"])))], ["nasty-looking, dripping green bushes on the outskirts of a hedge maze", $element(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral(["stench"])))], ["frost-rimed bushes on the outskirts of a hedge maze", $element(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral(["cold"])))]]), hedgeTrap2 = /* @__PURE__ */ new Map([["smoke rising from deeper within the maze", $element(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral(["hot"])))], ["a miasma of eldritch vapors rising from deeper within the maze", $element(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral(["spooky"])))], ["a greasy purple cloud hanging over the center of the maze", $element(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral(["sleaze"])))], ["a cloud of green gas hovering over the maze", $element(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral(["stench"])))], ["wintry mists rising from deeper within the maze", $element(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral(["cold"])))]]), hedgeTrap3 = /* @__PURE__ */ new Map([["with lava slowly oozing out of it", $element(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral(["hot"])))], ["surrounded by creepy black mist", $element(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral(["spooky"])))], ["that occasionally vomits out a greasy ball of hair", $element(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral(["sleaze"])))], ["disgorging a really surprising amount of sewage", $element(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral(["stench"])))], ["occasionally disgorging a bunch of ice cubes", $element(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral(["cold"])))]]);
    byStat = makeByXFunction(function() {
      return (0, import_kolmafia5.myPrimestat)().toString();
    }), byClass = makeByXFunction(function() {
      return (0, import_kolmafia5.myClass)().toString();
    });
    realmTypes = ["spooky", "stench", "hot", "cold", "sleaze", "fantasy", "pirate"];
  }
});

// node_modules/libram/dist/overlappingNames.js
var overlappingItemNames, overlappingSkillNames, init_overlappingNames = __esm({
  "node_modules/libram/dist/overlappingNames.js": function() {
    init_kolmafia_polyfill();
    overlappingItemNames = ["spider web", "really sticky spider web", "dictionary", "NG", "Cloaca-Cola", "yo-yo", "top", "ball", "kite", "yo", "red potion", "blue potion", "bowling ball", "adder", "red button", "pile of sand", "mushroom", "deluxe mushroom"], overlappingSkillNames = ["Shoot", "Thrust-Smack", "Headbutt", "Toss", "Knife in the Dark", "Sing", "Disarm", "LIGHT", "BURN", "Extract", "Meteor Shower", "Snipe", "Cleave", "Boil", "Slice", "Rainbow"];
  }
});

// node_modules/libram/dist/combat.js
function _get(target, property, receiver) {
  return typeof Reflect != "undefined" && Reflect.get ? _get = Reflect.get : _get = function(target2, property2, receiver2) {
    var base = _superPropBase(target2, property2);
    if (base) {
      var desc = Object.getOwnPropertyDescriptor(base, property2);
      return desc.get ? desc.get.call(receiver2) : desc.value;
    }
  }, _get(target, property, receiver || target);
}
function _superPropBase(object, property) {
  for (; !Object.prototype.hasOwnProperty.call(object, property) && (object = _getPrototypeOf2(object), object !== null); )
    ;
  return object;
}
function _createForOfIteratorHelper4(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray5(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray5(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray5(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray5(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray5(o, minLen);
  }
}
function _iterableToArray2(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray5(arr);
}
function _arrayLikeToArray5(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _defineProperties4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass4(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties4(Constructor.prototype, protoProps), staticProps && _defineProperties4(Constructor, staticProps), Constructor;
}
function _defineProperty4(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _classCallCheck5(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _inherits2(subClass, superClass) {
  if (typeof superClass != "function" && superClass !== null)
    throw new TypeError("Super expression must either be null or a function");
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf2(subClass, superClass);
}
function _createSuper2(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct2();
  return function() {
    var Super = _getPrototypeOf2(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf2(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else
      result = Super.apply(this, arguments);
    return _possibleConstructorReturn2(this, result);
  };
}
function _possibleConstructorReturn2(self, call) {
  if (call && (typeof call == "object" || typeof call == "function"))
    return call;
  if (call !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized2(self);
}
function _assertThisInitialized2(self) {
  if (self === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return self;
}
function _wrapNativeSuper2(Class6) {
  var _cache = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
  return _wrapNativeSuper2 = function(Class7) {
    if (Class7 === null || !_isNativeFunction2(Class7))
      return Class7;
    if (typeof Class7 != "function")
      throw new TypeError("Super expression must either be null or a function");
    if (typeof _cache != "undefined") {
      if (_cache.has(Class7))
        return _cache.get(Class7);
      _cache.set(Class7, Wrapper);
    }
    function Wrapper() {
      return _construct2(Class7, arguments, _getPrototypeOf2(this).constructor);
    }
    return Wrapper.prototype = Object.create(Class7.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf2(Wrapper, Class7);
  }, _wrapNativeSuper2(Class6);
}
function _construct2(Parent, args2, Class6) {
  return _isNativeReflectConstruct2() ? _construct2 = Reflect.construct : _construct2 = function(Parent2, args3, Class7) {
    var a = [null];
    a.push.apply(a, args3);
    var Constructor = Function.bind.apply(Parent2, a), instance = new Constructor();
    return Class7 && _setPrototypeOf2(instance, Class7.prototype), instance;
  }, _construct2.apply(null, arguments);
}
function _isNativeReflectConstruct2() {
  if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch (e) {
    return !1;
  }
}
function _isNativeFunction2(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _setPrototypeOf2(o, p) {
  return _setPrototypeOf2 = Object.setPrototypeOf || function(o2, p2) {
    return o2.__proto__ = p2, o2;
  }, _setPrototypeOf2(o, p);
}
function _getPrototypeOf2(o) {
  return _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  }, _getPrototypeOf2(o);
}
function getMacroId() {
  var name = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : MACRO_NAME, macroMatches = (0, import_kolmafia6.xpath)((0, import_kolmafia6.visitUrl)("account_combatmacros.php"), '//select[@name="macroid"]/option[text()="'.concat(name, '"]/@value'));
  if (macroMatches.length === 0) {
    (0, import_kolmafia6.visitUrl)("account_combatmacros.php?action=new");
    var newMacroText = (0, import_kolmafia6.visitUrl)("account_combatmacros.php?macroid=0&name=".concat(name, "&macrotext=abort&action=save"));
    return parseInt((0, import_kolmafia6.xpath)(newMacroText, "//input[@name=".concat(name, "]/@value"))[0], 10);
  } else
    return parseInt(macroMatches[0], 10);
}
function itemOrNameToItem(itemOrName) {
  return typeof itemOrName == "string" ? import_kolmafia6.Item.get(itemOrName) : itemOrName;
}
function itemOrItemsBallsMacroName(itemOrItems) {
  if (Array.isArray(itemOrItems))
    return itemOrItems.map(itemOrItemsBallsMacroName).join(", ");
  var item10 = itemOrNameToItem(itemOrItems);
  return overlappingItemNames.includes(item10.name) ? item10.id.toFixed(0) : item10.name;
}
function itemOrItemsBallsMacroPredicate(itemOrItems) {
  return Array.isArray(itemOrItems) ? itemOrItems.map(itemOrItemsBallsMacroPredicate).join(" && ") : "hascombatitem ".concat(itemOrItems);
}
function skillOrNameToSkill(skillOrName) {
  return typeof skillOrName == "string" ? import_kolmafia6.Skill.get(skillOrName) : skillOrName;
}
function skillBallsMacroName(skillOrName) {
  var skill = skillOrNameToSkill(skillOrName);
  return skill.name.match(/^[A-Za-z ]+$/) && !overlappingSkillNames.includes(skill.name) ? skill.name : skill.id;
}
function adventureMacro(loc, macro) {
  macro.save(), (0, import_kolmafia6.setAutoAttack)(0);
  try {
    for ((0, import_kolmafia6.adv1)(loc, 0, ""); (0, import_kolmafia6.inMultiFight)(); )
      (0, import_kolmafia6.runCombat)();
    (0, import_kolmafia6.choiceFollowsFight)() && (0, import_kolmafia6.visitUrl)("choice.php");
  } finally {
    Macro.clearSaved();
  }
}
function adventureMacroAuto(loc, autoMacro) {
  var _nextMacro, nextMacro = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
  nextMacro = (_nextMacro = nextMacro) !== null && _nextMacro !== void 0 ? _nextMacro : Macro.abort(), autoMacro.setAutoAttack(), nextMacro.save();
  try {
    for ((0, import_kolmafia6.adv1)(loc, 0, ""); (0, import_kolmafia6.inMultiFight)(); )
      (0, import_kolmafia6.runCombat)();
    (0, import_kolmafia6.choiceFollowsFight)() && (0, import_kolmafia6.visitUrl)("choice.php");
  } finally {
    Macro.clearSaved();
  }
}
var import_kolmafia6, MACRO_NAME, InvalidMacroError, Macro, StrictMacro, init_combat = __esm({
  "node_modules/libram/dist/combat.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia6 = require("kolmafia");
    init_lib();
    init_overlappingNames();
    init_property();
    MACRO_NAME = "Script Autoattack Macro";
    InvalidMacroError = /* @__PURE__ */ function(_Error) {
      _inherits2(InvalidMacroError2, _Error);
      var _super = _createSuper2(InvalidMacroError2);
      function InvalidMacroError2() {
        return _classCallCheck5(this, InvalidMacroError2), _super.apply(this, arguments);
      }
      return InvalidMacroError2;
    }(/* @__PURE__ */ _wrapNativeSuper2(Error)), Macro = /* @__PURE__ */ function() {
      function Macro3() {
        _classCallCheck5(this, Macro3), _defineProperty4(this, "components", []), _defineProperty4(this, "name", MACRO_NAME);
      }
      return _createClass4(Macro3, [{
        key: "toString",
        value: (
          /**
           * Convert macro to string.
           *
           * @returns BALLS macro
           */
          function() {
            return (this.components.join(";") + ";").replace(/;;+/g, ";");
          }
        )
        /**
         * Gives your macro a new name to be used when saving an autoattack.
         *
         * @param name The name to be used when saving as an autoattack.
         * @returns The macro in question
         */
      }, {
        key: "rename",
        value: function(name) {
          return this.name = name, this;
        }
        /**
         * Creates a new Macro with a name other than the default name.
         *
         * @param name The name to assign this macro.
         * @returns A new Macro with the assigned name.
         */
      }, {
        key: "save",
        value: (
          /**
           * Save a macro to a Mafia property for use in a consult script.
           */
          function() {
            _set(Macro3.SAVED_MACRO_PROPERTY, this.toString());
          }
        )
        /**
         * Load a saved macro from the Mafia property.
         *
         * @returns Loaded macro text
         */
      }, {
        key: "step",
        value: (
          /**
           * Statefully add one or several steps to a macro.
           *
           * @param nextSteps The steps to add to the macro.
           * @returns {Macro} This object itself.
           */
          function() {
            for (var _ref, _this$components, _len = arguments.length, nextSteps = new Array(_len), _key = 0; _key < _len; _key++)
              nextSteps[_key] = arguments[_key];
            var nextStepsStrings = (_ref = []).concat.apply(_ref, _toConsumableArray2(nextSteps.map(function(x) {
              return x instanceof Macro3 ? x.components : [x];
            })));
            return (_this$components = this.components).push.apply(_this$components, _toConsumableArray2(nextStepsStrings.filter(function(s) {
              return s.length > 0;
            }))), this;
          }
        )
        /**
         * Statefully add one or several steps to a macro.
         *
         * @param nextSteps The steps to add to the macro.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "submit",
        value: (
          /**
           * Submit the built macro to KoL. Only works inside combat.
           *
           * @returns Contents of the fight page after macro submission
           */
          function() {
            var final = this.toString();
            return (0, import_kolmafia6.visitUrl)("fight.php?action=macro&macrotext=".concat((0, import_kolmafia6.urlEncode)(final)), !0, !0);
          }
        )
        /**
         * Set this macro as a KoL native autoattack.
         */
      }, {
        key: "setAutoAttack",
        value: function() {
          var id = Macro3.cachedMacroIds.get(this.name);
          id === void 0 && (id = getMacroId(this.name), Macro3.cachedMacroIds.set(this.name, id)), !((0, import_kolmafia6.getAutoAttack)() === 99e6 + id && this.toString() === Macro3.cachedAutoAttacks.get(this.name)) && ((0, import_kolmafia6.visitUrl)("account_combatmacros.php?macroid=".concat(id, "&name=").concat((0, import_kolmafia6.urlEncode)(this.name), "&macrotext=").concat((0, import_kolmafia6.urlEncode)(this.toString()), "&action=save"), !0, !0), (0, import_kolmafia6.visitUrl)("account.php?am=1&action=autoattack&value=".concat(99e6 + id, "&ajax=1")), Macro3.cachedAutoAttacks.set(this.name, this.toString()));
        }
        /**
         * Renames the macro, then sets it as an autoattack.
         *
         * @param name The name to save the macro under as an autoattack.
         */
      }, {
        key: "setAutoAttackAs",
        value: function(name) {
          this.name = name, this.setAutoAttack();
        }
        /**
         * Clear all cached autoattacks, and delete all stored macros server-side.
         */
      }, {
        key: "abort",
        value: (
          /**
           * Add an "abort" step to this macro.
           *
           * @returns {Macro} This object itself.
           */
          function() {
            return this.step("abort");
          }
        )
        /**
         * Create a new macro with an "abort" step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "abortWithWarning",
        value: (
          /**
           * Adds an "abort" step to this macro, with a warning message to print
           *
           * @param warning The warning message to print
           * @returns  {Macro} This object itself.
           */
          function(warning) {
            return this.step('abort "'.concat(warning, '"'));
          }
        )
        /**
         * Create a new macro with an "abort" step to this macro, with a warning message to print
         *
         * @param warning The warning message to print
         * @returns  {Macro} This object itself.
         */
      }, {
        key: "runaway",
        value: (
          /**
           * Add a "runaway" step to this macro.
           *
           * @returns {Macro} This object itself.
           */
          function() {
            return this.step("runaway");
          }
        )
        /**
         * Create a new macro with an "runaway" step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "if_",
        value: (
          /**
           * Add an "if" statement to this macro.
           *
           * @param condition The BALLS condition for the if statement.
           * @param ifTrue Continuation if the condition is true.
           * @returns {Macro} This object itself.
           */
          function(condition, ifTrue) {
            return this.step("if ".concat(Macro3.makeBALLSPredicate(condition))).step(ifTrue).step("endif");
          }
        )
        /**
         * Create a new macro with an "if" statement.
         *
         * @param condition The BALLS condition for the if statement.
         * @param ifTrue Continuation if the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "ifNot",
        value: (
          /**
           * Add an "if" statement to this macro, inverting the condition.
           *
           * @param condition The BALLS condition for the if statement.
           * @param ifTrue Continuation if the condition is true.
           * @returns {Macro} This object itself.
           */
          function(condition, ifTrue) {
            return this.step("if !(".concat(Macro3.makeBALLSPredicate(condition), ")")).step(ifTrue).step("endif");
          }
        )
        /**
         * Create a new macro with an "if" statement, inverting the condition.
         *
         * @param condition The BALLS condition for the if statement.
         * @param ifTrue Continuation if the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "while_",
        value: (
          /**
           * Add a "while" statement to this macro.
           *
           * @param condition The BALLS condition for the if statement.
           * @param contents Loop to repeat while the condition is true.
           * @returns {Macro} This object itself.
           */
          function(condition, contents) {
            return this.step("while ".concat(condition)).step(contents).step("endwhile");
          }
        )
        /**
         * Create a new macro with a "while" statement.
         *
         * @param condition The BALLS condition for the if statement.
         * @param contents Loop to repeat while the condition is true.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "externalIf",
        value: (
          /**
           * Conditionally add a step to a macro based on a condition evaluated at the time of building the macro.
           *
           * @param condition The JS condition.
           * @param ifTrue Continuation to add if the condition is true.
           * @param ifFalse Optional input to turn this into an if...else statement.
           * @returns {Macro} This object itself.
           */
          function(condition, ifTrue, ifFalse) {
            return condition ? this.step(ifTrue) : ifFalse ? this.step(ifFalse) : this;
          }
        )
        /**
         * Create a new macro with a condition evaluated at the time of building the macro.
         *
         * @param condition The JS condition.
         * @param ifTrue Continuation to add if the condition is true.
         * @param ifFalse Optional input to turn this into an if...else statement.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "repeat",
        value: (
          /**
           * Add a repeat step to the macro.
           *
           * @returns {Macro} This object itself.
           */
          function() {
            return this.step("repeat");
          }
        )
        /**
         * Add one or more skill cast steps to the macro.
         *
         * @param skills Skills to cast.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "skill",
        value: function() {
          for (var _len2 = arguments.length, skills3 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)
            skills3[_key2] = arguments[_key2];
          return this.step.apply(this, _toConsumableArray2(skills3.map(function(skill2) {
            return "skill ".concat(skillBallsMacroName(skill2));
          })));
        }
        /**
         * Create a new macro with one or more skill cast steps.
         *
         * @param skills Skills to cast.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "trySkill",
        value: (
          /**
           * Add one or more skill cast steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try casting.
           * @returns {Macro} This object itself.
           */
          function() {
            for (var _len3 = arguments.length, skills3 = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)
              skills3[_key3] = arguments[_key3];
            return this.step.apply(this, _toConsumableArray2(skills3.map(function(skill) {
              return Macro3.if_("hasskill ".concat(skillBallsMacroName(skill)), Macro3.skill(skill));
            })));
          }
        )
        /**
         * Create a new macro with one or more skill cast steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try casting.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "trySkillRepeat",
        value: (
          /**
           * Add one or more skill-cast-and-repeat steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try repeatedly casting.
           * @returns {Macro} This object itself.
           */
          function() {
            for (var _len4 = arguments.length, skills3 = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++)
              skills3[_key4] = arguments[_key4];
            return this.step.apply(this, _toConsumableArray2(skills3.map(function(skill) {
              return Macro3.if_("hasskill ".concat(skillBallsMacroName(skill)), Macro3.skill(skill).repeat());
            })));
          }
        )
        /**
         * Create a new macro with one or more skill-cast-and-repeat steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try repeatedly casting.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "item",
        value: (
          /**
           * Add one or more item steps to the macro.
           *
           * @param items Items to use. Pass a tuple [item1, item2] to funksling.
           * @returns {Macro} This object itself.
           */
          function() {
            for (var _len5 = arguments.length, items = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++)
              items[_key5] = arguments[_key5];
            return this.step.apply(this, _toConsumableArray2(items.map(function(itemOrItems) {
              return "use ".concat(itemOrItemsBallsMacroName(itemOrItems));
            })));
          }
        )
        /**
         * Create a new macro with one or more item steps.
         *
         * @param items Items to use. Pass a tuple [item1, item2] to funksling.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "tryItem",
        value: (
          /**
           * Add one or more item steps to the macro, where each step checks to see if you have the item first.
           *
           * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
           * @returns {Macro} This object itself.
           */
          function() {
            for (var _len6 = arguments.length, items = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++)
              items[_key6] = arguments[_key6];
            return this.step.apply(this, _toConsumableArray2(items.map(function(item10) {
              return Macro3.if_(itemOrItemsBallsMacroPredicate(item10), "use ".concat(itemOrItemsBallsMacroName(item10)));
            })));
          }
        )
        /**
         * Create a new macro with one or more item steps, where each step checks to see if you have the item first.
         *
         * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
         * @returns {Macro} This object itself.
         */
      }, {
        key: "attack",
        value: (
          /**
           * Add an attack step to the macro.
           *
           * @returns {Macro} This object itself.
           */
          function() {
            return this.step("attack");
          }
        )
        /**
         * Create a new macro with an attack step.
         *
         * @returns {Macro} This object itself.
         */
      }, {
        key: "ifHolidayWanderer",
        value: (
          /**
           * Create an if_ statement based on what holiday of loathing it currently is. On non-holidays, returns the original macro, unmutated.
           *
           * @param macro The macro to place in the if_ statement
           * @returns This macro with supplied macro wapped in if statement matching holiday wanderers
           */
          function(macro) {
            var todaysWanderers = getTodaysHolidayWanderers();
            return todaysWanderers.length === 0 ? this : this.if_(todaysWanderers.map(function(monster) {
              return "monsterid ".concat(monster.id);
            }).join(" || "), macro);
          }
        )
        /**
         * Create a new macro starting with an ifHolidayWanderer step.
         *
         * @param macro The macro to place inside the if_ statement
         * @returns New macro with supplied macro wrapped in if statement matching holiday wanderers
         */
      }, {
        key: "ifNotHolidayWanderer",
        value: (
          /**
           * Create an if_ statement based on what holiday of loathing it currently is. On non-holidays, returns the original macro, with the input macro appended.
           *
           * @param macro The macro to place in the if_ statement.
           * @returns This macro with supplied macro wrapped in if statement matching monsters that are not holiday wanderers
           */
          function(macro) {
            var todaysWanderers = getTodaysHolidayWanderers();
            return todaysWanderers.length === 0 ? this.step(macro) : this.if_(todaysWanderers.map(function(monster) {
              return "!monsterid ".concat(monster.id);
            }).join(" && "), macro);
          }
        )
        /**
         * Create a new macro starting with an ifNotHolidayWanderer step.
         *
         * @param macro The macro to place inside the if_ statement
         * @returns New macro with supplied macro wrapped in if statement matching monsters that are not holiday wanderers
         */
      }], [{
        key: "rename",
        value: function(name) {
          return new this().rename(name);
        }
      }, {
        key: "load",
        value: function() {
          var _this;
          return (_this = new this()).step.apply(_this, _toConsumableArray2(get(Macro3.SAVED_MACRO_PROPERTY).split(";")));
        }
        /**
         * Clear the saved macro in the Mafia property.
         */
      }, {
        key: "clearSaved",
        value: function() {
          (0, import_kolmafia6.removeProperty)(Macro3.SAVED_MACRO_PROPERTY);
        }
      }, {
        key: "step",
        value: function() {
          var _this2;
          return (_this2 = new this()).step.apply(_this2, arguments);
        }
      }, {
        key: "clearAutoAttackMacros",
        value: function() {
          var _iterator = _createForOfIteratorHelper4(Macro3.cachedAutoAttacks.keys()), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _Macro$cachedMacroIds, name = _step.value, id = (_Macro$cachedMacroIds = Macro3.cachedMacroIds.get(name)) !== null && _Macro$cachedMacroIds !== void 0 ? _Macro$cachedMacroIds : getMacroId(name);
              (0, import_kolmafia6.visitUrl)("account_combatmacros.php?macroid=".concat(id, "&action=edit&what=Delete&confirm=1")), Macro3.cachedAutoAttacks.delete(name), Macro3.cachedMacroIds.delete(name);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }
      }, {
        key: "abort",
        value: function() {
          return new this().abort();
        }
      }, {
        key: "abortWithWarning",
        value: function(warning) {
          return new this().abortWithWarning(warning);
        }
      }, {
        key: "runaway",
        value: function() {
          return new this().runaway();
        }
      }, {
        key: "makeBALLSPredicate",
        value: function(condition) {
          var ballsCondition = "";
          if (condition instanceof import_kolmafia6.Monster)
            ballsCondition = "monsterid ".concat(condition.id);
          else if (condition instanceof Array)
            ballsCondition = condition.map(function(mon) {
              return "monsterid ".concat(mon.id);
            }).join(" || "), ballsCondition = "(".concat(ballsCondition, ")");
          else if (condition instanceof import_kolmafia6.Effect)
            ballsCondition = "haseffect ".concat(condition.id);
          else if (condition instanceof import_kolmafia6.Skill)
            ballsCondition = "hasskill ".concat(skillBallsMacroName(condition));
          else if (condition instanceof import_kolmafia6.Item) {
            if (!condition.combat)
              throw new InvalidMacroError("Item ".concat(condition, " cannot be made a valid BALLS predicate (it is not combat-usable)"));
            ballsCondition = "hascombatitem ".concat(itemOrItemsBallsMacroName(condition));
          } else if (condition instanceof import_kolmafia6.Location) {
            var snarfblat = condition.id;
            if (snarfblat < 1)
              throw new InvalidMacroError("Location ".concat(condition, " cannot be made a valid BALLS predicate (it has no location id)"));
            ballsCondition = "snarfblat ".concat(snarfblat);
          } else if (condition instanceof import_kolmafia6.Class) {
            if (condition.id > 6)
              throw new InvalidMacroError("Class ".concat(condition, " cannot be made a valid BALLS predicate (it is not a standard class)"));
            ballsCondition = condition.toString().replaceAll(" ", "").toLowerCase();
          } else
            condition instanceof import_kolmafia6.Stat ? ballsCondition = "".concat(condition.toString().toLowerCase(), "class") : ballsCondition = condition;
          return ballsCondition;
        }
      }, {
        key: "if_",
        value: function(condition, ifTrue) {
          return new this().if_(condition, ifTrue);
        }
      }, {
        key: "ifNot",
        value: function(condition, ifTrue) {
          return new this().ifNot(condition, ifTrue);
        }
      }, {
        key: "while_",
        value: function(condition, contents) {
          return new this().while_(condition, contents);
        }
      }, {
        key: "externalIf",
        value: function(condition, ifTrue, ifFalse) {
          return new this().externalIf(condition, ifTrue, ifFalse);
        }
      }, {
        key: "skill",
        value: function() {
          var _this3;
          return (_this3 = new this()).skill.apply(_this3, arguments);
        }
      }, {
        key: "trySkill",
        value: function() {
          var _this4;
          return (_this4 = new this()).trySkill.apply(_this4, arguments);
        }
      }, {
        key: "trySkillRepeat",
        value: function() {
          var _this5;
          return (_this5 = new this()).trySkillRepeat.apply(_this5, arguments);
        }
      }, {
        key: "item",
        value: function() {
          var _this6;
          return (_this6 = new this()).item.apply(_this6, arguments);
        }
      }, {
        key: "tryItem",
        value: function() {
          var _this7;
          return (_this7 = new this()).tryItem.apply(_this7, arguments);
        }
      }, {
        key: "attack",
        value: function() {
          return new this().attack();
        }
      }, {
        key: "ifHolidayWanderer",
        value: function(macro) {
          return new this().ifHolidayWanderer(macro);
        }
      }, {
        key: "ifNotHolidayWanderer",
        value: function(macro) {
          return new this().ifNotHolidayWanderer(macro);
        }
      }]), Macro3;
    }();
    _defineProperty4(Macro, "SAVED_MACRO_PROPERTY", "libram_savedMacro");
    _defineProperty4(Macro, "cachedMacroIds", /* @__PURE__ */ new Map());
    _defineProperty4(Macro, "cachedAutoAttacks", /* @__PURE__ */ new Map());
    StrictMacro = /* @__PURE__ */ function(_Macro) {
      _inherits2(StrictMacro2, _Macro);
      var _super2 = _createSuper2(StrictMacro2);
      function StrictMacro2() {
        return _classCallCheck5(this, StrictMacro2), _super2.apply(this, arguments);
      }
      return _createClass4(StrictMacro2, [{
        key: "skill",
        value: (
          /**
           * Add one or more skill cast steps to the macro.
           *
           * @param skills Skills to cast.
           * @returns {StrictMacro} This object itself.
           */
          function() {
            for (var _get22, _len7 = arguments.length, skills3 = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++)
              skills3[_key7] = arguments[_key7];
            return (_get22 = _get(_getPrototypeOf2(StrictMacro2.prototype), "skill", this)).call.apply(_get22, [this].concat(skills3));
          }
        )
        /**
         * Create a new macro with one or more skill cast steps.
         *
         * @param skills Skills to cast.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "item",
        value: (
          /**
           * Add one or more item steps to the macro.
           *
           * @param items Items to use. Pass a tuple [item1, item2] to funksling.
           * @returns {StrictMacro} This object itself.
           */
          function() {
            for (var _get3, _len8 = arguments.length, items = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++)
              items[_key8] = arguments[_key8];
            return (_get3 = _get(_getPrototypeOf2(StrictMacro2.prototype), "item", this)).call.apply(_get3, [this].concat(items));
          }
        )
        /**
         * Create a new macro with one or more item steps.
         *
         * @param items Items to use. Pass a tuple [item1, item2] to funksling.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "trySkill",
        value: (
          /**
           * Add one or more skill cast steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try casting.
           * @returns {StrictMacro} This object itself.
           */
          function() {
            for (var _get4, _len9 = arguments.length, skills3 = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++)
              skills3[_key9] = arguments[_key9];
            return (_get4 = _get(_getPrototypeOf2(StrictMacro2.prototype), "trySkill", this)).call.apply(_get4, [this].concat(skills3));
          }
        )
        /**
         * Create a new macro with one or more skill cast steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try casting.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "tryItem",
        value: (
          /**
           * Add one or more item steps to the macro, where each step checks to see if you have the item first.
           *
           * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
           * @returns {StrictMacro} This object itself.
           */
          function() {
            for (var _get5, _len10 = arguments.length, items = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++)
              items[_key10] = arguments[_key10];
            return (_get5 = _get(_getPrototypeOf2(StrictMacro2.prototype), "tryItem", this)).call.apply(_get5, [this].concat(items));
          }
        )
        /**
         * Create a new macro with one or more item steps, where each step checks to see if you have the item first.
         *
         * @param items Items to try using. Pass a tuple [item1, item2] to funksling.
         * @returns {StrictMacro} This object itself.
         */
      }, {
        key: "trySkillRepeat",
        value: (
          /**
           * Add one or more skill-cast-and-repeat steps to the macro, where each step checks if you have the skill first.
           *
           * @param skills Skills to try repeatedly casting.
           * @returns {StrictMacro} This object itself.
           */
          function() {
            for (var _get6, _len11 = arguments.length, skills3 = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++)
              skills3[_key11] = arguments[_key11];
            return (_get6 = _get(_getPrototypeOf2(StrictMacro2.prototype), "trySkillRepeat", this)).call.apply(_get6, [this].concat(skills3));
          }
        )
        /**
         * Create a new macro with one or more skill-cast-and-repeat steps, where each step checks if you have the skill first.
         *
         * @param skills Skills to try repeatedly casting.
         * @returns {StrictMacro} This object itself.
         */
      }], [{
        key: "skill",
        value: function() {
          var _this8;
          return (_this8 = new this()).skill.apply(_this8, arguments);
        }
      }, {
        key: "item",
        value: function() {
          var _this9;
          return (_this9 = new this()).item.apply(_this9, arguments);
        }
      }, {
        key: "trySkill",
        value: function() {
          var _this10;
          return (_this10 = new this()).trySkill.apply(_this10, arguments);
        }
      }, {
        key: "tryItem",
        value: function() {
          var _this11;
          return (_this11 = new this()).tryItem.apply(_this11, arguments);
        }
      }, {
        key: "trySkillRepeat",
        value: function() {
          var _this12;
          return (_this12 = new this()).trySkillRepeat.apply(_this12, arguments);
        }
      }]), StrictMacro2;
    }(Macro);
  }
});

// node_modules/libram/dist/maximize.js
function _slicedToArray4(arr, i) {
  return _arrayWithHoles4(arr) || _iterableToArrayLimit4(arr, i) || _unsupportedIterableToArray6(arr, i) || _nonIterableRest4();
}
function _nonIterableRest4() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit4(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles4(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _defineProperties5(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass5(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties5(Constructor.prototype, protoProps), staticProps && _defineProperties5(Constructor, staticProps), Constructor;
}
function _classPrivateFieldGet(receiver, privateMap) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
  return _classApplyDescriptorGet(receiver, descriptor);
}
function _classApplyDescriptorGet(receiver, descriptor) {
  return descriptor.get ? descriptor.get.call(receiver) : descriptor.value;
}
function _classPrivateFieldSet(receiver, privateMap, value) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set");
  return _classApplyDescriptorSet(receiver, descriptor, value), value;
}
function _classExtractFieldDescriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver))
    throw new TypeError("attempted to " + action + " private field on non-instance");
  return privateMap.get(receiver);
}
function _classApplyDescriptorSet(receiver, descriptor, value) {
  if (descriptor.set)
    descriptor.set.call(receiver, value);
  else {
    if (!descriptor.writable)
      throw new TypeError("attempted to set read only private field");
    descriptor.value = value;
  }
}
function _classCallCheck6(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _createForOfIteratorHelper5(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray6(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _taggedTemplateLiteral2(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function ownKeys3(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys3(Object(source), !0).forEach(function(key) {
      _defineProperty5(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys3(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty5(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _toConsumableArray3(arr) {
  return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray6(arr) || _nonIterableSpread3();
}
function _nonIterableSpread3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray6(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray6(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray6(o, minLen);
  }
}
function _iterableToArray3(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles3(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray6(arr);
}
function _arrayLikeToArray6(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function toMaximizerName(_ref) {
  var name = _ref.name, id = _ref.id;
  return name.includes(";") ? "\xB6".concat(id) : name;
}
function mergeMaximizeOptions(defaultOptions, addendums) {
  var _addendums$updateOnFa, _addendums$updateOnCa, _addendums$useOutfitC, _addendums$forceEquip, _addendums$preventEqu, _addendums$bonusEquip, _addendums$onlySlot, _addendums$preventSlo, _addendums$forceUpdat, _addendums$modes;
  return {
    updateOnFamiliarChange: (_addendums$updateOnFa = addendums.updateOnFamiliarChange) !== null && _addendums$updateOnFa !== void 0 ? _addendums$updateOnFa : defaultOptions.updateOnFamiliarChange,
    updateOnCanEquipChanged: (_addendums$updateOnCa = addendums.updateOnCanEquipChanged) !== null && _addendums$updateOnCa !== void 0 ? _addendums$updateOnCa : defaultOptions.updateOnCanEquipChanged,
    useOutfitCaching: (_addendums$useOutfitC = addendums.useOutfitCaching) !== null && _addendums$useOutfitC !== void 0 ? _addendums$useOutfitC : defaultOptions.useOutfitCaching,
    forceEquip: [].concat(_toConsumableArray3(defaultOptions.forceEquip), _toConsumableArray3((_addendums$forceEquip = addendums.forceEquip) !== null && _addendums$forceEquip !== void 0 ? _addendums$forceEquip : [])),
    preventEquip: [].concat(_toConsumableArray3(defaultOptions.preventEquip), _toConsumableArray3((_addendums$preventEqu = addendums.preventEquip) !== null && _addendums$preventEqu !== void 0 ? _addendums$preventEqu : [])).filter(function(item10) {
      var _addendums$forceEquip2;
      return !defaultOptions.forceEquip.includes(item10) && !((_addendums$forceEquip2 = addendums.forceEquip) !== null && _addendums$forceEquip2 !== void 0 && _addendums$forceEquip2.includes(item10));
    }),
    bonusEquip: new Map([].concat(_toConsumableArray3(defaultOptions.bonusEquip), _toConsumableArray3((_addendums$bonusEquip = addendums.bonusEquip) !== null && _addendums$bonusEquip !== void 0 ? _addendums$bonusEquip : []))),
    onlySlot: (_addendums$onlySlot = addendums.onlySlot) !== null && _addendums$onlySlot !== void 0 ? _addendums$onlySlot : defaultOptions.onlySlot,
    preventSlot: [].concat(_toConsumableArray3(defaultOptions.preventSlot), _toConsumableArray3((_addendums$preventSlo = addendums.preventSlot) !== null && _addendums$preventSlo !== void 0 ? _addendums$preventSlo : [])),
    forceUpdate: (_addendums$forceUpdat = addendums.forceUpdate) !== null && _addendums$forceUpdat !== void 0 ? _addendums$forceUpdat : defaultOptions.forceUpdate,
    modes: _objectSpread3(_objectSpread3({}, defaultOptions.modes), (_addendums$modes = addendums.modes) !== null && _addendums$modes !== void 0 ? _addendums$modes : {})
  };
}
function setDefaultMaximizeOptions(options) {
  Object.assign(defaultMaximizeOptions, options);
}
function getCurrentModes() {
  var modes = {}, _iterator = _createForOfIteratorHelper5(modeableCommands), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var key = _step.value;
      (0, import_kolmafia7.haveEquipped)(modeableItems[key]) && (modes[key] = modeableState[key]());
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return modes;
}
function applyModes(modes) {
  var _iterator2 = _createForOfIteratorHelper5(modeableCommands), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var command = _step2.value;
      (0, import_kolmafia7.haveEquipped)(modeableItems[command]) && modes[command] !== void 0 && modeableState[command]() !== modes[command] && (0, import_kolmafia7.cliExecute)(command + " " + modes[command]);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}
function saveOutfit(name) {
  (0, import_kolmafia7.cliExecute)("outfit save ".concat(name));
}
function canEquipItemCount() {
  var stats = $stats(_templateObject82 || (_templateObject82 = _taggedTemplateLiteral2(["Muscle, Mysticality, Moxie"]))).map(function(stat) {
    return Math.min((0, import_kolmafia7.myBasestat)(stat), 300);
  });
  return stats.every(function(value, index) {
    return value === cachedStats[index];
  }) || (cachedStats = stats, cachedCanEquipItemCount = import_kolmafia7.Item.all().filter(function(item10) {
    return (0, import_kolmafia7.canEquip)(item10);
  }).length), cachedCanEquipItemCount;
}
function checkCache(cacheKey, options) {
  var entry = cachedObjectives[cacheKey];
  return entry ? options.updateOnFamiliarChange && (0, import_kolmafia7.myFamiliar)() !== entry.familiar ? (logger_default.warning("Equipment found in maximize cache but familiar is different."), null) : options.updateOnCanEquipChanged && entry.canEquipItemCount !== canEquipItemCount() ? (logger_default.warning("Equipment found in maximize cache but equippable item list is out of date."), null) : entry : null;
}
function applyCached(entry, options) {
  var outfitName = options.useOutfitCaching ? outfitCache.get(entry) : void 0;
  if (outfitName) {
    (0, import_kolmafia7.isWearingOutfit)(outfitName) || (0, import_kolmafia7.outfit)(outfitName);
    var familiarEquip = entry.equipment.get($slot(_templateObject92 || (_templateObject92 = _taggedTemplateLiteral2(["familiar"]))));
    familiarEquip && (0, import_kolmafia7.equip)($slot(_templateObject102 || (_templateObject102 = _taggedTemplateLiteral2(["familiar"]))), familiarEquip);
  } else {
    var _iterator3 = _createForOfIteratorHelper5(entry.equipment), _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
        var _step3$value = _slicedToArray4(_step3.value, 2), slot = _step3$value[0], item10 = _step3$value[1];
        (0, import_kolmafia7.equippedItem)(slot) !== item10 && (0, import_kolmafia7.availableAmount)(item10) > 0 && (0, import_kolmafia7.equip)(slot, item10);
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    if (verifyCached(entry) && options.useOutfitCaching) {
      var _outfitName = outfitCache.insert(entry);
      logger_default.info("Saving equipment to outfit ".concat(_outfitName, ".")), saveOutfit(_outfitName);
    }
  }
  (0, import_kolmafia7.equippedAmount)($item(_templateObject112 || (_templateObject112 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0 && entry.rider.get($item(_templateObject122 || (_templateObject122 = _taggedTemplateLiteral2(["Crown of Thrones"])))) && (0, import_kolmafia7.enthroneFamiliar)(entry.rider.get($item(_templateObject132 || (_templateObject132 = _taggedTemplateLiteral2(["Crown of Thrones"])))) || $familiar.none), (0, import_kolmafia7.equippedAmount)($item(_templateObject142 || (_templateObject142 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0 && entry.rider.get($item(_templateObject152 || (_templateObject152 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) && (0, import_kolmafia7.bjornifyFamiliar)(entry.rider.get($item(_templateObject162 || (_templateObject162 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) || $familiar.none), applyModes(_objectSpread3(_objectSpread3({}, entry.modes), options.modes));
}
function verifyCached(entry) {
  var warn2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, success = !0, _iterator4 = _createForOfIteratorHelper5(slotStructure), _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
      var slotGroup = _step4.value, desiredSlots = slotGroup.map(function(slot) {
        var _entry$equipment$get;
        return [slot, (_entry$equipment$get = entry.equipment.get(slot)) !== null && _entry$equipment$get !== void 0 ? _entry$equipment$get : null];
      }).filter(function(_ref2) {
        var _ref3 = _slicedToArray4(_ref2, 2), item10 = _ref3[1];
        return item10 !== null;
      }), desiredSet = desiredSlots.map(function(_ref4) {
        var _ref5 = _slicedToArray4(_ref4, 2), item10 = _ref5[1];
        return item10;
      }), equippedSet = desiredSlots.map(function(_ref6) {
        var _ref7 = _slicedToArray4(_ref6, 1), slot = _ref7[0];
        return (0, import_kolmafia7.equippedItem)(slot);
      });
      setEqual(desiredSet, equippedSet) || (warn2 && logger_default.warning("Failed to apply cached ".concat(desiredSet.join(", "), " in ").concat(slotGroup.join(", "), ".")), success = !1);
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  return (0, import_kolmafia7.equippedAmount)($item(_templateObject242 || (_templateObject242 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0 && entry.rider.get($item(_templateObject252 || (_templateObject252 = _taggedTemplateLiteral2(["Crown of Thrones"])))) && entry.rider.get($item(_templateObject262 || (_templateObject262 = _taggedTemplateLiteral2(["Crown of Thrones"])))) !== (0, import_kolmafia7.myEnthronedFamiliar)() && (warn2 && logger_default.warning("Failed to apply ".concat(entry.rider.get($item(_templateObject272 || (_templateObject272 = _taggedTemplateLiteral2(["Crown of Thrones"])))), " in ").concat($item(_templateObject282 || (_templateObject282 = _taggedTemplateLiteral2(["Crown of Thrones"]))), ".")), success = !1), (0, import_kolmafia7.equippedAmount)($item(_templateObject292 || (_templateObject292 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0 && entry.rider.get($item(_templateObject302 || (_templateObject302 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) && entry.rider.get($item(_templateObject312 || (_templateObject312 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) !== (0, import_kolmafia7.myBjornedFamiliar)() && (warn2 && logger_default.warning("Failed to apply".concat(entry.rider.get($item(_templateObject322 || (_templateObject322 = _taggedTemplateLiteral2(["Buddy Bjorn"])))), " in ").concat($item(_templateObject332 || (_templateObject332 = _taggedTemplateLiteral2(["Buddy Bjorn"]))), ".")), success = !1), success;
}
function saveCached(cacheKey, options) {
  var equipment = /* @__PURE__ */ new Map(), rider = /* @__PURE__ */ new Map(), _iterator5 = _createForOfIteratorHelper5(cachedSlots), _step5;
  try {
    for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
      var _slot2 = _step5.value;
      equipment.set(_slot2, (0, import_kolmafia7.equippedItem)(_slot2));
    }
  } catch (err) {
    _iterator5.e(err);
  } finally {
    _iterator5.f();
  }
  if ((0, import_kolmafia7.equippedAmount)($item(_templateObject342 || (_templateObject342 = _taggedTemplateLiteral2(["card sleeve"])))) > 0 && equipment.set($slot(_templateObject352 || (_templateObject352 = _taggedTemplateLiteral2(["card-sleeve"]))), (0, import_kolmafia7.equippedItem)($slot(_templateObject362 || (_templateObject362 = _taggedTemplateLiteral2(["card-sleeve"]))))), (0, import_kolmafia7.equippedAmount)($item(_templateObject372 || (_templateObject372 = _taggedTemplateLiteral2(["Crown of Thrones"])))) > 0 && rider.set($item(_templateObject382 || (_templateObject382 = _taggedTemplateLiteral2(["Crown of Thrones"]))), (0, import_kolmafia7.myEnthronedFamiliar)()), (0, import_kolmafia7.equippedAmount)($item(_templateObject392 || (_templateObject392 = _taggedTemplateLiteral2(["Buddy Bjorn"])))) > 0 && rider.set($item(_templateObject402 || (_templateObject402 = _taggedTemplateLiteral2(["Buddy Bjorn"]))), (0, import_kolmafia7.myBjornedFamiliar)()), options.preventSlot && options.preventSlot.length > 0) {
    var _iterator6 = _createForOfIteratorHelper5(options.preventSlot), _step6;
    try {
      for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
        var slot = _step6.value;
        equipment.delete(slot);
      }
    } catch (err) {
      _iterator6.e(err);
    } finally {
      _iterator6.f();
    }
    options.preventSlot.includes($slot(_templateObject412 || (_templateObject412 = _taggedTemplateLiteral2(["buddy-bjorn"])))) && rider.delete($item(_templateObject422 || (_templateObject422 = _taggedTemplateLiteral2(["Buddy Bjorn"])))), options.preventSlot.includes($slot(_templateObject432 || (_templateObject432 = _taggedTemplateLiteral2(["crown-of-thrones"])))) && rider.delete($item(_templateObject442 || (_templateObject442 = _taggedTemplateLiteral2(["Crown of Thrones"]))));
  }
  if (options.onlySlot && options.onlySlot.length > 0) {
    var _iterator7 = _createForOfIteratorHelper5(import_kolmafia7.Slot.all()), _step7;
    try {
      for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
        var _slot = _step7.value;
        options.onlySlot.includes(_slot) || equipment.delete(_slot);
      }
    } catch (err) {
      _iterator7.e(err);
    } finally {
      _iterator7.f();
    }
    options.onlySlot.includes($slot(_templateObject452 || (_templateObject452 = _taggedTemplateLiteral2(["buddy-bjorn"])))) || rider.delete($item(_templateObject462 || (_templateObject462 = _taggedTemplateLiteral2(["Buddy Bjorn"])))), options.onlySlot.includes($slot(_templateObject472 || (_templateObject472 = _taggedTemplateLiteral2(["crown-of-thrones"])))) || rider.delete($item(_templateObject48 || (_templateObject48 = _taggedTemplateLiteral2(["Crown of Thrones"]))));
  }
  var entry = new CacheEntry(equipment, rider, (0, import_kolmafia7.myFamiliar)(), canEquipItemCount(), _objectSpread3(_objectSpread3({}, getCurrentModes()), options.modes));
  if (cachedObjectives[cacheKey] = entry, options.useOutfitCaching) {
    var outfitName = outfitCache.insert(entry);
    logger_default.info("Saving equipment to outfit ".concat(outfitName, ".")), saveOutfit(outfitName);
  }
}
function maximizeCached(objectives) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, fullOptions = mergeMaximizeOptions(defaultMaximizeOptions, options), forceEquip = fullOptions.forceEquip, preventEquip = fullOptions.preventEquip, bonusEquip = fullOptions.bonusEquip, onlySlot = fullOptions.onlySlot, preventSlot = fullOptions.preventSlot, forceUpdate = fullOptions.forceUpdate, objective = _toConsumableArray3(new Set([].concat(_toConsumableArray3(objectives.sort()), _toConsumableArray3(forceEquip.map(function(item10) {
    return '"equip '.concat(toMaximizerName(item10), '"');
  }).sort()), _toConsumableArray3(preventEquip.map(function(item10) {
    return '-"equip '.concat(toMaximizerName(item10), '"');
  }).sort()), _toConsumableArray3(onlySlot.map(function(slot) {
    return "".concat(slot);
  }).sort()), _toConsumableArray3(preventSlot.map(function(slot) {
    return "-".concat(slot);
  }).sort()), _toConsumableArray3(Array.from(bonusEquip.entries()).filter(function(_ref8) {
    var _ref9 = _slicedToArray4(_ref8, 2), bonus = _ref9[1];
    return bonus !== 0;
  }).map(function(_ref10) {
    var _ref11 = _slicedToArray4(_ref10, 2), item10 = _ref11[0], bonus = _ref11[1];
    return "".concat(Math.round(bonus * 100) / 100, ' "bonus ').concat(toMaximizerName(item10), '"');
  }).sort())))).join(", "), untouchedSlots = cachedSlots.filter(function(slot) {
    return preventSlot.includes(slot) || onlySlot.length > 0 && !onlySlot.includes(slot);
  }), cacheKey = [objective].concat(_toConsumableArray3(untouchedSlots.map(function(slot) {
    return "".concat(slot, ":").concat((0, import_kolmafia7.equippedItem)(slot));
  }).sort()), [have($effect(_templateObject49 || (_templateObject49 = _taggedTemplateLiteral2(["Offhand Remarkable"]))))]).join("; "), cacheEntry = checkCache(cacheKey, fullOptions);
  if (cacheEntry && !forceUpdate) {
    if (verifyCached(cacheEntry, !1))
      return !0;
    if (logger_default.info("Equipment found in maximize cache, equipping..."), applyCached(cacheEntry, fullOptions), verifyCached(cacheEntry))
      return logger_default.info("Equipped cached ".concat(cacheKey)), !0;
    logger_default.warning("Maximize cache application failed, maximizing...");
  }
  var result = (0, import_kolmafia7.maximize)(objective, !1);
  return saveCached(cacheKey, fullOptions), result;
}
function clearMaximizerCache() {
  outfitCache.clear();
  for (var member in cachedObjectives)
    delete cachedObjectives[member];
}
var import_kolmafia7, _templateObject46, _templateObject210, _templateObject310, _templateObject47, _templateObject52, _templateObject62, _templateObject72, _templateObject82, _templateObject92, _templateObject102, _templateObject112, _templateObject122, _templateObject132, _templateObject142, _templateObject152, _templateObject162, _templateObject172, _templateObject182, _templateObject192, _templateObject202, _templateObject212, _templateObject222, _templateObject232, _templateObject242, _templateObject252, _templateObject262, _templateObject272, _templateObject282, _templateObject292, _templateObject302, _templateObject312, _templateObject322, _templateObject332, _templateObject342, _templateObject352, _templateObject362, _templateObject372, _templateObject382, _templateObject392, _templateObject402, _templateObject412, _templateObject422, _templateObject432, _templateObject442, _templateObject452, _templateObject462, _templateObject472, _templateObject48, _templateObject49, defaultMaximizeOptions, modeableCommands, modeableItems, modeableState, cachedSlots, CacheEntry, _outfitSlots, _useHistory, _maxSize, OutfitLRUCache, cachedObjectives, outfitCache, cachedStats, cachedCanEquipItemCount, slotStructure, _maximizeParameters, _maximizeOptions, Requirement, init_maximize = __esm({
  "node_modules/libram/dist/maximize.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia7 = require("kolmafia");
    init_lib();
    init_logger();
    init_template_string();
    init_utils();
    defaultMaximizeOptions = {
      updateOnFamiliarChange: !0,
      updateOnCanEquipChanged: !0,
      useOutfitCaching: !0,
      forceEquip: [],
      preventEquip: [],
      bonusEquip: /* @__PURE__ */ new Map(),
      onlySlot: [],
      preventSlot: [],
      forceUpdate: !1,
      modes: {}
    };
    modeableCommands = ["backupcamera", "umbrella", "snowsuit", "edpiece", "retrocape", "parka"], modeableItems = {
      backupcamera: $item(_templateObject46 || (_templateObject46 = _taggedTemplateLiteral2(["backup camera"]))),
      umbrella: $item(_templateObject210 || (_templateObject210 = _taggedTemplateLiteral2(["unbreakable umbrella"]))),
      snowsuit: $item(_templateObject310 || (_templateObject310 = _taggedTemplateLiteral2(["Snow Suit"]))),
      edpiece: $item(_templateObject47 || (_templateObject47 = _taggedTemplateLiteral2(["The Crown of Ed the Undying"]))),
      retrocape: $item(_templateObject52 || (_templateObject52 = _taggedTemplateLiteral2(["unwrapped knock-off retro superhero cape"]))),
      parka: $item(_templateObject62 || (_templateObject62 = _taggedTemplateLiteral2(["Jurassic Parka"])))
    }, modeableState = {
      backupcamera: function() {
        return (0, import_kolmafia7.getProperty)("backupCameraMode");
      },
      umbrella: function() {
        return (0, import_kolmafia7.getProperty)("umbrellaState");
      },
      snowsuit: function() {
        return (0, import_kolmafia7.getProperty)("snowsuit");
      },
      edpiece: function() {
        return (0, import_kolmafia7.getProperty)("edPiece");
      },
      retrocape: function() {
        return (0, import_kolmafia7.getProperty)("retroCapeSuperhero") + " " + (0, import_kolmafia7.getProperty)("retroCapeWashingInstructions");
      },
      parka: function() {
        return (0, import_kolmafia7.getProperty)("parkaMode");
      }
    };
    cachedSlots = $slots(_templateObject72 || (_templateObject72 = _taggedTemplateLiteral2(["hat, weapon, off-hand, back, shirt, pants, acc1, acc2, acc3, familiar"]))), CacheEntry = function CacheEntry2(equipment, rider, familiar7, canEquipItemCount2, modes) {
      _classCallCheck6(this, CacheEntry2), _defineProperty5(this, "equipment", void 0), _defineProperty5(this, "rider", void 0), _defineProperty5(this, "familiar", void 0), _defineProperty5(this, "canEquipItemCount", void 0), _defineProperty5(this, "modes", void 0), this.equipment = equipment, this.rider = rider, this.familiar = familiar7, this.canEquipItemCount = canEquipItemCount2, this.modes = modes;
    }, _outfitSlots = /* @__PURE__ */ new WeakMap(), _useHistory = /* @__PURE__ */ new WeakMap(), _maxSize = /* @__PURE__ */ new WeakMap(), OutfitLRUCache = /* @__PURE__ */ function() {
      function OutfitLRUCache2(maxSize) {
        _classCallCheck6(this, OutfitLRUCache2), _outfitSlots.set(this, {
          writable: !0,
          value: []
        }), _useHistory.set(this, {
          writable: !0,
          value: []
        }), _maxSize.set(this, {
          writable: !0,
          value: void 0
        }), _classPrivateFieldSet(this, _maxSize, maxSize);
      }
      return _createClass5(OutfitLRUCache2, [{
        key: "checkConsistent",
        value: function() {
          if (_classPrivateFieldGet(this, _useHistory).length !== _classPrivateFieldGet(this, _outfitSlots).length || !_toConsumableArray3(_classPrivateFieldGet(this, _useHistory)).sort().every(function(value, index) {
            return value === index;
          }))
            throw new Error("Outfit cache consistency failed.");
        }
      }, {
        key: "promote",
        value: function(index) {
          _classPrivateFieldSet(this, _useHistory, [index].concat(_toConsumableArray3(_classPrivateFieldGet(this, _useHistory).filter(function(i) {
            return i !== index;
          })))), this.checkConsistent();
        }
      }, {
        key: "get",
        value: function(key) {
          var index = _classPrivateFieldGet(this, _outfitSlots).indexOf(key);
          if (!(index < 0))
            return this.promote(index), "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(index);
        }
      }, {
        key: "insert",
        value: function(key) {
          var lastUseIndex = void 0;
          if (_classPrivateFieldGet(this, _outfitSlots).length >= _classPrivateFieldGet(this, _maxSize)) {
            if (lastUseIndex = _classPrivateFieldGet(this, _useHistory).pop(), lastUseIndex === void 0)
              throw new Error("Outfit cache consistency failed.");
            return _classPrivateFieldGet(this, _useHistory).splice(0, 0, lastUseIndex), _classPrivateFieldGet(this, _outfitSlots)[lastUseIndex] = key, this.checkConsistent(), "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(lastUseIndex);
          } else {
            var index = _classPrivateFieldGet(this, _outfitSlots).push(key) - 1;
            return _classPrivateFieldGet(this, _useHistory).splice(0, 0, index), this.checkConsistent(), "".concat(OutfitLRUCache2.OUTFIT_PREFIX, " ").concat(index);
          }
        }
      }, {
        key: "clear",
        value: function() {
          _classPrivateFieldSet(this, _outfitSlots, []), _classPrivateFieldSet(this, _useHistory, []);
        }
      }]), OutfitLRUCache2;
    }();
    _defineProperty5(OutfitLRUCache, "OUTFIT_PREFIX", "Script Outfit");
    cachedObjectives = {}, outfitCache = new OutfitLRUCache(6), cachedStats = [0, 0, 0], cachedCanEquipItemCount = 0;
    slotStructure = [$slots(_templateObject172 || (_templateObject172 = _taggedTemplateLiteral2(["hat"]))), $slots(_templateObject182 || (_templateObject182 = _taggedTemplateLiteral2(["back"]))), $slots(_templateObject192 || (_templateObject192 = _taggedTemplateLiteral2(["shirt"]))), $slots(_templateObject202 || (_templateObject202 = _taggedTemplateLiteral2(["weapon, off-hand"]))), $slots(_templateObject212 || (_templateObject212 = _taggedTemplateLiteral2(["pants"]))), $slots(_templateObject222 || (_templateObject222 = _taggedTemplateLiteral2(["acc1, acc2, acc3"]))), $slots(_templateObject232 || (_templateObject232 = _taggedTemplateLiteral2(["familiar"])))];
    _maximizeParameters = /* @__PURE__ */ new WeakMap(), _maximizeOptions = /* @__PURE__ */ new WeakMap(), Requirement = /* @__PURE__ */ function() {
      function Requirement2(maximizeParameters, maximizeOptions) {
        _classCallCheck6(this, Requirement2), _maximizeParameters.set(this, {
          writable: !0,
          value: void 0
        }), _maximizeOptions.set(this, {
          writable: !0,
          value: void 0
        }), _classPrivateFieldSet(this, _maximizeParameters, maximizeParameters), _classPrivateFieldSet(this, _maximizeOptions, maximizeOptions);
      }
      return _createClass5(Requirement2, [{
        key: "maximizeParameters",
        get: function() {
          return _classPrivateFieldGet(this, _maximizeParameters);
        }
      }, {
        key: "maximizeOptions",
        get: function() {
          return _classPrivateFieldGet(this, _maximizeOptions);
        }
        /**
         * Merges two requirements, concanating relevant arrays. Typically used in static form.
         *
         * @param other Requirement to merge with.
         */
      }, {
        key: "merge",
        value: function(other) {
          var _optionsA$forceEquip, _other$maximizeOption, _optionsA$preventEqui, _other$maximizeOption3, _optionsA$bonusEquip$, _optionsA$bonusEquip, _optionsB$bonusEquip$, _optionsB$bonusEquip, _optionsA$onlySlot, _optionsB$onlySlot, _optionsA$preventSlot, _optionsB$preventSlot, optionsA = this.maximizeOptions, optionsB = other.maximizeOptions;
          return new Requirement2([].concat(_toConsumableArray3(this.maximizeParameters), _toConsumableArray3(other.maximizeParameters)), {
            updateOnFamiliarChange: optionsA.updateOnFamiliarChange || other.maximizeOptions.updateOnFamiliarChange,
            updateOnCanEquipChanged: optionsA.updateOnCanEquipChanged || other.maximizeOptions.updateOnCanEquipChanged,
            forceEquip: [].concat(_toConsumableArray3((_optionsA$forceEquip = optionsA.forceEquip) !== null && _optionsA$forceEquip !== void 0 ? _optionsA$forceEquip : []), _toConsumableArray3((_other$maximizeOption = other.maximizeOptions.forceEquip) !== null && _other$maximizeOption !== void 0 ? _other$maximizeOption : [])).filter(function(x) {
              var _other$maximizeOption2;
              return !((_other$maximizeOption2 = other.maximizeOptions.preventEquip) !== null && _other$maximizeOption2 !== void 0 && _other$maximizeOption2.includes(x));
            }),
            preventEquip: [].concat(_toConsumableArray3((_optionsA$preventEqui = optionsA.preventEquip) !== null && _optionsA$preventEqui !== void 0 ? _optionsA$preventEqui : []), _toConsumableArray3((_other$maximizeOption3 = other.maximizeOptions.preventEquip) !== null && _other$maximizeOption3 !== void 0 ? _other$maximizeOption3 : [])).filter(function(x) {
              var _other$maximizeOption4;
              return !((_other$maximizeOption4 = other.maximizeOptions.forceEquip) !== null && _other$maximizeOption4 !== void 0 && _other$maximizeOption4.includes(x));
            }),
            bonusEquip: new Map([].concat(_toConsumableArray3((_optionsA$bonusEquip$ = (_optionsA$bonusEquip = optionsA.bonusEquip) === null || _optionsA$bonusEquip === void 0 ? void 0 : _optionsA$bonusEquip.entries()) !== null && _optionsA$bonusEquip$ !== void 0 ? _optionsA$bonusEquip$ : []), _toConsumableArray3((_optionsB$bonusEquip$ = (_optionsB$bonusEquip = optionsB.bonusEquip) === null || _optionsB$bonusEquip === void 0 ? void 0 : _optionsB$bonusEquip.entries()) !== null && _optionsB$bonusEquip$ !== void 0 ? _optionsB$bonusEquip$ : []))),
            onlySlot: [].concat(_toConsumableArray3((_optionsA$onlySlot = optionsA.onlySlot) !== null && _optionsA$onlySlot !== void 0 ? _optionsA$onlySlot : []), _toConsumableArray3((_optionsB$onlySlot = optionsB.onlySlot) !== null && _optionsB$onlySlot !== void 0 ? _optionsB$onlySlot : [])),
            preventSlot: [].concat(_toConsumableArray3((_optionsA$preventSlot = optionsA.preventSlot) !== null && _optionsA$preventSlot !== void 0 ? _optionsA$preventSlot : []), _toConsumableArray3((_optionsB$preventSlot = optionsB.preventSlot) !== null && _optionsB$preventSlot !== void 0 ? _optionsB$preventSlot : [])),
            forceUpdate: optionsA.forceUpdate || optionsB.forceUpdate
          });
        }
        /**
         * Merges a set of requirements together, starting with an empty requirement.
         *
         * @param allRequirements Requirements to merge
         * @returns Merged requirements
         */
      }, {
        key: "maximize",
        value: (
          /**
           * Runs maximizeCached, using the maximizeParameters and maximizeOptions contained by this requirement.
           *
           * @returns Whether the maximize call succeeded.
           */
          function() {
            return maximizeCached(this.maximizeParameters, this.maximizeOptions);
          }
        )
        /**
         * Merges requirements, and then runs maximizeCached on the combined requirement.
         *
         * @param requirements Requirements to maximize on
         */
      }], [{
        key: "merge",
        value: function(allRequirements) {
          return allRequirements.reduce(function(x, y) {
            return x.merge(y);
          }, new Requirement2([], {}));
        }
      }, {
        key: "maximize",
        value: function() {
          for (var _len = arguments.length, requirements = new Array(_len), _key = 0; _key < _len; _key++)
            requirements[_key] = arguments[_key];
          Requirement2.merge(requirements).maximize();
        }
      }]), Requirement2;
    }();
  }
});

// node_modules/libram/dist/actions/ActionSource.js
function _classCallCheck7(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties6(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass6(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties6(Constructor.prototype, protoProps), staticProps && _defineProperties6(Constructor, staticProps), Constructor;
}
function _defineProperty6(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _createForOfIteratorHelper6(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray7(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _toConsumableArray4(arr) {
  return _arrayWithoutHoles4(arr) || _iterableToArray4(arr) || _unsupportedIterableToArray7(arr) || _nonIterableSpread4();
}
function _nonIterableSpread4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray7(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray7(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray7(o, minLen);
  }
}
function _iterableToArray4(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles4(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray7(arr);
}
function _arrayLikeToArray7(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function mergeConstraints() {
  for (var _len = arguments.length, allConstraints = new Array(_len), _key = 0; _key < _len; _key++)
    allConstraints[_key] = arguments[_key];
  var familiars = allConstraints.map(function(constraints) {
    return constraints.familiar;
  }).filter(function(familiar7) {
    return familiar7;
  });
  return familiars.length > 1 ? null : {
    equipmentRequirements: function() {
      return Requirement.merge(_toConsumableArray4(allConstraints.map(function(constraints) {
        var _constraints$equipmen, _constraints$equipmen2;
        return (_constraints$equipmen = (_constraints$equipmen2 = constraints.equipmentRequirements) === null || _constraints$equipmen2 === void 0 ? void 0 : _constraints$equipmen2.call(constraints)) !== null && _constraints$equipmen !== void 0 ? _constraints$equipmen : new Requirement([], {});
      })));
    },
    preparation: function() {
      var success = !0, _iterator = _createForOfIteratorHelper6(allConstraints), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var constraints = _step.value;
          success = success && (!constraints.preparation || constraints.preparation());
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return success;
    },
    familiar: familiars.find(function(familiar7) {
      return familiar7;
    }),
    cost: function() {
      return sum(allConstraints, function(constraints) {
        var _constraints$cost, _constraints$cost2;
        return (_constraints$cost = (_constraints$cost2 = constraints.cost) === null || _constraints$cost2 === void 0 ? void 0 : _constraints$cost2.call(constraints)) !== null && _constraints$cost !== void 0 ? _constraints$cost : 0;
      });
    }
  };
}
function filterAction(action, constraints) {
  var _constraints$requireF, _constraints$requireU, _constraints$noFamili, _constraints$noRequir, _constraints$noPrepar, _constraints$maximumC, _constraints$maximumC2;
  return action.available() && (constraints.allowedAction === void 0 || constraints.allowedAction(action)) && !((_constraints$requireF = constraints.requireFamiliar) !== null && _constraints$requireF !== void 0 && _constraints$requireF.call(constraints) && !action.constraints.familiar) && !((_constraints$requireU = constraints.requireUnlimited) !== null && _constraints$requireU !== void 0 && _constraints$requireU.call(constraints) && !action.isUnlimited()) && !((_constraints$noFamili = constraints.noFamiliar) !== null && _constraints$noFamili !== void 0 && _constraints$noFamili.call(constraints) && action.constraints.familiar) && !((_constraints$noRequir = constraints.noRequirements) !== null && _constraints$noRequir !== void 0 && _constraints$noRequir.call(constraints) && action.constraints.equipmentRequirements) && !((_constraints$noPrepar = constraints.noPreparation) !== null && _constraints$noPrepar !== void 0 && _constraints$noPrepar.call(constraints) && action.constraints.preparation) && action.cost() <= ((_constraints$maximumC = (_constraints$maximumC2 = constraints.maximumCost) === null || _constraints$maximumC2 === void 0 ? void 0 : _constraints$maximumC2.call(constraints)) !== null && _constraints$maximumC !== void 0 ? _constraints$maximumC : 0);
}
function findActionSource(actions) {
  var constraints = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, validActions = actions.filter(function(actions2) {
    return filterAction(actions2, constraints);
  });
  return validActions.length < 1 ? null : validActions.reduce(function(a, b) {
    return a.cost() <= b.cost() ? a : b;
  });
}
function actionSourcesAvailable(actions) {
  var constraints = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return sum(actions.filter(function(action) {
    return filterAction(action, constraints != null ? constraints : {});
  }), function(action) {
    return action.potential();
  });
}
var import_kolmafia8, ActionSource, init_ActionSource = __esm({
  "node_modules/libram/dist/actions/ActionSource.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia8 = require("kolmafia");
    init_combat();
    init_maximize();
    init_utils();
    ActionSource = /* @__PURE__ */ function() {
      function ActionSource2(source, potential, macro) {
        var constraints = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
        _classCallCheck7(this, ActionSource2), _defineProperty6(this, "source", void 0), _defineProperty6(this, "potential", void 0), _defineProperty6(this, "macro", void 0), _defineProperty6(this, "constraints", void 0), this.source = source, this.potential = potential, this.macro = macro, this.constraints = constraints;
      }
      return _createClass6(ActionSource2, [{
        key: "name",
        value: function() {
          return this.source.toString();
        }
        /**
         * @returns Whether the action is available.
         */
      }, {
        key: "available",
        value: function() {
          return this.potential() > 0;
        }
        /**
         * @returns Cost in meat per usage of the action.
         */
      }, {
        key: "cost",
        value: function() {
          return this.constraints.cost ? this.constraints.cost() : 0;
        }
        /**
         * @returns Whether the action costs 0 meat to use.
         */
      }, {
        key: "isFree",
        value: function() {
          return !this.cost || this.cost() === 0;
        }
        /**
         * @returns Whether unlimited uses of the action are available.
         */
      }, {
        key: "isUnlimited",
        value: function() {
          return this.potential() === 1 / 0;
        }
        /**
         * Create a compound action source with merged constraints.
         *
         * @param others Other actions to have available.
         * @returns Merged constraints, or null if they are inconsistent.
         */
      }, {
        key: "merge",
        value: function() {
          for (var _len2 = arguments.length, others = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)
            others[_key2] = arguments[_key2];
          var actions = [this].concat(others), constraints = mergeConstraints.apply(void 0, _toConsumableArray4(actions.map(function(action) {
            return action.constraints;
          })));
          return constraints === null ? null : new ActionSource2(_toConsumableArray4(flat(actions.map(function(action) {
            return action.source;
          }))), function() {
            return sum(actions, function(action) {
              return action.potential();
            });
          }, Macro.step.apply(Macro, _toConsumableArray4(actions.map(function(action) {
            return action.macro;
          }))), constraints);
        }
        /**
         * Perform all preparation necessary to make this action available.
         *
         * @param otherRequirements Any other equipment requirements.
         * @returns Whether preparation succeeded.
         */
      }, {
        key: "prepare",
        value: function(otherRequirements) {
          var _this$constraints$fam, _this$constraints;
          if ((_this$constraints$fam = (_this$constraints = this.constraints).familiar) !== null && _this$constraints$fam !== void 0 && _this$constraints$fam.call(_this$constraints) && !(0, import_kolmafia8.useFamiliar)(this.constraints.familiar()))
            return !1;
          if (this.constraints.equipmentRequirements) {
            var requirement = otherRequirements ? otherRequirements.merge(this.constraints.equipmentRequirements()) : this.constraints.equipmentRequirements();
            if (!requirement.maximize())
              return !1;
          }
          return this.constraints.preparation ? this.constraints.preparation() : !0;
        }
        /**
         * Perform all preparation necessary to make this action available.
         * Throws an error if preparation fails.
         *
         * @param otherRequirements Any other equipment requirements.
         */
      }, {
        key: "ensure",
        value: function(otherRequirements) {
          if (!this.prepare(otherRequirements))
            throw new Error("Failed to prepare action ".concat(this.name(), "."));
        }
      }]), ActionSource2;
    }();
    _defineProperty6(ActionSource, "defaultPriceFunction", function(item10) {
      return (0, import_kolmafia8.mallPrice)(item10) > 0 ? (0, import_kolmafia8.mallPrice)(item10) : 1 / 0;
    });
  }
});

// node_modules/libram/dist/resources/2017/AsdonMartin.js
var AsdonMartin_exports = {};
__export(AsdonMartin_exports, {
  Driving: function() {
    return Driving;
  },
  drive: function() {
    return drive;
  },
  fillTo: function() {
    return fillTo;
  },
  fillWithInventoryTo: function() {
    return fillWithInventoryTo;
  },
  have: function() {
    return have2;
  },
  insertFuel: function() {
    return insertFuel;
  },
  installed: function() {
    return installed;
  },
  isFuelItem: function() {
    return isFuelItem;
  }
});
function _slicedToArray5(arr, i) {
  return _arrayWithHoles5(arr) || _iterableToArrayLimit5(arr, i) || _unsupportedIterableToArray8(arr, i) || _nonIterableRest5();
}
function _nonIterableRest5() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray8(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray8(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray8(o, minLen);
  }
}
function _arrayLikeToArray8(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit5(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles5(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral3(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function installed() {
  return (0, import_kolmafia9.getWorkshed)() === $item(_templateObject50 || (_templateObject50 = _taggedTemplateLiteral3(["Asdon Martin keyfob"])));
}
function have2() {
  return installed() || have($item(_templateObject211 || (_templateObject211 = _taggedTemplateLiteral3(["Asdon Martin keyfob"]))));
}
function priceTooOld(item10) {
  return (0, import_kolmafia9.historicalPrice)(item10) === 0 || (0, import_kolmafia9.historicalAge)(item10) >= 7;
}
function historicalPriceOrMax(item10) {
  var historical = (0, import_kolmafia9.historicalPrice)(item10);
  return historical < 0 ? 999999999 : historical;
}
function mallPriceOrMax(item10) {
  var mall = (0, import_kolmafia9.mallPrice)(item10);
  return mall < 0 ? 999999999 : mall;
}
function price(item10, priceAge) {
  switch (priceAge) {
    case PriceAge.HISTORICAL: {
      var historical = historicalPriceOrMax(item10);
      return historical === 0 ? mallPriceOrMax(item10) : historical;
    }
    case PriceAge.RECENT:
      return priceTooOld(item10) ? mallPriceOrMax(item10) : historicalPriceOrMax(item10);
    case PriceAge.TODAY:
      return mallPriceOrMax(item10);
  }
}
function inventoryItems() {
  return import_kolmafia9.Item.all().filter(isFuelItem).filter(function(item10) {
    return have(item10) && [100, (0, import_kolmafia9.autosellPrice)(item10)].includes(price(item10, PriceAge.RECENT));
  });
}
function calculateFuelUnitCost(it) {
  var priceAge = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : PriceAge.RECENT, units = getAverageAdventures(it);
  return price(it, priceAge) / units;
}
function isFuelItem(it) {
  return !(0, import_kolmafia9.isNpcItem)(it) && it.fullness + it.inebriety > 0 && getAverageAdventures(it) > 0 && it.tradeable && it.discardable && !fuelSkiplist.includes(it);
}
function getBestFuels() {
  var allFuel = import_kolmafia9.Item.all().filter(isFuelItem);
  allFuel.filter(function(item10) {
    return (0, import_kolmafia9.historicalPrice)(item10) === 0;
  }).length > 100 && ((0, import_kolmafia9.mallPrices)("food"), (0, import_kolmafia9.mallPrices)("booze"));
  var keyHistorical = function(item10) {
    return calculateFuelUnitCost(item10, PriceAge.HISTORICAL);
  };
  allFuel.sort(function(x, y) {
    return keyHistorical(x) - keyHistorical(y);
  });
  var bestUnitCost = keyHistorical(allFuel[0]), firstBadIndex = allFuel.findIndex(function(item10) {
    return keyHistorical(item10) > 5 * bestUnitCost;
  }), potentialFuel = firstBadIndex > 0 ? allFuel.slice(0, firstBadIndex) : allFuel;
  potentialFuel.filter(function(item10) {
    return priceTooOld(item10);
  }).length > 100 && ((0, import_kolmafia9.mallPrices)("food"), (0, import_kolmafia9.mallPrices)("booze"));
  var key1 = function(item10) {
    return -getAverageAdventures(item10);
  }, key2 = function(item10) {
    return calculateFuelUnitCost(item10, PriceAge.RECENT);
  };
  potentialFuel.sort(function(x, y) {
    return key1(x) - key1(y);
  }), potentialFuel.sort(function(x, y) {
    return key2(x) - key2(y);
  });
  var candidates = potentialFuel.slice(0, 10), key3 = function(item10) {
    return calculateFuelUnitCost(item10, PriceAge.TODAY);
  };
  if (candidates.sort(function(x, y) {
    return key3(x) - key3(y);
  }), calculateFuelUnitCost(candidates[0], PriceAge.TODAY) > 100)
    throw new Error("Could not identify any fuel with efficiency better than 100 meat per fuel. This means something went wrong.");
  return candidates;
}
function insertFuel(it) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, result = (0, import_kolmafia9.visitUrl)("campground.php?action=fuelconvertor&pwd&qty=".concat(quantity, "&iid=").concat(it.id, "&go=Convert%21"));
  return result.includes("The display updates with a");
}
function fillTo(targetUnits) {
  if (!installed())
    return !1;
  for (; (0, import_kolmafia9.getFuel)() < targetUnits; ) {
    var _ref = (0, import_kolmafia9.canInteract)() ? getBestFuels() : [$item(_templateObject410 || (_templateObject410 = _taggedTemplateLiteral3(["loaf of soda bread"]))), void 0], _ref2 = _slicedToArray5(_ref, 2), bestFuel = _ref2[0], secondBest = _ref2[1], count = Math.ceil(targetUnits / getAverageAdventures(bestFuel)), ceiling = void 0;
    if (secondBest) {
      var efficiencyOfSecondBest = (0, import_kolmafia9.mallPrice)(secondBest) / getAverageAdventures(secondBest);
      ceiling = Math.ceil(efficiencyOfSecondBest * getAverageAdventures(bestFuel));
    }
    if ((0, import_kolmafia9.canInteract)() ? ceiling ? (0, import_kolmafia9.buy)(count, bestFuel, ceiling) : (0, import_kolmafia9.buy)(count, bestFuel) : (0, import_kolmafia9.retrieveItem)(count, bestFuel), !insertFuel(bestFuel, Math.min((0, import_kolmafia9.itemAmount)(bestFuel), count)))
      throw new Error("Failed to fuel Asdon Martin.");
  }
  return (0, import_kolmafia9.getFuel)() >= targetUnits;
}
function fillWithBestInventoryItem(targetUnits) {
  var options = inventoryItems().sort(function(a, b) {
    return getAverageAdventures(b) / (0, import_kolmafia9.autosellPrice)(b) - getAverageAdventures(a) / (0, import_kolmafia9.autosellPrice)(a);
  });
  if (options.length === 0)
    return !1;
  var best = options[0];
  if ((0, import_kolmafia9.autosellPrice)(best) / getAverageAdventures(best) > 100)
    return !1;
  var amountToUse = clamp(Math.ceil(targetUnits / getAverageAdventures(best)), 0, (0, import_kolmafia9.itemAmount)(best));
  return insertFuel(best, amountToUse);
}
function fillWithInventoryTo(targetUnits) {
  if (!installed())
    return !1;
  for (var continueFuelingFromInventory = !0; (0, import_kolmafia9.getFuel)() < targetUnits && continueFuelingFromInventory; )
    continueFuelingFromInventory && (continueFuelingFromInventory = fillWithBestInventoryItem(targetUnits));
  return fillTo(targetUnits);
}
function drive(style) {
  var turns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, preferInventory = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  if (!Object.values(Driving).includes(style) || !installed())
    return !1;
  if ((0, import_kolmafia9.haveEffect)(style) >= turns)
    return !0;
  var fuelNeeded = 37 * Math.ceil((turns - (0, import_kolmafia9.haveEffect)(style)) / 30);
  for ((preferInventory ? fillWithInventoryTo : fillTo)(fuelNeeded); (0, import_kolmafia9.getFuel)() >= 37 && (0, import_kolmafia9.haveEffect)(style) < turns; )
    (0, import_kolmafia9.cliExecute)("asdonmartin drive ".concat(style.name.replace("Driving ", "")));
  return (0, import_kolmafia9.haveEffect)(style) >= turns;
}
var import_kolmafia9, _templateObject50, _templateObject211, _templateObject311, _templateObject410, _templateObject53, _templateObject63, _templateObject73, _templateObject83, _templateObject93, _templateObject103, _templateObject113, _templateObject123, _templateObject133, PriceAge, fuelSkiplist, Driving, init_AsdonMartin = __esm({
  "node_modules/libram/dist/resources/2017/AsdonMartin.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia9 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    (function(PriceAge2) {
      PriceAge2[PriceAge2.HISTORICAL = 0] = "HISTORICAL", PriceAge2[PriceAge2.RECENT = 1] = "RECENT", PriceAge2[PriceAge2.TODAY = 2] = "TODAY";
    })(PriceAge || (PriceAge = {}));
    fuelSkiplist = $items(_templateObject311 || (_templateObject311 = _taggedTemplateLiteral3(['cup of "tea", thermos of "whiskey", Lucky Lindy, Bee\'s Knees, Sockdollager, Ish Kabibble, Hot Socks, Phonus Balonus, Flivver, Sloppy Jalopy, glass of "milk"'])));
    Driving = {
      Obnoxiously: $effect(_templateObject53 || (_templateObject53 = _taggedTemplateLiteral3(["Driving Obnoxiously"]))),
      Stealthily: $effect(_templateObject63 || (_templateObject63 = _taggedTemplateLiteral3(["Driving Stealthily"]))),
      Wastefully: $effect(_templateObject73 || (_templateObject73 = _taggedTemplateLiteral3(["Driving Wastefully"]))),
      Safely: $effect(_templateObject83 || (_templateObject83 = _taggedTemplateLiteral3(["Driving Safely"]))),
      Recklessly: $effect(_templateObject93 || (_templateObject93 = _taggedTemplateLiteral3(["Driving Recklessly"]))),
      Intimidatingly: $effect(_templateObject103 || (_templateObject103 = _taggedTemplateLiteral3(["Driving Intimidatingly"]))),
      Quickly: $effect(_templateObject113 || (_templateObject113 = _taggedTemplateLiteral3(["Driving Quickly"]))),
      Observantly: $effect(_templateObject123 || (_templateObject123 = _taggedTemplateLiteral3(["Driving Observantly"]))),
      Waterproofly: $effect(_templateObject133 || (_templateObject133 = _taggedTemplateLiteral3(["Driving Waterproofly"])))
    };
  }
});

// node_modules/libram/dist/actions/FreeKill.js
function _taggedTemplateLiteral4(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray5(arr) {
  return _arrayWithoutHoles5(arr) || _iterableToArray5(arr) || _unsupportedIterableToArray9(arr) || _nonIterableSpread5();
}
function _nonIterableSpread5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray9(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray9(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray9(o, minLen);
  }
}
function _iterableToArray5(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles5(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray9(arr);
}
function _arrayLikeToArray9(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function tryFindFreeKill(constraints) {
  return findActionSource(freeKillSources, constraints);
}
function ensureFreeKill(constraints) {
  var source = tryFindFreeKill(constraints);
  if (!source)
    throw new Error("Failed to ensure Free Kill source");
  return source;
}
var import_kolmafia10, _templateObject51, _templateObject213, _templateObject313, _templateObject411, _templateObject54, _templateObject64, _templateObject74, _templateObject84, _templateObject94, _templateObject104, _templateObject114, _templateObject124, _templateObject134, _templateObject143, _templateObject153, _templateObject163, _templateObject173, _templateObject183, _templateObject193, _templateObject203, _templateObject214, _templateObject223, _templateObject233, _templateObject243, _templateObject253, _templateObject263, _templateObject273, _templateObject283, _templateObject293, _templateObject303, _templateObject314, _templateObject323, _templateObject333, _templateObject343, _templateObject353, _templateObject363, _templateObject373, _templateObject383, _templateObject393, _templateObject403, _templateObject413, _templateObject423, _templateObject433, _templateObject443, _templateObject453, freeKillSources, init_FreeKill = __esm({
  "node_modules/libram/dist/actions/FreeKill.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia10 = require("kolmafia");
    init_combat();
    init_lib();
    init_maximize();
    init_property();
    init_AsdonMartin();
    init_template_string();
    init_ActionSource();
    freeKillSources = [
      // Free limited sources
      new ActionSource($skill(_templateObject51 || (_templateObject51 = _taggedTemplateLiteral4(["Gingerbread Mob Hit"]))), function() {
        return !get("_gingerbreadMobHitUsed") && have($skill(_templateObject213 || (_templateObject213 = _taggedTemplateLiteral4(["Gingerbread Mob Hit"])))) ? 1 : 0;
      }, Macro.skill($skill(_templateObject313 || (_templateObject313 = _taggedTemplateLiteral4(["Gingerbread Mob Hit"])))), {
        preparation: function() {
          return (0, import_kolmafia10.restoreMp)(30);
        }
      }),
      new ActionSource($skill(_templateObject411 || (_templateObject411 = _taggedTemplateLiteral4(["Shattering Punch"]))), function() {
        return have($skill(_templateObject54 || (_templateObject54 = _taggedTemplateLiteral4(["Shattering Punch"])))) ? 3 - get("_shatteringPunchUsed") : 0;
      }, Macro.skill($skill(_templateObject64 || (_templateObject64 = _taggedTemplateLiteral4(["Shattering Punch"])))), {
        preparation: function() {
          return (0, import_kolmafia10.restoreMp)(30);
        }
      }),
      new ActionSource($item(_templateObject74 || (_templateObject74 = _taggedTemplateLiteral4(["replica bat-oomerang"]))), function() {
        return have($item(_templateObject84 || (_templateObject84 = _taggedTemplateLiteral4(["replica bat-oomerang"])))) ? 3 - get("_usedReplicaBatoomerang") : 0;
      }, Macro.item($item(_templateObject94 || (_templateObject94 = _taggedTemplateLiteral4(["replica bat-oomerang"]))))),
      new ActionSource($item(_templateObject104 || (_templateObject104 = _taggedTemplateLiteral4(["The Jokester's gun"]))), function() {
        return !get("_firedJokestersGun") && have($item(_templateObject114 || (_templateObject114 = _taggedTemplateLiteral4(["The Jokester's gun"])))) && (0, import_kolmafia10.canEquip)($item(_templateObject124 || (_templateObject124 = _taggedTemplateLiteral4(["The Jokester's gun"])))) ? 1 : 0;
      }, Macro.skill($skill(_templateObject134 || (_templateObject134 = _taggedTemplateLiteral4(["Fire the Jokester's Gun"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject143 || (_templateObject143 = _taggedTemplateLiteral4(["The Jokester's gun"])))
          });
        }
      }),
      new ActionSource($item(_templateObject153 || (_templateObject153 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"]))), function() {
        return have($item(_templateObject163 || (_templateObject163 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"])))) ? 3 - get("_chestXRayUsed") : 0;
      }, Macro.skill($skill(_templateObject173 || (_templateObject173 = _taggedTemplateLiteral4(["Chest X-Ray"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject183 || (_templateObject183 = _taggedTemplateLiteral4(["Lil' Doctor\u2122 bag"])))
          });
        }
      }),
      new ActionSource($skill(_templateObject193 || (_templateObject193 = _taggedTemplateLiteral4(["Asdon Martin: Missile Launcher"]))), function() {
        return !get("_missileLauncherUsed") && installed() ? 1 : 0;
      }, Macro.skill($skill(_templateObject203 || (_templateObject203 = _taggedTemplateLiteral4(["Asdon Martin: Missile Launcher"])))), {
        preparation: function() {
          return fillTo(100);
        }
      }),
      // Heavy Rains
      new ActionSource($skill(_templateObject214 || (_templateObject214 = _taggedTemplateLiteral4(["Lightning Strike"]))), function() {
        return have($skill(_templateObject223 || (_templateObject223 = _taggedTemplateLiteral4(["Lightning Strike"])))) ? Math.floor((0, import_kolmafia10.myLightning)() / 20) : 0;
      }, Macro.skill($skill(_templateObject233 || (_templateObject233 = _taggedTemplateLiteral4(["Lightning Strike"]))))),
      // Expensive limited sources
      new ActionSource($item(_templateObject243 || (_templateObject243 = _taggedTemplateLiteral4(["powdered madness"]))), function() {
        return 5 - get("_powderedMadnessUses");
      }, Macro.item($item(_templateObject253 || (_templateObject253 = _taggedTemplateLiteral4(["powdered madness"])))), {
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)($item(_templateObject263 || (_templateObject263 = _taggedTemplateLiteral4(["powdered madness"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject273 || (_templateObject273 = _taggedTemplateLiteral4(["powdered madness"]))));
        }
      }),
      new ActionSource($familiar(_templateObject283 || (_templateObject283 = _taggedTemplateLiteral4(["Puck Man"]))), function() {
        return have($familiar(_templateObject293 || (_templateObject293 = _taggedTemplateLiteral4(["Puck Man"])))) ? 20 - get("_powerPillUses") : 0;
      }, Macro.item($item(_templateObject303 || (_templateObject303 = _taggedTemplateLiteral4(["power pill"])))), {
        familiar: function() {
          return $familiar(_templateObject314 || (_templateObject314 = _taggedTemplateLiteral4(["Puck Man"])));
        },
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)($item(_templateObject323 || (_templateObject323 = _taggedTemplateLiteral4(["power pill"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject333 || (_templateObject333 = _taggedTemplateLiteral4(["power pill"]))));
        }
      }),
      new ActionSource($familiar(_templateObject343 || (_templateObject343 = _taggedTemplateLiteral4(["Ms. Puck Man"]))), function() {
        return have($familiar(_templateObject353 || (_templateObject353 = _taggedTemplateLiteral4(["Ms. Puck Man"])))) ? 20 - get("_powerPillUses") : 0;
      }, Macro.item($item(_templateObject363 || (_templateObject363 = _taggedTemplateLiteral4(["power pill"])))), {
        familiar: function() {
          return $familiar(_templateObject373 || (_templateObject373 = _taggedTemplateLiteral4(["Ms. Puck Man"])));
        },
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)($item(_templateObject383 || (_templateObject383 = _taggedTemplateLiteral4(["power pill"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject393 || (_templateObject393 = _taggedTemplateLiteral4(["power pill"]))));
        }
      }),
      // Expensive unlimited sources
      new ActionSource($skill(_templateObject403 || (_templateObject403 = _taggedTemplateLiteral4(["Shocking Lick"]))), function() {
        return 1 / 0;
      }, Macro.skill($skill(_templateObject413 || (_templateObject413 = _taggedTemplateLiteral4(["Shocking Lick"])))), {
        preparation: function() {
          return get("shockingLickCharges") === 0 && (0, import_kolmafia10.retrieveItem)($item(_templateObject423 || (_templateObject423 = _taggedTemplateLiteral4(["battery (9-Volt)"])))) && (0, import_kolmafia10.use)($item(_templateObject433 || (_templateObject433 = _taggedTemplateLiteral4(["battery (9-Volt)"])))), get("shockingLickCharges") > 0;
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject443 || (_templateObject443 = _taggedTemplateLiteral4(["battery (AAA)"])))) * 4;
        }
      })
    ].concat(_toConsumableArray5($items(_templateObject453 || (_templateObject453 = _taggedTemplateLiteral4(["Daily Affirmation: Think Win-Lose, superduperheated metal"]))).map(function(item10) {
      return new ActionSource(item10, function() {
        return 1 / 0;
      }, Macro.item(item10), {
        preparation: function() {
          return (0, import_kolmafia10.retrieveItem)(item10);
        },
        cost: function() {
          return ActionSource.defaultPriceFunction(item10);
        }
      });
    })));
  }
});

// node_modules/libram/dist/resources/2009/Bandersnatch.js
var Bandersnatch_exports = {};
__export(Bandersnatch_exports, {
  canRunaway: function() {
    return canRunaway;
  },
  couldRunaway: function() {
    return couldRunaway;
  },
  getMaxRunaways: function() {
    return getMaxRunaways;
  },
  getRemainingRunaways: function() {
    return getRemainingRunaways;
  },
  getRunaways: function() {
    return getRunaways;
  },
  have: function() {
    return have3;
  },
  prepareRunaway: function() {
    return prepareRunaway;
  }
});
function _createForOfIteratorHelper7(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray10(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray10(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray10(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray10(o, minLen);
  }
}
function _arrayLikeToArray10(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral5(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have3() {
  return have(familiar);
}
function getRunaways() {
  return get("_banderRunaways");
}
function getMaxRunaways() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0, weightBuffs = considerWeightAdjustment ? (0, import_kolmafia11.weightAdjustment)() : 0;
  return Math.floor(((0, import_kolmafia11.familiarWeight)(familiar) + weightBuffs) / 5);
}
function getRemainingRunaways() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
  return Math.max(0, getMaxRunaways(considerWeightAdjustment) - getRunaways());
}
function couldRunaway() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
  return have3() && getRemainingRunaways(considerWeightAdjustment) > 0;
}
function canRunaway() {
  return isCurrentFamiliar(familiar) && couldRunaway() && have(odeEffect);
}
function prepareRunaway(songsToRemove) {
  if (!have(odeEffect)) {
    if (!have(odeSkill))
      return !1;
    if (!canRememberSong()) {
      var activeSongs = getActiveSongs(), _iterator = _createForOfIteratorHelper7(songsToRemove), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var song2 = _step.value;
          if (activeSongs.includes(song2) && uneffect(song2))
            break;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    if (!(0, import_kolmafia11.useSkill)(odeSkill))
      return !1;
  }
  return (0, import_kolmafia11.useFamiliar)(familiar);
}
var import_kolmafia11, _templateObject55, _templateObject215, _templateObject315, familiar, odeSkill, odeEffect, init_Bandersnatch = __esm({
  "node_modules/libram/dist/resources/2009/Bandersnatch.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia11 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar = $familiar(_templateObject55 || (_templateObject55 = _taggedTemplateLiteral5(["Frumious Bandersnatch"])));
    odeSkill = $skill(_templateObject215 || (_templateObject215 = _taggedTemplateLiteral5(["The Ode to Booze"]))), odeEffect = $effect(_templateObject315 || (_templateObject315 = _taggedTemplateLiteral5(["Ode to Booze"])));
  }
});

// node_modules/libram/dist/resources/2011/StompingBoots.js
var StompingBoots_exports = {};
__export(StompingBoots_exports, {
  canRunaway: function() {
    return canRunaway2;
  },
  couldRunaway: function() {
    return couldRunaway2;
  },
  getMaxRunaways: function() {
    return getMaxRunaways2;
  },
  getRemainingRunaways: function() {
    return getRemainingRunaways2;
  },
  getRunaways: function() {
    return getRunaways2;
  },
  have: function() {
    return have4;
  },
  prepareRunaway: function() {
    return prepareRunaway2;
  }
});
function _taggedTemplateLiteral6(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have4() {
  return have(familiar2);
}
function getRunaways2() {
  return get("_banderRunaways");
}
function getMaxRunaways2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0, weightBuffs = considerWeightAdjustment ? (0, import_kolmafia12.weightAdjustment)() : 0;
  return Math.floor(((0, import_kolmafia12.familiarWeight)(familiar2) + weightBuffs) / 5);
}
function getRemainingRunaways2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
  return Math.max(0, getMaxRunaways2(considerWeightAdjustment) - getRunaways2());
}
function couldRunaway2() {
  var considerWeightAdjustment = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
  return have4() && getRemainingRunaways2(considerWeightAdjustment) > 0;
}
function canRunaway2() {
  return isCurrentFamiliar(familiar2) && couldRunaway2();
}
function prepareRunaway2() {
  return (0, import_kolmafia12.useFamiliar)(familiar2);
}
var import_kolmafia12, _templateObject56, familiar2, init_StompingBoots = __esm({
  "node_modules/libram/dist/resources/2011/StompingBoots.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia12 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    familiar2 = $familiar(_templateObject56 || (_templateObject56 = _taggedTemplateLiteral6(["Pair of Stomping Boots"])));
  }
});

// node_modules/libram/dist/actions/FreeRun.js
function _toConsumableArray6(arr) {
  return _arrayWithoutHoles6(arr) || _iterableToArray6(arr) || _unsupportedIterableToArray11(arr) || _nonIterableSpread6();
}
function _nonIterableSpread6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray11(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray11(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray11(o, minLen);
  }
}
function _iterableToArray6(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles6(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray11(arr);
}
function _arrayLikeToArray11(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral7(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function tryFindFreeRun(constraints) {
  var source = findActionSource(freeRunSources, constraints);
  return source && asdonMartinSource.available() && (source = asdonMartinSource.merge(source)), source;
}
function ensureFreeRun(constraints) {
  var source = tryFindFreeRun(constraints);
  if (!source)
    throw new Error("Failed to ensure Free Run source");
  return source;
}
var import_kolmafia13, _templateObject57, _templateObject216, _templateObject316, _templateObject414, _templateObject58, _templateObject65, _templateObject75, _templateObject85, _templateObject95, _templateObject105, _templateObject115, _templateObject125, _templateObject135, _templateObject144, _templateObject154, _templateObject164, _templateObject174, _templateObject184, _templateObject194, _templateObject204, _templateObject217, _templateObject224, _templateObject234, _templateObject244, _templateObject254, _templateObject264, _templateObject274, _templateObject284, _templateObject294, _templateObject304, _templateObject317, _templateObject324, _templateObject334, _templateObject344, _templateObject354, _templateObject364, _templateObject374, _templateObject384, _templateObject394, _templateObject404, _templateObject415, _templateObject424, _templateObject434, _templateObject444, _templateObject454, _templateObject463, _templateObject473, _templateObject482, _templateObject492, _templateObject502, _templateObject512, _templateObject522, _templateObject532, _templateObject542, _templateObject552, _templateObject562, _templateObject572, _templateObject582, _templateObject59, _templateObject60, _templateObject61, _templateObject622, scrapbookChargesLastUpdated, asdonMartinSource, freeRunSources, init_FreeRun = __esm({
  "node_modules/libram/dist/actions/FreeRun.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia13 = require("kolmafia");
    init_combat();
    init_lib();
    init_maximize();
    init_property();
    init_Bandersnatch();
    init_StompingBoots();
    init_AsdonMartin();
    init_template_string();
    init_ActionSource();
    scrapbookChargesLastUpdated = get("_lastCombatStarted"), asdonMartinSource = new ActionSource($skill(_templateObject57 || (_templateObject57 = _taggedTemplateLiteral7(["Asdon Martin: Spring-Loaded Front Bumper"]))), function() {
      if (!installed())
        return 0;
      var banishes = get("banishedMonsters").split(":"), bumperIndex = banishes.map(function(string) {
        return string.toLowerCase();
      }).indexOf("spring-loaded front bumper");
      return bumperIndex === -1 || (0, import_kolmafia13.myTurncount)() - parseInt(banishes[bumperIndex + 1]) > 30 ? 1 : 0;
    }, Macro.trySkill($skill(_templateObject216 || (_templateObject216 = _taggedTemplateLiteral7(["Asdon Martin: Spring-Loaded Front Bumper"])))), {
      preparation: function() {
        return fillTo(50);
      }
    }), freeRunSources = [
      // Free limited sources
      new ActionSource($familiar(_templateObject316 || (_templateObject316 = _taggedTemplateLiteral7(["Frumious Bandersnatch"]))), function() {
        return (have($effect(_templateObject414 || (_templateObject414 = _taggedTemplateLiteral7(["Ode to Booze"])))) || getSongCount() < getSongLimit()) && couldRunaway() ? getRemainingRunaways() : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement(["Familiar Weight"], {});
        },
        preparation: function() {
          return ensureEffect($effect(_templateObject58 || (_templateObject58 = _taggedTemplateLiteral7(["Ode to Booze"])))), have($effect(_templateObject65 || (_templateObject65 = _taggedTemplateLiteral7(["Ode to Booze"]))));
        },
        familiar: function() {
          return $familiar(_templateObject75 || (_templateObject75 = _taggedTemplateLiteral7(["Frumious Bandersnatch"])));
        }
      }),
      new ActionSource($familiar(_templateObject85 || (_templateObject85 = _taggedTemplateLiteral7(["Pair of Stomping Boots"]))), function() {
        return couldRunaway2() ? getRemainingRunaways2() : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement(["Familiar Weight"], {});
        },
        familiar: function() {
          return $familiar(_templateObject95 || (_templateObject95 = _taggedTemplateLiteral7(["Pair of Stomping Boots"])));
        }
      }),
      new ActionSource($skill(_templateObject105 || (_templateObject105 = _taggedTemplateLiteral7(["Snokebomb"]))), function() {
        return have($skill(_templateObject115 || (_templateObject115 = _taggedTemplateLiteral7(["Snokebomb"])))) ? 3 - get("_snokebombUsed") : 0;
      }, Macro.skill($skill(_templateObject125 || (_templateObject125 = _taggedTemplateLiteral7(["Snokebomb"])))), {
        preparation: function() {
          return (0, import_kolmafia13.restoreMp)(50);
        }
      }),
      new ActionSource($skill(_templateObject135 || (_templateObject135 = _taggedTemplateLiteral7(["Emotionally Chipped"]))), function() {
        return have($skill(_templateObject144 || (_templateObject144 = _taggedTemplateLiteral7(["Emotionally Chipped"])))) ? 3 - get("_feelHatredUsed") : 0;
      }, Macro.skill($skill(_templateObject154 || (_templateObject154 = _taggedTemplateLiteral7(["Feel Hatred"]))))),
      new ActionSource($item(_templateObject164 || (_templateObject164 = _taggedTemplateLiteral7(["Kremlin's Greatest Briefcase"]))), function() {
        return have($item(_templateObject174 || (_templateObject174 = _taggedTemplateLiteral7(["Kremlin's Greatest Briefcase"])))) ? 3 - get("_kgbTranquilizerDartUses") : 0;
      }, Macro.skill($skill(_templateObject184 || (_templateObject184 = _taggedTemplateLiteral7(["KGB tranquilizer dart"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject194 || (_templateObject194 = _taggedTemplateLiteral7(["Kremlin's Greatest Briefcase"])))
          });
        }
      }),
      new ActionSource($item(_templateObject204 || (_templateObject204 = _taggedTemplateLiteral7(["latte lovers member's mug"]))), function() {
        return have($item(_templateObject217 || (_templateObject217 = _taggedTemplateLiteral7(["latte lovers member's mug"])))) && !get("_latteBanishUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject224 || (_templateObject224 = _taggedTemplateLiteral7(["Throw Latte on Opponent"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject234 || (_templateObject234 = _taggedTemplateLiteral7(["latte lovers member's mug"])))
          });
        }
      }),
      new ActionSource($item(_templateObject244 || (_templateObject244 = _taggedTemplateLiteral7(["Lil' Doctor\u2122 bag"]))), function() {
        return have($item(_templateObject254 || (_templateObject254 = _taggedTemplateLiteral7(["Lil' Doctor\u2122 bag"])))) ? 3 - get("_reflexHammerUsed") : 0;
      }, Macro.skill($skill(_templateObject264 || (_templateObject264 = _taggedTemplateLiteral7(["Reflex Hammer"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject274 || (_templateObject274 = _taggedTemplateLiteral7(["Lil' Doctor\u2122 bag"])))
          });
        }
      }),
      new ActionSource($item(_templateObject284 || (_templateObject284 = _taggedTemplateLiteral7(["mafia middle finger ring"]))), function() {
        return have($item(_templateObject294 || (_templateObject294 = _taggedTemplateLiteral7(["mafia middle finger ring"])))) && (0, import_kolmafia13.canEquip)($item(_templateObject304 || (_templateObject304 = _taggedTemplateLiteral7(["mafia middle finger ring"])))) && !get("_mafiaMiddleFingerRingUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject317 || (_templateObject317 = _taggedTemplateLiteral7(["Show them your ring"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject324 || (_templateObject324 = _taggedTemplateLiteral7(["mafia middle finger ring"])))
          });
        }
      }),
      new ActionSource($item(_templateObject334 || (_templateObject334 = _taggedTemplateLiteral7(["V for Vivala mask"]))), function() {
        return have($item(_templateObject344 || (_templateObject344 = _taggedTemplateLiteral7(["V for Vivala mask"])))) && !get("_vmaskBanisherUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject354 || (_templateObject354 = _taggedTemplateLiteral7(["Creepy Grin"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject364 || (_templateObject364 = _taggedTemplateLiteral7(["V for Vivala mask"])))
          });
        },
        preparation: function() {
          return (0, import_kolmafia13.restoreMp)(30);
        }
      }),
      new ActionSource($item(_templateObject374 || (_templateObject374 = _taggedTemplateLiteral7(["stinky cheese eye"]))), function() {
        return getFoldGroup($item(_templateObject384 || (_templateObject384 = _taggedTemplateLiteral7(["stinky cheese eye"])))).some(function(item10) {
          return have(item10);
        }) && !get("_stinkyCheeseBanisherUsed") ? 1 : 0;
      }, Macro.skill($skill(_templateObject394 || (_templateObject394 = _taggedTemplateLiteral7(["Give Your Opponent the Stinkeye"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject404 || (_templateObject404 = _taggedTemplateLiteral7(["stinky cheese eye"])))
          });
        },
        preparation: function() {
          return have($item(_templateObject415 || (_templateObject415 = _taggedTemplateLiteral7(["stinky cheese eye"])))) || (0, import_kolmafia13.cliExecute)("fold stinky cheese eye"), have($item(_templateObject424 || (_templateObject424 = _taggedTemplateLiteral7(["stinky cheese eye"]))));
        }
      }),
      new ActionSource($item(_templateObject434 || (_templateObject434 = _taggedTemplateLiteral7(["navel ring of navel gazing"]))), function() {
        return have($item(_templateObject444 || (_templateObject444 = _taggedTemplateLiteral7(["navel ring of navel gazing"])))) ? Math.max(0, 3 - get("_navelRunaways")) : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject454 || (_templateObject454 = _taggedTemplateLiteral7(["navel ring of navel gazing"])))
          });
        }
      }),
      new ActionSource($item(_templateObject463 || (_templateObject463 = _taggedTemplateLiteral7(["Greatest American Pants"]))), function() {
        return have($item(_templateObject473 || (_templateObject473 = _taggedTemplateLiteral7(["Greatest American Pants"])))) ? Math.max(0, 3 - get("_navelRunaways")) : 0;
      }, Macro.step("runaway"), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject482 || (_templateObject482 = _taggedTemplateLiteral7(["Greatest American Pants"])))
          });
        }
      }),
      new ActionSource($skill(_templateObject492 || (_templateObject492 = _taggedTemplateLiteral7(["Show your boring familiar pictures"]))), function() {
        return have($item(_templateObject502 || (_templateObject502 = _taggedTemplateLiteral7(["familiar scrapbook"])))) ? (scrapbookChargesLastUpdated !== get("_lastCombatStarted") && ((0, import_kolmafia13.visitUrl)("desc_item.php?whichitem=463063785"), scrapbookChargesLastUpdated = get("_lastCombatStarted")), Math.floor(get("scrapbookCharges") / 100)) : 0;
      }, Macro.skill($skill(_templateObject512 || (_templateObject512 = _taggedTemplateLiteral7(["Show your boring familiar pictures"])))), {
        equipmentRequirements: function() {
          return new Requirement([], {
            forceEquip: $items(_templateObject522 || (_templateObject522 = _taggedTemplateLiteral7(["familiar scrapbook"])))
          });
        }
      }),
      new ActionSource($item(_templateObject532 || (_templateObject532 = _taggedTemplateLiteral7(["peppermint parasol"]))), function() {
        return Math.max(0, 3 - get("_navelRunaways"));
      }, Macro.item($item(_templateObject542 || (_templateObject542 = _taggedTemplateLiteral7(["peppermint parasol"])))), {
        preparation: function() {
          return (0, import_kolmafia13.retrieveItem)($item(_templateObject552 || (_templateObject552 = _taggedTemplateLiteral7(["peppermint parasol"]))));
        },
        cost: function() {
          return Math.min(ActionSource.defaultPriceFunction($item(_templateObject562 || (_templateObject562 = _taggedTemplateLiteral7(["peppermint sprout"])))) * 5, ActionSource.defaultPriceFunction($item(_templateObject572 || (_templateObject572 = _taggedTemplateLiteral7(["peppermint parasol"]))))) / 10;
        }
        // Breaks after 10 successful runaways.
      }),
      new ActionSource($item(_templateObject582 || (_templateObject582 = _taggedTemplateLiteral7(["human musk"]))), function() {
        return Math.max(0, 3 - get("_humanMuskUses"));
      }, Macro.item($item(_templateObject59 || (_templateObject59 = _taggedTemplateLiteral7(["human musk"])))), {
        preparation: function() {
          return (0, import_kolmafia13.retrieveItem)($item(_templateObject60 || (_templateObject60 = _taggedTemplateLiteral7(["human musk"]))));
        },
        cost: function() {
          return ActionSource.defaultPriceFunction($item(_templateObject61 || (_templateObject61 = _taggedTemplateLiteral7(["human musk"]))));
        }
      })
    ].concat(_toConsumableArray6($items(_templateObject622 || (_templateObject622 = _taggedTemplateLiteral7(["Louder Than Bomb, divine champagne popper, tennis ball"]))).map(function(item10) {
      return new ActionSource(item10, function() {
        return 1 / 0;
      }, Macro.item(item10), {
        preparation: function() {
          return (0, import_kolmafia13.retrieveItem)(item10);
        },
        cost: function() {
          return ActionSource.defaultPriceFunction(item10);
        }
      });
    })));
  }
});

// node_modules/libram/dist/actions/index.js
var init_actions = __esm({
  "node_modules/libram/dist/actions/index.js": function() {
    init_kolmafia_polyfill();
    init_ActionSource();
    init_FreeKill();
    init_FreeRun();
  }
});

// node_modules/libram/dist/resources/2008/Stickers.js
var Stickers_exports = {};
__export(Stickers_exports, {
  currentStickers: function() {
    return currentStickers;
  },
  foldWeapon: function() {
    return foldWeapon;
  },
  have: function() {
    return have5;
  },
  makeSword: function() {
    return makeSword;
  },
  setStickers: function() {
    return setStickers;
  },
  stickers: function() {
    return stickers;
  },
  weapon: function() {
    return weapon;
  }
});
function _taggedTemplateLiteral8(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have5() {
  return (0, import_kolmafia14.haveSkill)($skill(_templateObject76 || (_templateObject76 = _taggedTemplateLiteral8(["Summon Stickers"]))));
}
function weapon() {
  var _find;
  return (_find = $items(_templateObject86 || (_templateObject86 = _taggedTemplateLiteral8(["scratch 'n' sniff sword, scratch 'n' sniff crossbow"]))).find(function(i) {
    return (0, import_kolmafia14.availableAmount)(i);
  })) !== null && _find !== void 0 ? _find : null;
}
function makeSword(sticker) {
  weapon() || (0, import_kolmafia14.visitUrl)("bedazzle.php?action=juststick&sticker=".concat(stickers[sticker].id, "&pwd"));
}
function foldWeapon(mode) {
  var currentWep = weapon();
  return currentWep ? weapons[mode] === currentWep ? !0 : ((0, import_kolmafia14.visitUrl)("bedazzle.php?action=fold&pwd"), weapons[mode] === currentWep) : !1;
}
function currentStickers() {
  return $slots(_templateObject116 || (_templateObject116 = _taggedTemplateLiteral8(["sticker1, sticker2, sticker3"]))).map(function(s) {
    return (0, import_kolmafia14.equippedItem)(s);
  });
}
function setStickers() {
  for (var _len = arguments.length, options = new Array(_len), _key = 0; _key < _len; _key++)
    options[_key] = arguments[_key];
  for (var _loop = function() {
    var s = _options[_i];
    s && (0, import_kolmafia14.retrieveItem)(stickers[s], options.filter(function(x) {
      return x === s;
    }).length);
  }, _i = 0, _options = options; _i < _options.length; _i++)
    _loop();
  (0, import_kolmafia14.visitUrl)("bedazzle.php");
  for (var start = currentStickers(), i = 0; i <= 2; i++) {
    var sticker = options[i];
    if (sticker) {
      var item10 = stickers[sticker];
      start[i] !== item10 && ((0, import_kolmafia14.visitUrl)("bedazzle.php?action=peel&slot=".concat(i + 1, "&pwd")), (0, import_kolmafia14.visitUrl)("bedazzle.php?action=stick&slot=".concat(i + 1, "&sticker=").concat(item10.id, "&pwd")));
    }
  }
  return currentStickers();
}
var import_kolmafia14, _templateObject66, _templateObject218, _templateObject318, _templateObject416, _templateObject510, _templateObject67, _templateObject76, _templateObject86, _templateObject96, _templateObject106, _templateObject116, stickers, weapons, init_Stickers = __esm({
  "node_modules/libram/dist/resources/2008/Stickers.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia14 = require("kolmafia");
    init_template_string();
    stickers = {
      unicorn: $item(_templateObject66 || (_templateObject66 = _taggedTemplateLiteral8(["scratch 'n' sniff unicorn sticker"]))),
      apple: $item(_templateObject218 || (_templateObject218 = _taggedTemplateLiteral8(["scratch 'n' sniff apple sticker"]))),
      UPC: $item(_templateObject318 || (_templateObject318 = _taggedTemplateLiteral8(["scratch 'n' sniff UPC sticker"]))),
      wrestler: $item(_templateObject416 || (_templateObject416 = _taggedTemplateLiteral8(["scratch 'n' sniff wrestler sticker"]))),
      dragon: $item(_templateObject510 || (_templateObject510 = _taggedTemplateLiteral8(["scratch 'n' sniff dragon sticker"]))),
      rockband: $item(_templateObject67 || (_templateObject67 = _taggedTemplateLiteral8(["scratch 'n' sniff rock band sticker"])))
    };
    weapons = {
      sword: $item(_templateObject96 || (_templateObject96 = _taggedTemplateLiteral8(["scratch 'n' sniff sword"]))),
      crossbow: $item(_templateObject106 || (_templateObject106 = _taggedTemplateLiteral8(["scratch 'n' sniff crossbow"])))
    };
  }
});

// node_modules/libram/dist/resources/2009/SpookyPutty.js
var SpookyPutty_exports = {};
__export(SpookyPutty_exports, {
  getSpookyPuttySheetCopiesMade: function() {
    return getSpookyPuttySheetCopiesMade;
  },
  getSpookyPuttySheetMonster: function() {
    return getSpookyPuttySheetMonster;
  },
  have: function() {
    return have6;
  },
  prepareSpookyPuttySheet: function() {
    return prepareSpookyPuttySheet;
  },
  useSpookyPuttySheet: function() {
    return useSpookyPuttySheet;
  }
});
function _taggedTemplateLiteral9(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have6() {
  return getFoldGroup(sheet).some(function(item10) {
    return have(item10);
  });
}
function getSpookyPuttySheetCopiesMade() {
  return Math.max(0, get("spookyPuttyCopiesMade"));
}
function prepareSpookyPuttySheet() {
  return have6() ? have(sheet) ? !0 : (0, import_kolmafia15.cliExecute)("fold Spooky putty sheet") : !1;
}
function getSpookyPuttySheetMonster() {
  return get("spookyPuttyMonster");
}
function useSpookyPuttySheet() {
  return (0, import_kolmafia15.use)(sheet);
}
var import_kolmafia15, _templateObject68, sheet, init_SpookyPutty = __esm({
  "node_modules/libram/dist/resources/2009/SpookyPutty.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia15 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    sheet = $item(_templateObject68 || (_templateObject68 = _taggedTemplateLiteral9(["Spooky Putty sheet"])));
  }
});

// node_modules/libram/dist/resources/2010/CrownOfThrones.js
var CrownOfThrones_exports = {};
__export(CrownOfThrones_exports, {
  createModifierValueFunction: function() {
    return createModifierValueFunction;
  },
  createRiderMode: function() {
    return createRiderMode;
  },
  getModifier: function() {
    return getModifier;
  },
  hasRiderMode: function() {
    return hasRiderMode;
  },
  pickRider: function() {
    return pickRider;
  },
  ridingFamiliars: function() {
    return ridingFamiliars;
  },
  valueRider: function() {
    return valueRider;
  }
});
function ownKeys4(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread4(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys4(Object(source), !0).forEach(function(key) {
      _defineProperty7(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys4(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty7(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _toConsumableArray7(arr) {
  return _arrayWithoutHoles7(arr) || _iterableToArray7(arr) || _unsupportedIterableToArray12(arr) || _nonIterableSpread7();
}
function _nonIterableSpread7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray12(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray12(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray12(o, minLen);
  }
}
function _iterableToArray7(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles7(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray12(arr);
}
function _arrayLikeToArray12(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral10(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function valueRider(rider, modifierValueFunction, dropsValueFunction2) {
  var ignoreLimitedDrops = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1, dropValue = !rider.dropPredicate || rider.dropPredicate() && !ignoreLimitedDrops ? rider.probability * (typeof rider.drops == "number" ? rider.drops : dropsValueFunction2(rider.drops)) : 0, modifierValue = modifierValueFunction(rider.familiar);
  return dropValue + modifierValue;
}
function createRiderMode(name, details) {
  return riderModes.set(name, _objectSpread4(_objectSpread4({}, DEFAULTS), details));
}
function hasRiderMode(name) {
  return riderModes.has(name);
}
function pickRider(mode) {
  var modeData = riderModes.get(mode);
  if (!modeData)
    return null;
  var modifierValueFunction = modeData.modifierValueFunction, dropsValueFunction2 = modeData.dropsValueFunction, ignoreLimitedDrops = modeData.ignoreLimitedDrops, excludeCurrentFamiliar = modeData.excludeCurrentFamiliar;
  riderLists.has(mode) || riderLists.set(mode, FULL_RIDING_LIST.filter(function(_ref2) {
    var familiar7 = _ref2.familiar;
    return have(familiar7);
  }).sort(function(a, b) {
    return valueRider(b, modifierValueFunction, dropsValueFunction2, ignoreLimitedDrops) - valueRider(a, modifierValueFunction, dropsValueFunction2, ignoreLimitedDrops);
  }));
  var list = riderLists.get(mode);
  if (list) {
    var riderToReturn = list.find(function(_ref3) {
      var _dropPredicate, dropPredicate = _ref3.dropPredicate, familiar7 = _ref3.familiar;
      return ((_dropPredicate = dropPredicate == null ? void 0 : dropPredicate()) !== null && _dropPredicate !== void 0 ? _dropPredicate : !0) && (!excludeCurrentFamiliar || (0, import_kolmafia16.myFamiliar)() !== familiar7);
    });
    return riderToReturn != null ? riderToReturn : null;
  }
  return null;
}
function getModifier(modifier, familiar7) {
  return (0, import_kolmafia16.numericModifier)("Throne:".concat(familiar7), modifier);
}
function createModifierValueFunction(modifiers, functions) {
  return function(familiar7) {
    return sum(modifiers, function(modifier) {
      return functions[modifier](getModifier(modifier, familiar7));
    });
  };
}
var import_kolmafia16, _templateObject69, _templateObject219, _templateObject319, _templateObject417, _templateObject511, _templateObject610, _templateObject77, _templateObject87, _templateObject97, _templateObject107, _templateObject117, _templateObject126, _templateObject136, _templateObject145, _templateObject155, _templateObject165, _templateObject175, _templateObject185, _templateObject195, _templateObject205, _templateObject2110, _templateObject225, _templateObject235, _templateObject245, _templateObject255, _templateObject265, _templateObject275, _templateObject285, _templateObject295, _templateObject305, _templateObject3110, _templateObject325, _templateObject335, _templateObject345, _templateObject355, _templateObject365, _templateObject375, _templateObject385, _templateObject395, _templateObject405, _templateObject418, _templateObject425, _templateObject435, _templateObject445, _templateObject455, _templateObject464, _templateObject474, _templateObject483, _templateObject493, _templateObject503, _templateObject513, _templateObject523, _templateObject533, _templateObject543, _templateObject553, _templateObject563, _templateObject573, _templateObject583, _templateObject592, _templateObject602, _templateObject612, _templateObject623, _templateObject632, _templateObject642, _templateObject652, _templateObject662, _templateObject672, _templateObject682, _templateObject692, _templateObject70, _templateObject71, _templateObject722, _templateObject732, _templateObject742, _templateObject752, _templateObject762, _templateObject772, _templateObject78, _templateObject79, _templateObject80, _templateObject81, _templateObject822, _templateObject832, _templateObject842, _templateObject852, _templateObject862, _templateObject872, _templateObject88, _templateObject89, _templateObject90, _templateObject91, _templateObject922, _templateObject932, _templateObject942, _templateObject952, _templateObject962, _templateObject972, _templateObject98, _templateObject99, ridingFamiliars, FULL_RIDING_LIST, riderModes, DEFAULTS, riderLists, init_CrownOfThrones = __esm({
  "node_modules/libram/dist/resources/2010/CrownOfThrones.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia16 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    ridingFamiliars = [{
      familiar: $familiar(_templateObject69 || (_templateObject69 = _taggedTemplateLiteral10(["Puck Man"]))),
      drops: $items(_templateObject219 || (_templateObject219 = _taggedTemplateLiteral10(["yellow pixel"]))),
      probability: 0.25,
      dropPredicate: function() {
        return get("_yellowPixelDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject319 || (_templateObject319 = _taggedTemplateLiteral10(["Ms. Puck Man"]))),
      drops: $items(_templateObject417 || (_templateObject417 = _taggedTemplateLiteral10(["yellow pixel"]))),
      probability: 0.25,
      dropPredicate: function() {
        return get("_yellowPixelDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject511 || (_templateObject511 = _taggedTemplateLiteral10(["Grimstone Golem"]))),
      drops: $items(_templateObject610 || (_templateObject610 = _taggedTemplateLiteral10(["grimstone mask"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_grimstoneMaskDropsCrown") < 1;
      }
    }, {
      familiar: $familiar(_templateObject77 || (_templateObject77 = _taggedTemplateLiteral10(["Knob Goblin Organ Grinder"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject87 || (_templateObject87 = _taggedTemplateLiteral10(["Happy Medium"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject97 || (_templateObject97 = _taggedTemplateLiteral10(["Garbage Fire"]))),
      drops: $items(_templateObject107 || (_templateObject107 = _taggedTemplateLiteral10(["burning newspaper"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_garbageFireDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject117 || (_templateObject117 = _taggedTemplateLiteral10(["Machine Elf"]))),
      drops: $items(_templateObject126 || (_templateObject126 = _taggedTemplateLiteral10(["abstraction: sensation, abstraction: thought, abstraction: action, abstraction: category, abstraction: perception, abstraction: purpose"]))),
      probability: 0.2,
      dropPredicate: function() {
        return get("_abstractionDropsCrown") < 25;
      }
    }, {
      familiar: $familiar(_templateObject136 || (_templateObject136 = _taggedTemplateLiteral10(["Trick-or-Treating Tot"]))),
      drops: $items(_templateObject145 || (_templateObject145 = _taggedTemplateLiteral10(["hoarded candy wad"]))),
      probability: 0.5,
      dropPredicate: function() {
        return get("_hoardedCandyDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject155 || (_templateObject155 = _taggedTemplateLiteral10(["Warbear Drone"]))),
      drops: $items(_templateObject165 || (_templateObject165 = _taggedTemplateLiteral10(["warbear whosit"]))),
      probability: 1 / 4.5
    }, {
      familiar: $familiar(_templateObject175 || (_templateObject175 = _taggedTemplateLiteral10(["Li'l Xenomorph"]))),
      drops: $items(_templateObject185 || (_templateObject185 = _taggedTemplateLiteral10(["lunar isotope"]))),
      probability: 0.05
    }, {
      familiar: $familiar(_templateObject195 || (_templateObject195 = _taggedTemplateLiteral10(["Pottery Barn Owl"]))),
      drops: $items(_templateObject205 || (_templateObject205 = _taggedTemplateLiteral10(["volcanic ash"]))),
      probability: 0.1
    }, {
      familiar: $familiar(_templateObject2110 || (_templateObject2110 = _taggedTemplateLiteral10(["Grim Brother"]))),
      drops: $items(_templateObject225 || (_templateObject225 = _taggedTemplateLiteral10(["grim fairy tale"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_grimFairyTaleDropsCrown") < 2;
      }
    }, {
      familiar: $familiar(_templateObject235 || (_templateObject235 = _taggedTemplateLiteral10(["Optimistic Candle"]))),
      drops: $items(_templateObject245 || (_templateObject245 = _taggedTemplateLiteral10(["glob of melted wax"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_optimisticCandleDropsCrown") < 3;
      }
    }, {
      familiar: $familiar(_templateObject255 || (_templateObject255 = _taggedTemplateLiteral10(["Adventurous Spelunker"]))),
      drops: $items(_templateObject265 || (_templateObject265 = _taggedTemplateLiteral10(["teflon ore, velcro ore, vinyl ore, cardboard ore, styrofoam ore, bubblewrap ore"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_oreDropsCrown") < 6;
      }
    }, {
      familiar: $familiar(_templateObject275 || (_templateObject275 = _taggedTemplateLiteral10(["Twitching Space Critter"]))),
      drops: $items(_templateObject285 || (_templateObject285 = _taggedTemplateLiteral10(["space beast fur"]))),
      probability: 1,
      dropPredicate: function() {
        return get("_spaceFurDropsCrown") < 1;
      }
    }, {
      familiar: $familiar(_templateObject295 || (_templateObject295 = _taggedTemplateLiteral10(["Party Mouse"]))),
      drops: 50,
      probability: 0.05
    }, {
      familiar: $familiar(_templateObject305 || (_templateObject305 = _taggedTemplateLiteral10(["Yule Hound"]))),
      drops: $items(_templateObject3110 || (_templateObject3110 = _taggedTemplateLiteral10(["candy cane"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject325 || (_templateObject325 = _taggedTemplateLiteral10(["Gluttonous Green Ghost"]))),
      drops: $items(_templateObject335 || (_templateObject335 = _taggedTemplateLiteral10(["bean burrito, enchanted bean burrito, jumping bean burrito"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject345 || (_templateObject345 = _taggedTemplateLiteral10(["Reassembled Blackbird"]))),
      drops: $items(_templateObject355 || (_templateObject355 = _taggedTemplateLiteral10(["blackberry"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject365 || (_templateObject365 = _taggedTemplateLiteral10(["Reconstituted Crow"]))),
      drops: $items(_templateObject375 || (_templateObject375 = _taggedTemplateLiteral10(["blackberry"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject385 || (_templateObject385 = _taggedTemplateLiteral10(["Hunchbacked Minion"]))),
      drops: /* @__PURE__ */ new Map([[$item(_templateObject395 || (_templateObject395 = _taggedTemplateLiteral10(["disembodied brain"]))), 0.02], [$item(_templateObject405 || (_templateObject405 = _taggedTemplateLiteral10(["skeleton bone"]))), 0.98]]),
      probability: 1
    }, {
      familiar: $familiar(_templateObject418 || (_templateObject418 = _taggedTemplateLiteral10(["Reanimated Reanimator"]))),
      drops: $items(_templateObject425 || (_templateObject425 = _taggedTemplateLiteral10(["hot wing, broken skull"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject435 || (_templateObject435 = _taggedTemplateLiteral10(["Attention-Deficit Demon"]))),
      drops: $items(_templateObject445 || (_templateObject445 = _taggedTemplateLiteral10(["chorizo brownies, white chocolate and tomato pizza, carob chunk noodles"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject455 || (_templateObject455 = _taggedTemplateLiteral10(["Piano Cat"]))),
      drops: $items(_templateObject464 || (_templateObject464 = _taggedTemplateLiteral10(["beertini, papaya slung, salty slug, tomato daiquiri"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject474 || (_templateObject474 = _taggedTemplateLiteral10(["Golden Monkey"]))),
      drops: $items(_templateObject483 || (_templateObject483 = _taggedTemplateLiteral10(["gold nuggets"]))),
      probability: 0.5
    }, {
      familiar: $familiar(_templateObject493 || (_templateObject493 = _taggedTemplateLiteral10(["Robot Reindeer"]))),
      drops: $items(_templateObject503 || (_templateObject503 = _taggedTemplateLiteral10(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject513 || (_templateObject513 = _taggedTemplateLiteral10(["Stocking Mimic"]))),
      drops: $items(_templateObject523 || (_templateObject523 = _taggedTemplateLiteral10(["Angry Farmer candy, Cold Hots candy, Rock Pops, Tasty Fun Good rice candy, Wint-O-Fresh mint"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject533 || (_templateObject533 = _taggedTemplateLiteral10(["BRICKO chick"]))),
      drops: $items(_templateObject543 || (_templateObject543 = _taggedTemplateLiteral10(["BRICKO brick"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject553 || (_templateObject553 = _taggedTemplateLiteral10(["Cotton Candy Carnie"]))),
      drops: $items(_templateObject563 || (_templateObject563 = _taggedTemplateLiteral10(["cotton candy pinch"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject573 || (_templateObject573 = _taggedTemplateLiteral10(["Untamed Turtle"]))),
      drops: $items(_templateObject583 || (_templateObject583 = _taggedTemplateLiteral10(["snailmail bits, turtlemail bits, turtle wax"]))),
      probability: 0.35
    }, {
      familiar: $familiar(_templateObject592 || (_templateObject592 = _taggedTemplateLiteral10(["Astral Badger"]))),
      drops: $items(_templateObject602 || (_templateObject602 = _taggedTemplateLiteral10(["spooky mushroom, Knob mushroom, Knoll mushroom"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject612 || (_templateObject612 = _taggedTemplateLiteral10(["Green Pixie"]))),
      drops: $items(_templateObject623 || (_templateObject623 = _taggedTemplateLiteral10(["bottle of tequila"]))),
      probability: 0.2
    }, {
      familiar: $familiar(_templateObject632 || (_templateObject632 = _taggedTemplateLiteral10(["Angry Goat"]))),
      drops: $items(_templateObject642 || (_templateObject642 = _taggedTemplateLiteral10(["goat cheese pizza"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject652 || (_templateObject652 = _taggedTemplateLiteral10(["Adorable Seal Larva"]))),
      drops: $items(_templateObject662 || (_templateObject662 = _taggedTemplateLiteral10(["stench nuggets, spooky nuggets, hot nuggets, cold nuggets, sleaze nuggets"]))),
      probability: 0.35
    }, {
      familiar: $familiar(_templateObject672 || (_templateObject672 = _taggedTemplateLiteral10(["Ancient Yuletide Troll"]))),
      drops: $items(_templateObject682 || (_templateObject682 = _taggedTemplateLiteral10(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject692 || (_templateObject692 = _taggedTemplateLiteral10(["Sweet Nutcracker"]))),
      drops: $items(_templateObject70 || (_templateObject70 = _taggedTemplateLiteral10(["candy cane, eggnog, fruitcake, gingerbread bugbear"]))),
      probability: 0.3
    }, {
      familiar: $familiar(_templateObject71 || (_templateObject71 = _taggedTemplateLiteral10(["Casagnova Gnome"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject722 || (_templateObject722 = _taggedTemplateLiteral10(["Coffee Pixie"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject732 || (_templateObject732 = _taggedTemplateLiteral10(["Dancing Frog"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject742 || (_templateObject742 = _taggedTemplateLiteral10(["Grouper Groupie"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject752 || (_templateObject752 = _taggedTemplateLiteral10(["Hand Turkey"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject762 || (_templateObject762 = _taggedTemplateLiteral10(["Hippo Ballerina"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject772 || (_templateObject772 = _taggedTemplateLiteral10(["Jitterbug"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject78 || (_templateObject78 = _taggedTemplateLiteral10(["Leprechaun"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject79 || (_templateObject79 = _taggedTemplateLiteral10(["Obtuse Angel"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject80 || (_templateObject80 = _taggedTemplateLiteral10(["Psychedelic Bear"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject81 || (_templateObject81 = _taggedTemplateLiteral10(["Robortender"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject822 || (_templateObject822 = _taggedTemplateLiteral10(["Ghost of Crimbo Commerce"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject832 || (_templateObject832 = _taggedTemplateLiteral10(["Hobo Monkey"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject842 || (_templateObject842 = _taggedTemplateLiteral10(["Rockin' Robin"]))),
      drops: 60,
      probability: 1
    }, {
      familiar: $familiar(_templateObject852 || (_templateObject852 = _taggedTemplateLiteral10(["Feral Kobold"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject862 || (_templateObject862 = _taggedTemplateLiteral10(["Oily Woim"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject872 || (_templateObject872 = _taggedTemplateLiteral10(["Cat Burglar"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject88 || (_templateObject88 = _taggedTemplateLiteral10(["Misshapen Animal Skeleton"]))),
      drops: 30,
      probability: 1
    }, {
      familiar: $familiar(_templateObject89 || (_templateObject89 = _taggedTemplateLiteral10(["Gelatinous Cubeling"]))),
      drops: 0,
      probability: 0
    }, {
      familiar: $familiar(_templateObject90 || (_templateObject90 = _taggedTemplateLiteral10(["Frozen Gravy Fairy"]))),
      drops: $items(_templateObject91 || (_templateObject91 = _taggedTemplateLiteral10(["cold nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject922 || (_templateObject922 = _taggedTemplateLiteral10(["Stinky Gravy Fairy"]))),
      drops: $items(_templateObject932 || (_templateObject932 = _taggedTemplateLiteral10(["stench nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject942 || (_templateObject942 = _taggedTemplateLiteral10(["Sleazy Gravy Fairy"]))),
      drops: $items(_templateObject952 || (_templateObject952 = _taggedTemplateLiteral10(["sleaze nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject962 || (_templateObject962 = _taggedTemplateLiteral10(["Spooky Gravy Fairy"]))),
      drops: $items(_templateObject972 || (_templateObject972 = _taggedTemplateLiteral10(["spooky nuggets"]))),
      probability: 1
    }, {
      familiar: $familiar(_templateObject98 || (_templateObject98 = _taggedTemplateLiteral10(["Flaming Gravy Fairy"]))),
      // drops a hot nugget every combat, 5 of which can be used to make a hot wad
      drops: $items(_templateObject99 || (_templateObject99 = _taggedTemplateLiteral10(["hot nuggets"]))),
      probability: 1
    }], FULL_RIDING_LIST = [].concat(ridingFamiliars, _toConsumableArray7(import_kolmafia16.Familiar.all().filter(function(f) {
      return !ridingFamiliars.some(function(_ref) {
        var familiar7 = _ref.familiar;
        return familiar7 === f;
      });
    }).map(function(familiar7) {
      return {
        familiar: familiar7,
        drops: 0,
        probability: 1
      };
    })));
    riderModes = /* @__PURE__ */ new Map(), DEFAULTS = {
      modifierValueFunction: function() {
        return 0;
      },
      dropsValueFunction: function() {
        return 0;
      },
      ignoreLimitedDrops: !1,
      excludeCurrentFamiliar: !0
    };
    riderLists = /* @__PURE__ */ new Map();
  }
});

// node_modules/libram/dist/resources/2010/LookingGlass.js
var LookingGlass_exports = {};
__export(LookingGlass_exports, {
  findTeaPartyHatLength: function() {
    return findTeaPartyHatLength;
  },
  findTeaPartyHats: function() {
    return findTeaPartyHats;
  },
  haveTeaPartyHat: function() {
    return haveTeaPartyHat;
  },
  tryTeaPartyBuff: function() {
    return tryTeaPartyBuff;
  }
});
function _taggedTemplateLiteral11(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function validTeaPartyHat(item10, characters) {
  return (0, import_kolmafia17.toSlot)(item10) !== $slot(_templateObject320 || (_templateObject320 = _taggedTemplateLiteral11(["hat"]))) || !(0, import_kolmafia17.canEquip)(item10) ? !1 : characters <= 5 ? item10.nameLength <= 5 : characters >= 30 ? item10.nameLength >= 30 : characters === item10.nameLength;
}
function findTeaPartyHatLength(effect2) {
  var effectId = effect2.id;
  if (effectId < firstTeaPartyEffect.id || effectId > lastTeaPartyEffect.id)
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  return Math.floor(effectId - firstTeaPartyEffect.id + 5);
}
function findTeaPartyHats(effect2) {
  var characters = findTeaPartyHatLength(effect2);
  if (!characters)
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  return import_kolmafia17.Item.all().filter(function(item10) {
    return validTeaPartyHat(item10, characters);
  });
}
function haveTeaPartyHat(effect2) {
  var characters = findTeaPartyHatLength(effect2);
  if (!characters)
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  return import_kolmafia17.Item.all().find(function(item10) {
    return validTeaPartyHat(item10, characters) && have(item10);
  }) !== void 0;
}
function tryTeaPartyBuff(effect2) {
  if (get("_madTeaParty"))
    return !1;
  var characters = findTeaPartyHatLength(effect2);
  if (!characters)
    throw new Error("Invalid Mad Tea Party effect ".concat(effect2));
  if (!haveTeaPartyHat(effect2) || (ensureEffect($effect(_templateObject419 || (_templateObject419 = _taggedTemplateLiteral11(["Down the Rabbit Hole"])))), !have($effect(_templateObject514 || (_templateObject514 = _taggedTemplateLiteral11(["Down the Rabbit Hole"]))))))
    return !1;
  var turns = (0, import_kolmafia17.haveEffect)(effect2);
  return (0, import_kolmafia17.cliExecute)("hatter ".concat(characters)), have(effect2) && (0, import_kolmafia17.haveEffect)(effect2) > turns;
}
var import_kolmafia17, _templateObject100, _templateObject220, _templateObject320, _templateObject419, _templateObject514, firstTeaPartyEffect, lastTeaPartyEffect, init_LookingGlass = __esm({
  "node_modules/libram/dist/resources/2010/LookingGlass.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia17 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    firstTeaPartyEffect = $effect(_templateObject100 || (_templateObject100 = _taggedTemplateLiteral11(["Assaulted with Pepper"]))), lastTeaPartyEffect = $effect(_templateObject220 || (_templateObject220 = _taggedTemplateLiteral11(["Oleaginous Soles"])));
  }
});

// node_modules/libram/dist/Copier.js
function _classCallCheck8(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperty8(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
var Copier, init_Copier = __esm({
  "node_modules/libram/dist/Copier.js": function() {
    init_kolmafia_polyfill();
    Copier = function Copier2(couldCopy, prepare, canCopy, copiedMonster, fightCopy) {
      _classCallCheck8(this, Copier2), _defineProperty8(this, "couldCopy", void 0), _defineProperty8(this, "prepare", void 0), _defineProperty8(this, "canCopy", void 0), _defineProperty8(this, "copiedMonster", void 0), _defineProperty8(this, "fightCopy", null), this.couldCopy = couldCopy, this.prepare = prepare, this.canCopy = canCopy, this.copiedMonster = copiedMonster, fightCopy && (this.fightCopy = fightCopy);
    };
  }
});

// node_modules/libram/dist/resources/2011/ObtuseAngel.js
var ObtuseAngel_exports = {};
__export(ObtuseAngel_exports, {
  BadlyRomanticArrow: function() {
    return BadlyRomanticArrow;
  },
  canUseBadlyRomanticArrow: function() {
    return canUseBadlyRomanticArrow;
  },
  couldUseBadlyRomanticArrow: function() {
    return couldUseBadlyRomanticArrow;
  },
  getBadlyRomanticArrowMonster: function() {
    return getBadlyRomanticArrowMonster;
  },
  getBadlyRomanticArrowUses: function() {
    return getBadlyRomanticArrowUses;
  },
  have: function() {
    return have7;
  },
  haveBadlyRomanticArrowUsesRemaining: function() {
    return haveBadlyRomanticArrowUsesRemaining;
  },
  prepareBadlyRomanticArrow: function() {
    return prepareBadlyRomanticArrow;
  }
});
function _taggedTemplateLiteral12(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have7() {
  return have(familiar3);
}
function getBadlyRomanticArrowUses() {
  return Math.max(0, get("_badlyRomanticArrows"));
}
function haveBadlyRomanticArrowUsesRemaining() {
  return getBadlyRomanticArrowUses() === 0;
}
function couldUseBadlyRomanticArrow() {
  return have7() && haveBadlyRomanticArrowUsesRemaining();
}
function prepareBadlyRomanticArrow() {
  return (0, import_kolmafia18.useFamiliar)(familiar3);
}
function canUseBadlyRomanticArrow() {
  return isCurrentFamiliar(familiar3) && haveBadlyRomanticArrowUsesRemaining();
}
function getBadlyRomanticArrowMonster() {
  return get("romanticTarget");
}
var import_kolmafia18, _templateObject101, familiar3, BadlyRomanticArrow, init_ObtuseAngel = __esm({
  "node_modules/libram/dist/resources/2011/ObtuseAngel.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia18 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    familiar3 = $familiar(_templateObject101 || (_templateObject101 = _taggedTemplateLiteral12(["Obtuse Angel"])));
    BadlyRomanticArrow = new Copier(function() {
      return couldUseBadlyRomanticArrow();
    }, function() {
      return prepareBadlyRomanticArrow();
    }, function() {
      return canUseBadlyRomanticArrow();
    }, function() {
      return getBadlyRomanticArrowMonster();
    });
  }
});

// node_modules/libram/dist/resources/2012/RainDoh.js
var RainDoh_exports = {};
__export(RainDoh_exports, {
  getRainDohBlackBoxCopiesMade: function() {
    return getRainDohBlackBoxCopiesMade;
  },
  getRainDohBlackBoxMonster: function() {
    return getRainDohBlackBoxMonster;
  },
  have: function() {
    return have8;
  },
  useRainDohBlackBox: function() {
    return useRainDohBlackBox;
  }
});
function _taggedTemplateLiteral13(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have8() {
  return getFoldGroup(box).some(function(item10) {
    return have(item10);
  });
}
function getRainDohBlackBoxCopiesMade() {
  return Math.max(0, get("_raindohCopiesMade"));
}
function getRainDohBlackBoxMonster() {
  return get("rainDohMonster");
}
function useRainDohBlackBox() {
  return (0, import_kolmafia19.use)(box);
}
var import_kolmafia19, _templateObject108, box, init_RainDoh = __esm({
  "node_modules/libram/dist/resources/2012/RainDoh.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia19 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    box = $item(_templateObject108 || (_templateObject108 = _taggedTemplateLiteral13(["Rain-Doh black box"])));
  }
});

// node_modules/libram/dist/resources/2012/ReagnimatedGnome.js
var ReagnimatedGnome_exports = {};
__export(ReagnimatedGnome_exports, {
  bodyParts: function() {
    return bodyParts;
  },
  choosePart: function() {
    return choosePart;
  },
  chosenParts: function() {
    return chosenParts;
  },
  expectedAdvsPerCombat: function() {
    return expectedAdvsPerCombat;
  },
  have: function() {
    return have9;
  }
});
function _taggedTemplateLiteral14(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have9() {
  return have($familiar(_templateObject109 || (_templateObject109 = _taggedTemplateLiteral14(["Reagnimated Gnome"]))));
}
function chosenParts() {
  return Object.values(bodyParts).filter(function(part) {
    return have(part);
  });
}
function choosePart(part) {
  return have9() ? have(bodyParts[part]) ? !0 : ((0, import_kolmafia20.visitUrl)("arena.php"), (0, import_kolmafia20.runChoice)(4), chosenParts().includes(bodyParts[part])) : !1;
}
function expectedAdvsPerCombat(weight) {
  return Math.min(0.01 + weight / 1e3 * 0.99, 1);
}
var import_kolmafia20, _templateObject109, _templateObject221, _templateObject321, _templateObject420, _templateObject515, _templateObject611, bodyParts, init_ReagnimatedGnome = __esm({
  "node_modules/libram/dist/resources/2012/ReagnimatedGnome.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia20 = require("kolmafia");
    init_lib();
    init_template_string();
    bodyParts = {
      ears: $item(_templateObject221 || (_templateObject221 = _taggedTemplateLiteral14(["gnomish swimmer's ears"]))),
      lung: $item(_templateObject321 || (_templateObject321 = _taggedTemplateLiteral14(["gnomish coal miner's lung"]))),
      elbow: $item(_templateObject420 || (_templateObject420 = _taggedTemplateLiteral14(["gnomish tennis elbow"]))),
      kgnee: $item(_templateObject515 || (_templateObject515 = _taggedTemplateLiteral14(["gnomish housemaid's kgnee"]))),
      foot: $item(_templateObject611 || (_templateObject611 = _taggedTemplateLiteral14(["gnomish athlete's foot"])))
    };
  }
});

// node_modules/libram/dist/modifierTypes.js
var booleanModifiers, classModifiers, numericModifiers, effectModifiers, monsterModifiers, skillModifiers, statModifiers, stringModifiers, init_modifierTypes = __esm({
  "node_modules/libram/dist/modifierTypes.js": function() {
    init_kolmafia_polyfill();
    booleanModifiers = ["Softcore Only", "Single Equip", "Never Fumble", "Weakens Monster", "Free Pull", "Variable", "Nonstackable Watch", "Cold Immunity", "Hot Immunity", "Sleaze Immunity", "Spooky Immunity", "Stench Immunity", "Cold Vulnerability", "Hot Vulnerability", "Sleaze Vulnerability", "Spooky Vulnerability", "Stench Vulnerability", "Moxie Controls MP", "Moxie May Control MP", "Four Songs", "Adventure Underwater", "Underwater Familiar", "Generic", "Unarmed", "No Pull", "Lasts Until Rollover", "Attacks Can't Miss", "Pirate", "Breakable", "Drops Items", "Drops Meat"], classModifiers = ["Class"], numericModifiers = ["Familiar Weight", "Monster Level", "Combat Rate", "Initiative", "Experience", "Item Drop", "Meat Drop", "Damage Absorption", "Damage Reduction", "Cold Resistance", "Hot Resistance", "Sleaze Resistance", "Spooky Resistance", "Stench Resistance", "Mana Cost", "Moxie", "Moxie Percent", "Muscle", "Muscle Percent", "Mysticality", "Mysticality Percent", "Maximum HP", "Maximum HP Percent", "Maximum MP", "Maximum MP Percent", "Weapon Damage", "Ranged Damage", "Spell Damage", "Spell Damage Percent", "Cold Damage", "Hot Damage", "Sleaze Damage", "Spooky Damage", "Stench Damage", "Cold Spell Damage", "Hot Spell Damage", "Sleaze Spell Damage", "Spooky Spell Damage", "Stench Spell Damage", "Underwater Combat Rate", "Fumble", "HP Regen Min", "HP Regen Max", "MP Regen Min", "MP Regen Max", "Adventures", "Familiar Weight Percent", "Weapon Damage Percent", "Ranged Damage Percent", "Stackable Mana Cost", "Hobo Power", "Base Resting HP", "Resting HP Percent", "Bonus Resting HP", "Base Resting MP", "Resting MP Percent", "Bonus Resting MP", "Critical Hit Percent", "PvP Fights", "Volleyball", "Sombrero", "Leprechaun", "Fairy", "Meat Drop Penalty", "Hidden Familiar Weight", "Item Drop Penalty", "Initiative Penalty", "Food Drop", "Booze Drop", "Hat Drop", "Weapon Drop", "Offhand Drop", "Shirt Drop", "Pants Drop", "Accessory Drop", "Volleyball Effectiveness", "Sombrero Effectiveness", "Leprechaun Effectiveness", "Fairy Effectiveness", "Familiar Weight Cap", "Slime Resistance", "Slime Hates It", "Spell Critical Percent", "Muscle Experience", "Mysticality Experience", "Moxie Experience", "Effect Duration", "Candy Drop", "DB Combat Damage", "Sombrero Bonus", "Familiar Experience", "Sporadic Meat Drop", "Sporadic Item Drop", "Meat Bonus", "Pickpocket Chance", "Combat Mana Cost", "Muscle Experience Percent", "Mysticality Experience Percent", "Moxie Experience Percent", "Minstrel Level", "Muscle Limit", "Mysticality Limit", "Moxie Limit", "Song Duration", "Prismatic Damage", "Smithsness", "Supercold Resistance", "Reduce Enemy Defense", "Pool Skill", "Surgeonosity", "Familiar Damage", "Gear Drop", "Maximum Hooch", "Water Level", "Crimbot Outfit Power", "Familiar Tuning Muscle", "Familiar Tuning Mysticality", "Familiar Tuning Moxie", "Random Monster Modifiers", "Luck", "Othello Skill", "Disco Style", "Rollover Effect Duration", "Sixgun Damage", "Fishing Skill", "Additional Song", "Sprinkle Drop", "Absorb Adventures", "Absorb Stats", "Rubee Drop", "Kruegerand Drop", "WarBear Armor Penetration", "Clowniness", "Maximum PP", "Plumber Power", "Drippy Damage", "Drippy Resistance", "Energy", "Scrap", "Familiar Action Bonus", "Water"], effectModifiers = ["Effect", "Rollover Effect"], monsterModifiers = ["Avatar"], skillModifiers = ["Skill"], statModifiers = ["Plumber Stat"], stringModifiers = ["Intrinsic Effect", "Equalize", "Wiki Name", "Modifiers", "Outfit", "Stat Tuning", "Equips On", "Familiar Effect", "Jiggle", "Equalize Muscle", "Equalize Mysticality", "Equalize Moxie", "Floor Buffed Muscle", "Floor Buffed Mysticality", "Floor Buffed Moxie"];
  }
});

// node_modules/libram/dist/modifier.js
function ownKeys5(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread5(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys5(Object(source), !0).forEach(function(key) {
      _defineProperty9(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys5(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty9(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function get2(name, subject) {
  if (arrayContains(name, booleanModifiers))
    return subject === void 0 ? (0, import_kolmafia21.booleanModifier)(name) : (0, import_kolmafia21.booleanModifier)(subject, name);
  if (arrayContains(name, classModifiers))
    return (0, import_kolmafia21.classModifier)(subject, name);
  if (arrayContains(name, effectModifiers))
    return (0, import_kolmafia21.effectModifier)(subject, name);
  if (arrayContains(name, monsterModifiers))
    return (0, import_kolmafia21.monsterModifier)(subject, name);
  if (arrayContains(name, numericModifiers))
    return subject === void 0 ? (0, import_kolmafia21.numericModifier)(name) : (0, import_kolmafia21.numericModifier)(subject, name);
  if (arrayContains(name, skillModifiers))
    return (0, import_kolmafia21.skillModifier)(subject, name);
  if (arrayContains(name, stringModifiers))
    return subject === void 0 ? (0, import_kolmafia21.stringModifier)(name) : (0, import_kolmafia21.stringModifier)(subject, name);
  if (arrayContains(name, statModifiers))
    return (0, import_kolmafia21.statModifier)(subject, name);
}
function pairwiseMerge(modifiers1, modifiers2) {
  var returnValue = _objectSpread5(_objectSpread5({}, modifiers1), modifiers2);
  for (var modifier in modifiers1)
    if (Array.from(Object.values(modifiers2)).includes(modifier)) {
      if (arrayContains(modifier, numericModifiers)) {
        var _modifiers1$modifier, _modifiers2$modifier;
        returnValue[modifier] = ((_modifiers1$modifier = modifiers1[modifier]) !== null && _modifiers1$modifier !== void 0 ? _modifiers1$modifier : 0) + ((_modifiers2$modifier = modifiers2[modifier]) !== null && _modifiers2$modifier !== void 0 ? _modifiers2$modifier : 0);
      }
      if (arrayContains(modifier, booleanModifiers)) {
        var _modifiers1$modifier2, _modifiers2$modifier2;
        returnValue[modifier] = ((_modifiers1$modifier2 = modifiers1[modifier]) !== null && _modifiers1$modifier2 !== void 0 ? _modifiers1$modifier2 : !1) || ((_modifiers2$modifier2 = modifiers2[modifier]) !== null && _modifiers2$modifier2 !== void 0 ? _modifiers2$modifier2 : !1);
      }
    }
  return returnValue;
}
function mergeModifiers() {
  for (var _len = arguments.length, modifierss = new Array(_len), _key = 0; _key < _len; _key++)
    modifierss[_key] = arguments[_key];
  return modifierss.reduce(function(a, b) {
    return pairwiseMerge(a, b);
  }, {});
}
function getTotalModifier(modifier) {
  for (var _len2 = arguments.length, subjects = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
    subjects[_key2 - 1] = arguments[_key2];
  return sum(subjects, function(subject) {
    return get2(modifier, subject);
  });
}
var import_kolmafia21, init_modifier = __esm({
  "node_modules/libram/dist/modifier.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia21 = require("kolmafia");
    init_modifierTypes();
    init_utils();
  }
});

// node_modules/libram/dist/resources/2013/Florist.js
var Florist_exports = {};
__export(Florist_exports, {
  AloeGuvnor: function() {
    return AloeGuvnor;
  },
  ArcticMoss: function() {
    return ArcticMoss;
  },
  Artichoker: function() {
    return Artichoker;
  },
  BamBoo: function() {
    return BamBoo;
  },
  BlusteryPuffball: function() {
    return BlusteryPuffball;
  },
  CannedSpinach: function() {
    return CannedSpinach;
  },
  CeleryStalker: function() {
    return CeleryStalker;
  },
  Chillterelle: function() {
    return Chillterelle;
  },
  Crookweed: function() {
    return Crookweed;
  },
  DeadlyCinnamon: function() {
    return DeadlyCinnamon;
  },
  DisLichen: function() {
    return DisLichen;
  },
  Duckweed: function() {
    return Duckweed;
  },
  ElectricEelgrass: function() {
    return ElectricEelgrass;
  },
  FoulToadstool: function() {
    return FoulToadstool;
  },
  HornOfPlenty: function() {
    return HornOfPlenty;
  },
  Impatiens: function() {
    return Impatiens;
  },
  Kelptomaniac: function() {
    return Kelptomaniac;
  },
  LettuceSpray: function() {
    return LettuceSpray;
  },
  LooseMorels: function() {
    return LooseMorels;
  },
  MaxHeadshroom: function() {
    return MaxHeadshroom;
  },
  OrcaOrchid: function() {
    return OrcaOrchid;
  },
  PitcherPlant: function() {
    return PitcherPlant;
  },
  Portlybella: function() {
    return Portlybella;
  },
  RabidDogwood: function() {
    return RabidDogwood;
  },
  RadishRadish: function() {
    return RadishRadish;
  },
  RedFern: function() {
    return RedFern;
  },
  Rutabeggar: function() {
    return Rutabeggar;
  },
  Sargassum: function() {
    return Sargassum;
  },
  SeltzerWatercress: function() {
    return SeltzerWatercress;
  },
  ShuffleTruffle: function() {
    return ShuffleTruffle;
  },
  SkunkCabbage: function() {
    return SkunkCabbage;
  },
  SmokeRa: function() {
    return SmokeRa;
  },
  Snori: function() {
    return Snori;
  },
  Spankton: function() {
    return Spankton;
  },
  SpiderPlant: function() {
    return SpiderPlant;
  },
  StealingMagnolia: function() {
    return StealingMagnolia;
  },
  SubSeaRose: function() {
    return SubSeaRose;
  },
  UpSeaDaisy: function() {
    return UpSeaDaisy;
  },
  WarLily: function() {
    return WarLily;
  },
  WizardsWig: function() {
    return WizardsWig;
  },
  all: function() {
    return all;
  },
  flowersAvailableFor: function() {
    return flowersAvailableFor;
  },
  flowersIn: function() {
    return flowersIn;
  },
  have: function() {
    return have10;
  },
  isFull: function() {
    return isFull;
  }
});
function _toConsumableArray8(arr) {
  return _arrayWithoutHoles8(arr) || _iterableToArray8(arr) || _unsupportedIterableToArray13(arr) || _nonIterableSpread8();
}
function _nonIterableSpread8() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray13(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray13(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray13(o, minLen);
  }
}
function _iterableToArray8(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles8(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray13(arr);
}
function _arrayLikeToArray13(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck9(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties7(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass7(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties7(Constructor.prototype, protoProps), staticProps && _defineProperties7(Constructor, staticProps), Constructor;
}
function _defineProperty10(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function have10() {
  return (0, import_kolmafia22.floristAvailable)();
}
function toFlower(name) {
  return all.find(function(flower) {
    return name === flower.name;
  });
}
function flowersIn(location) {
  var returnValue = [];
  return Flower.plantNamesInZone(location).map(toFlower).forEach(function(flower) {
    flower && returnValue.push(flower);
  }), returnValue;
}
function flowersAvailableFor() {
  var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
  return all.filter(function(flower) {
    return flower.available(location);
  });
}
function isFull() {
  var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
  return flowersIn(location).length === 3;
}
var import_kolmafia22, Flower, RabidDogwood, Rutabeggar, RadishRadish, Artichoker, SmokeRa, SkunkCabbage, DeadlyCinnamon, CeleryStalker, LettuceSpray, SeltzerWatercress, WarLily, StealingMagnolia, CannedSpinach, Impatiens, SpiderPlant, RedFern, BamBoo, ArcticMoss, AloeGuvnor, PitcherPlant, BlusteryPuffball, HornOfPlenty, WizardsWig, ShuffleTruffle, DisLichen, LooseMorels, FoulToadstool, Chillterelle, Portlybella, MaxHeadshroom, Spankton, Kelptomaniac, Crookweed, ElectricEelgrass, Duckweed, OrcaOrchid, Sargassum, SubSeaRose, Snori, UpSeaDaisy, all, init_Florist = __esm({
  "node_modules/libram/dist/resources/2013/Florist.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia22 = require("kolmafia");
    init_modifier();
    init_property();
    Flower = /* @__PURE__ */ function() {
      function Flower2(name, id, environment, modifier) {
        var territorial = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1;
        _classCallCheck9(this, Flower2), _defineProperty10(this, "name", void 0), _defineProperty10(this, "id", void 0), _defineProperty10(this, "environment", void 0), _defineProperty10(this, "modifier", void 0), _defineProperty10(this, "territorial", void 0), this.name = name, this.id = id, this.environment = environment, this.modifier = modifier, this.territorial = territorial;
      }
      return _createClass7(Flower2, [{
        key: "isPlantedHere",
        value: function() {
          var _Flower$plantNamesInZ, location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)(), plantedHere = (_Flower$plantNamesInZ = Flower2.plantNamesInZone(location)) === null || _Flower$plantNamesInZ === void 0 ? void 0 : _Flower$plantNamesInZ.includes(this.name);
          return plantedHere !== void 0 && plantedHere;
        }
      }, {
        key: "available",
        value: function() {
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
          return this.environment === location.environment && !get("_floristPlantsUsed").includes(this.name) && !this.isPlantedHere(location);
        }
      }, {
        key: "dig",
        value: function() {
          if (!this.isPlantedHere())
            return !1;
          var flowers = Flower2.plantNamesInZone();
          if (!flowers[2])
            return !1;
          var plantNumber = flowers.indexOf(this.name);
          return Flower2.visit(), (0, import_kolmafia22.runChoice)(2, "plnti=".concat(plantNumber)), !this.isPlantedHere();
        }
      }, {
        key: "plant",
        value: function() {
          return this.isPlantedHere() ? !0 : isFull() ? !1 : (Flower2.visit(), (0, import_kolmafia22.runChoice)(1, "plant=".concat(this.id)), this.isPlantedHere());
        }
      }], [{
        key: "visit",
        value: function() {
          (0, import_kolmafia22.visitUrl)("place.php?whichplace=forestvillage&action=fv_friar");
        }
      }, {
        key: "plantNamesInZone",
        value: function() {
          var _getFloristPlants$loc, location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
          return (_getFloristPlants$loc = (0, import_kolmafia22.getFloristPlants)()[location.toString()]) !== null && _getFloristPlants$loc !== void 0 ? _getFloristPlants$loc : [];
        }
      }, {
        key: "plantsInZone",
        value: function() {
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)();
          return this.plantNamesInZone(location).map(function(flowerName) {
            return toFlower(flowerName);
          }).filter(function(flower) {
            return flower !== void 0;
          });
        }
      }, {
        key: "modifiersInZone",
        value: function() {
          var location = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia22.myLocation)(), plants = this.plantsInZone(location);
          if (!plants)
            return {};
          var modifiers = plants.map(function(plant) {
            return plant.modifier;
          }).map(function(modifier) {
            return typeof modifier == "string" ? {} : modifier;
          });
          return mergeModifiers.apply(void 0, _toConsumableArray8(modifiers));
        }
      }]), Flower2;
    }();
    RabidDogwood = new Flower("Rabid Dogwood", 1, "outdoor", {
      "Monster Level": 30
    }, !0), Rutabeggar = new Flower("Rutabeggar", 2, "outdoor", {
      "Item Drop": 25
    }, !0), RadishRadish = new Flower("Rad-ish Radish", 3, "outdoor", {
      "Moxie Experience": 5
    }, !0), Artichoker = new Flower("Artichoker", 4, "outdoor", "Delevels Enemy"), SmokeRa = new Flower("Smoke-ra", 5, "outdoor", "Blocks Attacks"), SkunkCabbage = new Flower("Skunk Cabbage", 6, "outdoor", {
      "Stench Damage": 12.5
    }), DeadlyCinnamon = new Flower("Deadly Cinnamon", 7, "outdoor", {
      "Hot Damage": 12.5
    }), CeleryStalker = new Flower("Celery Stalker", 8, "outdoor", {
      "Spooky Damage": 12.5
    }), LettuceSpray = new Flower("Lettus Spray", 9, "outdoor", {
      "HP Regen Min": 10,
      "HP Regen Max": 29
    }), SeltzerWatercress = new Flower("Seltzer Watercress", 10, "outdoor", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    }), WarLily = new Flower("War Lily", 11, "indoor", {
      "Monster Level": 30
    }, !0), StealingMagnolia = new Flower("Stealing Magnolia", 12, "indoor", {
      "Item Drop": 25
    }, !0), CannedSpinach = new Flower("Canned Spinach", 13, "indoor", {
      "Muscle Experience": 5
    }, !0), Impatiens = new Flower("Impatiens", 14, "indoor", {
      Initiative: 25
    }), SpiderPlant = new Flower("Spider Plant", 15, "indoor", "Poison"), RedFern = new Flower("Red Fern", 16, "indoor", "Delevels Enemy"), BamBoo = new Flower("BamBOO!", 17, "indoor", {
      "Spooky Damage": 12.5
    }), ArcticMoss = new Flower("Arctic Moss", 18, "indoor", {
      "Cold Damage": 12.5
    }), AloeGuvnor = new Flower("Aloe Guv'nor", 19, "indoor", {
      "HP Regen Min": 10,
      "HP Regen Max": 30
    }), PitcherPlant = new Flower("Pitcher Plant", 20, "indoor", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    }), BlusteryPuffball = new Flower("Blustery Puffball", 21, "underground", {
      "Monster Level": 30
    }, !0), HornOfPlenty = new Flower("Horn of Plenty", 22, "underground", {
      "Item Drop": 25
    }, !0), WizardsWig = new Flower("Wizard's Wig", 23, "underground", {
      "Mysticality Experience": 5
    }, !0), ShuffleTruffle = new Flower("Shuffle Truffle", 24, "underground", {
      Initiative: 25
    }), DisLichen = new Flower("Dis Lichen", 25, "underground", "Delevels Enemy"), LooseMorels = new Flower("Loose Morels", 26, "underground", {
      "Sleaze Damage": 12.5
    }), FoulToadstool = new Flower("Foul Toadstool", 27, "underground", {
      "Stench Damage": 12.5
    }), Chillterelle = new Flower("Chillterelle", 28, "underground", {
      "Cold Damage": 12.5
    }), Portlybella = new Flower("Portlybella", 29, "underground", {
      "HP Regen Min": 10,
      "HP Regen Max": 30
    }), MaxHeadshroom = new Flower("Max Headshroom", 30, "underground", {
      "MP Regen Min": 5,
      "MP Regen Max": 15
    }), Spankton = new Flower("Spankton", 31, "underwater", "Delevels Enemy", !0), Kelptomaniac = new Flower("Kelptomaniac", 32, "underwater", {
      "Item Drop": 40
    }, !0), Crookweed = new Flower("Crookweed", 33, "underwater", {
      "Meat Drop": 60
    }, !0), ElectricEelgrass = new Flower("Electric Eelgrass", 34, "underwater", "Blocks Attacks"), Duckweed = new Flower("Duckweed", 35, "underwater", "Blocks Attacks"), OrcaOrchid = new Flower("Orca Orchid", 36, "underwater", {
      "Weapon Damage": 12.5
    }), Sargassum = new Flower("Sargassum", 37, "underwater", {
      "Stench Damage": 12.5
    }), SubSeaRose = new Flower("Sub-Sea Rose", 38, "underwater", {
      "Cold Damage": 12.5
    }), Snori = new Flower("Snori", 39, "underwater", {
      "HP Regen Min": 20,
      "HP Regen Max": 30,
      "MP Regen Min": 10,
      "MP Regen Max": 20
    }), UpSeaDaisy = new Flower("Up Sea Daisy", 40, "underwater", {
      Experience: 30
    }), all = Object.freeze([RabidDogwood, Rutabeggar, RadishRadish, Artichoker, SmokeRa, SkunkCabbage, DeadlyCinnamon, CeleryStalker, LettuceSpray, SeltzerWatercress, WarLily, StealingMagnolia, CannedSpinach, Impatiens, SpiderPlant, RedFern, BamBoo, ArcticMoss, AloeGuvnor, PitcherPlant, BlusteryPuffball, HornOfPlenty, WizardsWig, ShuffleTruffle, DisLichen, LooseMorels, FoulToadstool, Chillterelle, Portlybella, MaxHeadshroom, Spankton, Kelptomaniac, Crookweed, ElectricEelgrass, Duckweed, OrcaOrchid, Sargassum, SubSeaRose, Snori, UpSeaDaisy]);
  }
});

// node_modules/libram/dist/resources/2013/JungMan.js
var JungMan_exports = {};
__export(JungMan_exports, {
  JAR_ITEMS: function() {
    return JAR_ITEMS;
  },
  Jar: function() {
    return Jar;
  },
  canJickJar: function() {
    return canJickJar;
  },
  have: function() {
    return have11;
  },
  makeJar: function() {
    return makeJar;
  }
});
function _slicedToArray6(arr, i) {
  return _arrayWithHoles6(arr) || _iterableToArrayLimit6(arr, i) || _unsupportedIterableToArray14(arr, i) || _nonIterableRest6();
}
function _nonIterableRest6() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray14(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray14(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray14(o, minLen);
  }
}
function _arrayLikeToArray14(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit6(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles6(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _defineProperty11(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _taggedTemplateLiteral15(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have11() {
  return (0, import_kolmafia23.haveFamiliar)(familiar4);
}
function getJungUrl(jar) {
  var _PLACES$jar = _slicedToArray6(PLACES[jar], 2), page = _PLACES$jar[0], answer = _PLACES$jar[1], question = page === "showplayer" ? "who" : "which".concat(page), params = [["action", "jung"], ["whichperson", jar]];
  return answer && params.push([question, answer]), "".concat(page, ".php?").concat(params.map(function(pair) {
    return pair.join("=");
  }).join("&"));
}
function canJickJar() {
  return get("_jickJarAvailable") === "unknown" && (0, import_kolmafia23.visitUrl)("showplayer.php?who=1"), get("_jickJarAvailable") === "true" && !get("_psychoJarFilled");
}
function makeJar(jar) {
  if (jar === Jar.JICK && !canJickJar())
    return !1;
  var result = (0, import_kolmafia23.visitUrl)(getJungUrl(jar));
  return result.includes("You open up the jar and look into the patient's eyes.");
}
var import_kolmafia23, _templateObject110, _PLACES, _templateObject226, _templateObject326, _templateObject421, _templateObject516, _templateObject613, _templateObject710, _templateObject810, _JAR_ITEMS, familiar4, Jar, PLACES, JAR_ITEMS, init_JungMan = __esm({
  "node_modules/libram/dist/resources/2013/JungMan.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia23 = require("kolmafia");
    init_property();
    init_template_string();
    familiar4 = $familiar(_templateObject110 || (_templateObject110 = _taggedTemplateLiteral15(["Angry Jung Man"])));
    (function(Jar2) {
      Jar2.SUSPICIOUS_GUY = "susguy", Jar2.GOURD_CAPTAIN = "gourdcaptain", Jar2.CRACKPOT_MYSTIC = "mystic", Jar2.OLD_MAN = "oldman", Jar2.PRETENTIOUS_ARTIST = "artist", Jar2.MEATSMITH = "meatsmith", Jar2.JICK = "jick";
    })(Jar || (Jar = {}));
    PLACES = (_PLACES = {}, _defineProperty11(_PLACES, Jar.PRETENTIOUS_ARTIST, ["place", "town_wrong"]), _defineProperty11(_PLACES, Jar.GOURD_CAPTAIN, ["place", "town_right"]), _defineProperty11(_PLACES, Jar.CRACKPOT_MYSTIC, ["shop", "mystic"]), _defineProperty11(_PLACES, Jar.OLD_MAN, ["place", "sea_oldman"]), _defineProperty11(_PLACES, Jar.MEATSMITH, ["shop", "meatsmith"]), _defineProperty11(_PLACES, Jar.JICK, ["showplayer", "1"]), _defineProperty11(_PLACES, Jar.SUSPICIOUS_GUY, ["tavern"]), _PLACES), JAR_ITEMS = (_JAR_ITEMS = {}, _defineProperty11(_JAR_ITEMS, Jar.SUSPICIOUS_GUY, $item(_templateObject226 || (_templateObject226 = _taggedTemplateLiteral15(["jar of psychoses (The Suspicious-Looking Guy)"])))), _defineProperty11(_JAR_ITEMS, Jar.GOURD_CAPTAIN, $item(_templateObject326 || (_templateObject326 = _taggedTemplateLiteral15(["jar of psychoses (The Captain of the Gourd)"])))), _defineProperty11(_JAR_ITEMS, Jar.CRACKPOT_MYSTIC, $item(_templateObject421 || (_templateObject421 = _taggedTemplateLiteral15(["jar of psychoses (The Crackpot Mystic)"])))), _defineProperty11(_JAR_ITEMS, Jar.OLD_MAN, $item(_templateObject516 || (_templateObject516 = _taggedTemplateLiteral15(["jar of psychoses (The Old Man)"])))), _defineProperty11(_JAR_ITEMS, Jar.PRETENTIOUS_ARTIST, $item(_templateObject613 || (_templateObject613 = _taggedTemplateLiteral15(["jar of psychoses (The Pretentious Artist)"])))), _defineProperty11(_JAR_ITEMS, Jar.MEATSMITH, $item(_templateObject710 || (_templateObject710 = _taggedTemplateLiteral15(["jar of psychoses (The Meatsmith)"])))), _defineProperty11(_JAR_ITEMS, Jar.JICK, $item(_templateObject810 || (_templateObject810 = _taggedTemplateLiteral15(["jar of psychoses (Jick)"])))), _JAR_ITEMS);
  }
});

// node_modules/libram/dist/resources/2014/CrimboShrub.js
var CrimboShrub_exports = {};
__export(CrimboShrub_exports, {
  decorate: function() {
    return decorate;
  },
  have: function() {
    return have12;
  }
});
function _taggedTemplateLiteral16(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have12() {
  return have($familiar(_templateObject111 || (_templateObject111 = _taggedTemplateLiteral16(["Crimbo Shrub"]))));
}
function isDecoratedWith(topper, lights, garland, gifts) {
  var decorations = [get("shrubTopper"), get("shrubLights"), get("shrubGarland"), get("shrubGifts")].map(function(x) {
    return Prefs[x];
  });
  return [topper, lights, garland, gifts].every(function(x, i) {
    return x === decorations[i];
  });
}
function decorate(topper, lights, garland, gifts) {
  return have12() ? (get("_shrubDecorated") || (have($item(_templateObject227 || (_templateObject227 = _taggedTemplateLiteral16(["box of old Crimbo decorations"])))) || (0, import_kolmafia24.useFamiliar)($familiar(_templateObject327 || (_templateObject327 = _taggedTemplateLiteral16(["Crimbo Shrub"])))), directlyUse($item(_templateObject426 || (_templateObject426 = _taggedTemplateLiteral16(["box of old Crimbo decorations"])))), (0, import_kolmafia24.visitUrl)("choice.php?whichchoice=999&pwd=&option=1&topper=".concat(Toppers[topper], "&lights=").concat(Lights[lights], "&garland=").concat(Garland[garland], "&gift=").concat(Gifts[gifts]))), isDecoratedWith(topper, lights, garland, gifts)) : !1;
}
var import_kolmafia24, _templateObject111, _templateObject227, _templateObject327, _templateObject426, Toppers, Lights, Garland, Gifts, Prefs, init_CrimboShrub = __esm({
  "node_modules/libram/dist/resources/2014/CrimboShrub.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia24 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    Toppers = {
      Muscle: 1,
      Mysticality: 2,
      Moxie: 3
    }, Lights = {
      "Prismatic Damage": 1,
      "Hot Damage": 2,
      "Cold Damage": 3,
      "Stench Damage": 4,
      "Spooky Damage": 5,
      "Sleaze Damage": 6
    }, Garland = {
      "HP Regen": 1,
      "PvP Fights": 2,
      Blocking: 3
    }, Gifts = {
      "Yellow Ray": 1,
      "Red Ray": 2,
      Gifts: 3
    }, Prefs = {
      Muscle: "Muscle",
      Mysticality: "Mysticality",
      Moxie: "Moxie",
      Prismatic: "Prismatic Damage",
      Hot: "Hot Damage",
      Cold: "Cold Damage",
      Stench: "Stench Damage",
      Spooky: "Spooky Damage",
      Sleaze: "Sleaze Damage",
      HP: "HP Regen",
      PvP: "PvP Fights",
      blocking: "Blocking",
      yellow: "Yellow Ray",
      meat: "Red Ray",
      gifts: "Gifts"
    };
  }
});

// node_modules/libram/dist/resources/2014/DNALab.js
var DNALab_exports = {};
__export(DNALab_exports, {
  getEffect: function() {
    return getEffect2;
  },
  getTonic: function() {
    return getTonic;
  },
  have: function() {
    return have13;
  },
  hybridize: function() {
    return hybridize;
  },
  installed: function() {
    return installed2;
  },
  isHybridized: function() {
    return isHybridized;
  },
  makeTonic: function() {
    return makeTonic;
  },
  phylumFor: function() {
    return phylumFor;
  },
  tonicsLeft: function() {
    return tonicsLeft;
  }
});
function _slicedToArray7(arr, i) {
  return _arrayWithHoles7(arr) || _iterableToArrayLimit7(arr, i) || _unsupportedIterableToArray15(arr, i) || _nonIterableRest7();
}
function _nonIterableRest7() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray15(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray15(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray15(o, minLen);
  }
}
function _arrayLikeToArray15(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit7(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles7(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral17(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have13() {
  return have(lab) || (0, import_kolmafia25.getWorkshed)() === lab;
}
function installed2() {
  return (0, import_kolmafia25.getWorkshed)() === lab;
}
function isHybridized(tonic) {
  if (!tonic)
    return installed2() && get("_dnaHybrid");
  var tonicEffect = tonic instanceof import_kolmafia25.Effect ? tonic : tonic instanceof import_kolmafia25.Phylum ? getEffect2(tonic) : get2("Effect", tonic);
  return tonicEffects.includes(tonicEffect) && (0, import_kolmafia25.haveEffect)(tonicEffect) === 2147483647;
}
function getTonic(phylum) {
  var _phylaTonics$get;
  return (_phylaTonics$get = phylaTonics.get(phylum)) !== null && _phylaTonics$get !== void 0 ? _phylaTonics$get : $item.none;
}
function getEffect2(phylum) {
  var _phylaEffects$get;
  return (_phylaEffects$get = phylaEffects.get(phylum)) !== null && _phylaEffects$get !== void 0 ? _phylaEffects$get : $effect.none;
}
function phylumFor(dnatype) {
  if (dnatype instanceof import_kolmafia25.Effect) {
    var phylumPair = Array.from(phylaEffects.entries()).find(function(_ref) {
      var _ref2 = _slicedToArray7(_ref, 2), effect2 = _ref2[1];
      return effect2 === dnatype;
    });
    return phylumPair ? phylumPair[0] : null;
  } else {
    var _phylumPair = Array.from(phylaTonics.entries()).find(function(_ref3) {
      var _ref4 = _slicedToArray7(_ref3, 2), tonic = _ref4[1];
      return tonic === dnatype;
    });
    return _phylumPair ? _phylumPair[0] : null;
  }
}
function hybridize() {
  if (get("_dnaHybrid") || !installed2())
    return !1;
  var currentSyringe = get("dnaSyringe");
  if (!currentSyringe)
    return !1;
  var tonicPotion = getTonic(currentSyringe), expectedEffect = get2("Effect", tonicPotion);
  return (0, import_kolmafia25.cliExecute)("camp dnainject"), isHybridized(expectedEffect);
}
function makeTonic() {
  var amount = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
  if (!installed2())
    return !1;
  var currentSyringe = get("dnaSyringe");
  if (!currentSyringe)
    return !1;
  var tonicPotion = getTonic(currentSyringe), amountToMake = clamp(amount, 0, tonicsLeft()), startingAmount = (0, import_kolmafia25.itemAmount)(tonicPotion);
  return (0, import_kolmafia25.cliExecute)("camp dnapotion ".concat(amountToMake)), (0, import_kolmafia25.itemAmount)(tonicPotion) - startingAmount === amountToMake;
}
function tonicsLeft() {
  return clamp(3 - get("_dnaPotionsMade"), 0, 3);
}
var import_kolmafia25, _templateObject118, _templateObject228, _templateObject328, _templateObject427, _templateObject517, _templateObject614, _templateObject711, _templateObject811, _templateObject910, _templateObject1010, _templateObject119, _templateObject127, _templateObject137, _templateObject146, _templateObject156, _templateObject166, _templateObject176, _templateObject186, _templateObject196, _templateObject206, _templateObject2111, _templateObject229, _templateObject236, _templateObject246, _templateObject256, _templateObject266, _templateObject276, _templateObject286, _templateObject296, _templateObject306, _templateObject3111, _templateObject329, _templateObject336, _templateObject346, _templateObject356, _templateObject366, _templateObject376, _templateObject386, _templateObject396, _templateObject406, _templateObject4110, _templateObject428, _templateObject436, _templateObject446, _templateObject456, _templateObject465, _templateObject475, _templateObject484, _templateObject494, _templateObject504, _templateObject518, _templateObject524, _templateObject534, _templateObject544, _templateObject554, _templateObject564, _templateObject574, _templateObject584, _templateObject593, _templateObject603, _templateObject615, _templateObject624, _templateObject633, _templateObject643, _templateObject653, _templateObject663, _templateObject673, _templateObject683, _templateObject693, _templateObject702, _templateObject712, _templateObject723, _templateObject733, _templateObject743, _templateObject753, _templateObject763, _templateObject773, _templateObject782, _templateObject792, _templateObject802, _templateObject812, _templateObject823, _templateObject833, _templateObject843, _templateObject853, lab, phylaEffects, phylaTonics, tonicEffects, init_DNALab = __esm({
  "node_modules/libram/dist/resources/2014/DNALab.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia25 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_template_string();
    init_utils();
    lab = $item(_templateObject118 || (_templateObject118 = _taggedTemplateLiteral17(["Little Geneticist DNA-Splicing Lab"])));
    phylaEffects = /* @__PURE__ */ new Map([[$phylum(_templateObject228 || (_templateObject228 = _taggedTemplateLiteral17(["beast"]))), $effect(_templateObject328 || (_templateObject328 = _taggedTemplateLiteral17(["Human-Beast Hybrid"])))], [$phylum(_templateObject427 || (_templateObject427 = _taggedTemplateLiteral17(["bug"]))), $effect(_templateObject517 || (_templateObject517 = _taggedTemplateLiteral17(["Human-Insect Hybrid"])))], [$phylum(_templateObject614 || (_templateObject614 = _taggedTemplateLiteral17(["constellation"]))), $effect(_templateObject711 || (_templateObject711 = _taggedTemplateLiteral17(["Human-Constellation Hybrid"])))], [$phylum(_templateObject811 || (_templateObject811 = _taggedTemplateLiteral17(["construct"]))), $effect(_templateObject910 || (_templateObject910 = _taggedTemplateLiteral17(["Human-Machine Hybrid"])))], [$phylum(_templateObject1010 || (_templateObject1010 = _taggedTemplateLiteral17(["demon"]))), $effect(_templateObject119 || (_templateObject119 = _taggedTemplateLiteral17(["Human-Demon Hybrid"])))], [$phylum(_templateObject127 || (_templateObject127 = _taggedTemplateLiteral17(["dude"]))), $effect(_templateObject137 || (_templateObject137 = _taggedTemplateLiteral17(["Human-Human Hybrid"])))], [$phylum(_templateObject146 || (_templateObject146 = _taggedTemplateLiteral17(["elemental"]))), $effect(_templateObject156 || (_templateObject156 = _taggedTemplateLiteral17(["Human-Elemental Hybrid"])))], [$phylum(_templateObject166 || (_templateObject166 = _taggedTemplateLiteral17(["elf"]))), $effect(_templateObject176 || (_templateObject176 = _taggedTemplateLiteral17(["Human-Elf Hybrid"])))], [$phylum(_templateObject186 || (_templateObject186 = _taggedTemplateLiteral17(["fish"]))), $effect(_templateObject196 || (_templateObject196 = _taggedTemplateLiteral17(["Human-Fish Hybrid"])))], [$phylum(_templateObject206 || (_templateObject206 = _taggedTemplateLiteral17(["goblin"]))), $effect(_templateObject2111 || (_templateObject2111 = _taggedTemplateLiteral17(["Human-Goblin Hybrid"])))], [$phylum(_templateObject229 || (_templateObject229 = _taggedTemplateLiteral17(["hippy"]))), $effect(_templateObject236 || (_templateObject236 = _taggedTemplateLiteral17(["Human-Hobo Hybrid"])))], [$phylum(_templateObject246 || (_templateObject246 = _taggedTemplateLiteral17(["horror"]))), $effect(_templateObject256 || (_templateObject256 = _taggedTemplateLiteral17(["Human-Horror Hybrid"])))], [$phylum(_templateObject266 || (_templateObject266 = _taggedTemplateLiteral17(["humanoid"]))), $effect(_templateObject276 || (_templateObject276 = _taggedTemplateLiteral17(["Human-Humanoid Hybrid"])))], [$phylum(_templateObject286 || (_templateObject286 = _taggedTemplateLiteral17(["mer-kin"]))), $effect(_templateObject296 || (_templateObject296 = _taggedTemplateLiteral17(["Human-Mer-kin Hybrid"])))], [$phylum(_templateObject306 || (_templateObject306 = _taggedTemplateLiteral17(["orc"]))), $effect(_templateObject3111 || (_templateObject3111 = _taggedTemplateLiteral17(["Human-Orc Hybrid"])))], [$phylum(_templateObject329 || (_templateObject329 = _taggedTemplateLiteral17(["penguin"]))), $effect(_templateObject336 || (_templateObject336 = _taggedTemplateLiteral17(["Human-Penguin Hybrid"])))], [$phylum(_templateObject346 || (_templateObject346 = _taggedTemplateLiteral17(["pirate"]))), $effect(_templateObject356 || (_templateObject356 = _taggedTemplateLiteral17(["Human-Pirate Hybrid"])))], [$phylum(_templateObject366 || (_templateObject366 = _taggedTemplateLiteral17(["plant"]))), $effect(_templateObject376 || (_templateObject376 = _taggedTemplateLiteral17(["Human-Plant Hybrid"])))], [$phylum(_templateObject386 || (_templateObject386 = _taggedTemplateLiteral17(["slime"]))), $effect(_templateObject396 || (_templateObject396 = _taggedTemplateLiteral17(["Human-Slime Hybrid"])))], [$phylum(_templateObject406 || (_templateObject406 = _taggedTemplateLiteral17(["undead"]))), $effect(_templateObject4110 || (_templateObject4110 = _taggedTemplateLiteral17(["Human-Undead Hybrid"])))], [$phylum(_templateObject428 || (_templateObject428 = _taggedTemplateLiteral17(["weird"]))), $effect(_templateObject436 || (_templateObject436 = _taggedTemplateLiteral17(["Human-Weird Thing Hybrid"])))]]), phylaTonics = /* @__PURE__ */ new Map([[$phylum(_templateObject446 || (_templateObject446 = _taggedTemplateLiteral17(["beast"]))), $item(_templateObject456 || (_templateObject456 = _taggedTemplateLiteral17(["Gene Tonic: Beast"])))], [$phylum(_templateObject465 || (_templateObject465 = _taggedTemplateLiteral17(["bug"]))), $item(_templateObject475 || (_templateObject475 = _taggedTemplateLiteral17(["Gene Tonic: Insect"])))], [$phylum(_templateObject484 || (_templateObject484 = _taggedTemplateLiteral17(["constellation"]))), $item(_templateObject494 || (_templateObject494 = _taggedTemplateLiteral17(["Gene Tonic: Constellation"])))], [$phylum(_templateObject504 || (_templateObject504 = _taggedTemplateLiteral17(["construct"]))), $item(_templateObject518 || (_templateObject518 = _taggedTemplateLiteral17(["Gene Tonic: Construct"])))], [$phylum(_templateObject524 || (_templateObject524 = _taggedTemplateLiteral17(["demon"]))), $item(_templateObject534 || (_templateObject534 = _taggedTemplateLiteral17(["Gene Tonic: Demon"])))], [$phylum(_templateObject544 || (_templateObject544 = _taggedTemplateLiteral17(["dude"]))), $item(_templateObject554 || (_templateObject554 = _taggedTemplateLiteral17(["Gene Tonic: Humanoid"])))], [$phylum(_templateObject564 || (_templateObject564 = _taggedTemplateLiteral17(["elemental"]))), $item(_templateObject574 || (_templateObject574 = _taggedTemplateLiteral17(["Gene Tonic: Elemental"])))], [$phylum(_templateObject584 || (_templateObject584 = _taggedTemplateLiteral17(["elf"]))), $item(_templateObject593 || (_templateObject593 = _taggedTemplateLiteral17(["Gene Tonic: Elf"])))], [$phylum(_templateObject603 || (_templateObject603 = _taggedTemplateLiteral17(["fish"]))), $item(_templateObject615 || (_templateObject615 = _taggedTemplateLiteral17(["Gene Tonic: Fish"])))], [$phylum(_templateObject624 || (_templateObject624 = _taggedTemplateLiteral17(["goblin"]))), $item(_templateObject633 || (_templateObject633 = _taggedTemplateLiteral17(["Gene Tonic: Goblin"])))], [$phylum(_templateObject643 || (_templateObject643 = _taggedTemplateLiteral17(["hippy"]))), $item(_templateObject653 || (_templateObject653 = _taggedTemplateLiteral17(["Gene Tonic: Hobo"])))], [$phylum(_templateObject663 || (_templateObject663 = _taggedTemplateLiteral17(["horror"]))), $item(_templateObject673 || (_templateObject673 = _taggedTemplateLiteral17(["Gene Tonic: Horror"])))], [$phylum(_templateObject683 || (_templateObject683 = _taggedTemplateLiteral17(["humanoid"]))), $item(_templateObject693 || (_templateObject693 = _taggedTemplateLiteral17(["Gene Tonic: Humanoid"])))], [$phylum(_templateObject702 || (_templateObject702 = _taggedTemplateLiteral17(["mer-kin"]))), $item(_templateObject712 || (_templateObject712 = _taggedTemplateLiteral17(["Gene Tonic: Mer-kin"])))], [$phylum(_templateObject723 || (_templateObject723 = _taggedTemplateLiteral17(["orc"]))), $item(_templateObject733 || (_templateObject733 = _taggedTemplateLiteral17(["Gene Tonic: Orc"])))], [$phylum(_templateObject743 || (_templateObject743 = _taggedTemplateLiteral17(["penguin"]))), $item(_templateObject753 || (_templateObject753 = _taggedTemplateLiteral17(["Gene Tonic: Penguin"])))], [$phylum(_templateObject763 || (_templateObject763 = _taggedTemplateLiteral17(["pirate"]))), $item(_templateObject773 || (_templateObject773 = _taggedTemplateLiteral17(["Gene Tonic: Pirate"])))], [$phylum(_templateObject782 || (_templateObject782 = _taggedTemplateLiteral17(["plant"]))), $item(_templateObject792 || (_templateObject792 = _taggedTemplateLiteral17(["Gene Tonic: Plant"])))], [$phylum(_templateObject802 || (_templateObject802 = _taggedTemplateLiteral17(["slime"]))), $item(_templateObject812 || (_templateObject812 = _taggedTemplateLiteral17(["Gene Tonic: Slime"])))], [$phylum(_templateObject823 || (_templateObject823 = _taggedTemplateLiteral17(["undead"]))), $item(_templateObject833 || (_templateObject833 = _taggedTemplateLiteral17(["Gene Tonic: Undead"])))], [$phylum(_templateObject843 || (_templateObject843 = _taggedTemplateLiteral17(["weird"]))), $item(_templateObject853 || (_templateObject853 = _taggedTemplateLiteral17(["Gene Tonic: Weird"])))]]), tonicEffects = Array.from(phylaEffects.values());
  }
});

// node_modules/libram/dist/resources/2014/WinterGarden.js
var WinterGarden_exports = {};
__export(WinterGarden_exports, {
  UnfinishedIceSculpture: function() {
    return UnfinishedIceSculpture;
  },
  couldUseUnfinishedIceSculpture: function() {
    return couldUseUnfinishedIceSculpture;
  },
  getUnfinishedIceSculptureMonster: function() {
    return getUnfinishedIceSculptureMonster;
  },
  have: function() {
    return have14;
  },
  haveUnfinishedIceSculpture: function() {
    return haveUnfinishedIceSculpture;
  },
  isUnfinishedIceSculptureUsed: function() {
    return isUnfinishedIceSculptureUsed;
  }
});
function _taggedTemplateLiteral18(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have14() {
  return haveInCampground($item(_templateObject120 || (_templateObject120 = _taggedTemplateLiteral18(["packet of winter seeds"]))));
}
function haveUnfinishedIceSculpture() {
  return have($item(_templateObject230 || (_templateObject230 = _taggedTemplateLiteral18(["unfinished ice sculpture"]))));
}
function isUnfinishedIceSculptureUsed() {
  return get("_iceSculptureUsed");
}
function couldUseUnfinishedIceSculpture() {
  return have($item(_templateObject330 || (_templateObject330 = _taggedTemplateLiteral18(["unfinished ice sculpture"])))) && !have($item(_templateObject429 || (_templateObject429 = _taggedTemplateLiteral18(["ice sculpture"]))));
}
function getUnfinishedIceSculptureMonster() {
  return get("iceSculptureMonster");
}
var _templateObject120, _templateObject230, _templateObject330, _templateObject429, UnfinishedIceSculpture, init_WinterGarden = __esm({
  "node_modules/libram/dist/resources/2014/WinterGarden.js": function() {
    init_kolmafia_polyfill();
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    UnfinishedIceSculpture = new Copier(function() {
      return couldUseUnfinishedIceSculpture();
    }, null, function() {
      return couldUseUnfinishedIceSculpture();
    }, function() {
      return getUnfinishedIceSculptureMonster();
    });
  }
});

// node_modules/libram/dist/resources/2015/BarrelShrine.js
var BarrelShrine_exports = {};
__export(BarrelShrine_exports, {
  have: function() {
    return have15;
  },
  smashParty: function() {
    return smashParty;
  }
});
function _taggedTemplateLiteral19(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have15() {
  return get("barrelShrineUnlocked");
}
function smashParty() {
  if (have15()) {
    var total = sum(BARRELS, import_kolmafia26.availableAmount);
    if (!(total <= 0)) {
      (0, import_kolmafia26.visitUrl)("inv_use.php?pwd&whichitem=8568&choice=1");
      for (var i = 0; i < total / 100; i++)
        (0, import_kolmafia26.runChoice)(2);
    }
  }
}
var import_kolmafia26, _templateObject121, BARRELS, init_BarrelShrine = __esm({
  "node_modules/libram/dist/resources/2015/BarrelShrine.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia26 = require("kolmafia");
    init_property();
    init_template_string();
    init_utils();
    BARRELS = $items(_templateObject121 || (_templateObject121 = _taggedTemplateLiteral19(["little firkin, normal barrel, big tun, weathered barrel, dusty barrel, disintegrating barrel, moist barrel, rotting barrel, mouldering barrel, barnacled barrel"])));
  }
});

// node_modules/libram/dist/resources/2015/ChateauMantegna.js
var ChateauMantegna_exports = {};
__export(ChateauMantegna_exports, {
  ceilings: function() {
    return ceilings;
  },
  changeCeiling: function() {
    return changeCeiling;
  },
  changeDesk: function() {
    return changeDesk;
  },
  changeNightstand: function() {
    return changeNightstand;
  },
  desks: function() {
    return desks;
  },
  fightPainting: function() {
    return fightPainting;
  },
  getCeiling: function() {
    return getCeiling;
  },
  getDesk: function() {
    return getDesk;
  },
  getNightstand: function() {
    return getNightstand;
  },
  have: function() {
    return have16;
  },
  nightstands: function() {
    return nightstands;
  },
  paintingFought: function() {
    return paintingFought;
  },
  paintingMonster: function() {
    return paintingMonster;
  }
});
function have16() {
  return get("chateauAvailable");
}
function paintingMonster() {
  return get("chateauMonster");
}
function paintingFought() {
  return get("_chateauMonsterFought");
}
function fightPainting() {
  return (0, import_kolmafia27.visitUrl)("place.php?whichplace=chateau&action=chateau_painting", !1), (0, import_kolmafia27.runCombat)();
}
function getDesk() {
  var _desks$find;
  return (_desks$find = desks.find(function(desk) {
    return Object.keys((0, import_kolmafia27.getChateau)()).includes(desk);
  })) !== null && _desks$find !== void 0 ? _desks$find : null;
}
function getCeiling() {
  var _ceilings$find;
  return (_ceilings$find = ceilings.find(function(ceiling) {
    return Object.keys((0, import_kolmafia27.getChateau)()).includes(ceiling);
  })) !== null && _ceilings$find !== void 0 ? _ceilings$find : null;
}
function getNightstand() {
  var _nightstands$find;
  return (_nightstands$find = nightstands.find(function(nightstand) {
    return Object.keys((0, import_kolmafia27.getChateau)()).includes(nightstand);
  })) !== null && _nightstands$find !== void 0 ? _nightstands$find : null;
}
function changeDesk(desk) {
  return getDesk() === desk ? !0 : desks.includes(desk) ? ((0, import_kolmafia27.buy)(import_kolmafia27.Item.get(desk)), getDesk() === desk) : !1;
}
function changeCeiling(ceiling) {
  return getCeiling() === ceiling ? !0 : ceilings.includes(ceiling) ? ((0, import_kolmafia27.buy)(import_kolmafia27.Item.get(ceiling)), getCeiling() === ceiling) : !1;
}
function changeNightstand(nightstand) {
  return getNightstand() === nightstand ? !0 : nightstands.includes(nightstand) ? ((0, import_kolmafia27.buy)(import_kolmafia27.Item.get(nightstand)), getNightstand() === nightstand) : !1;
}
var import_kolmafia27, desks, ceilings, nightstands, init_ChateauMantegna = __esm({
  "node_modules/libram/dist/resources/2015/ChateauMantegna.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia27 = require("kolmafia");
    init_property();
    desks = ["fancy stationery set", "Swiss piggy bank", "continental juice bar"], ceilings = ["antler chandelier", "ceiling fan", "artificial skylight"], nightstands = ["foreign language tapes", "bowl of potpourri", "electric muscle stimulator"];
  }
});

// node_modules/libram/dist/resources/2015/DeckOfEveryCard.js
var DeckOfEveryCard_exports = {};
__export(DeckOfEveryCard_exports, {
  cards: function() {
    return cards;
  },
  cheatCard: function() {
    return cheatCard;
  },
  getCardsDrawn: function() {
    return getCardsDrawn;
  },
  getCardsSeen: function() {
    return getCardsSeen;
  },
  getRemainingCheats: function() {
    return getRemainingCheats;
  },
  getRemainingDraws: function() {
    return getRemainingDraws;
  },
  have: function() {
    return have17;
  }
});
function _taggedTemplateLiteral20(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have17() {
  return have($item(_templateObject128 || (_templateObject128 = _taggedTemplateLiteral20(["Deck of Every Card"]))));
}
function getCardsDrawn() {
  return clamp(get("_deckCardsDrawn"), 0, 15);
}
function getRemainingDraws() {
  return 15 - getCardsDrawn();
}
function getRemainingCheats() {
  return Math.floor(getRemainingDraws() / 5);
}
function getCardsSeen() {
  return get("_deckCardsSeen") ? get("_deckCardsSeen").split("|") : [];
}
function cheatCard(card) {
  return getCardsSeen().includes(card) ? !0 : getRemainingDraws() < 5 ? !1 : (0, import_kolmafia28.cliExecute)("cheat ".concat(card));
}
var import_kolmafia28, _templateObject128, cards, init_DeckOfEveryCard = __esm({
  "node_modules/libram/dist/resources/2015/DeckOfEveryCard.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia28 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    cards = Object.freeze(["X of Clubs", "X of Diamonds", "X of Hearts", "X of Spades", "X of Papayas", "X of Kumquats", "X of Salads", "X of Cups", "X of Coins", "X of Swords", "X of Wands", "XVI - The Tower", "Professor Plum", "Spare Tire", "Extra Tank", "Sheep", "Year of Plenty", "Mine", "Laboratory", "Plains", "Swamp", "Mountain", "Forest", "Island", "Lead Pipe", "Rope", "Wrench", "Candlestick", "Knife", "Revolver", "Gift Card", "1952 Mickey Mantle", "XXI - The World", "III - The Empress", "VI - The Lovers", "Healing Salve", "Dark Ritual", "Lightning Bolt", "Giant Growth", "Ancestral Recall", "XI - Strength", "I - The Magician", "0 - The Fool", "X - The Wheel of Fortune", "The Race Card", "Green Card", "IV - The Emperor", "IX - The Hermit", "Werewolf", "The Hive", "XVII - The Star", "VII - The Chariot", "XV - The Devil", "V - The Hierophant", "Fire Elemental", "Christmas Card", "Go Fish", "Goblin Sapper", "II - The High Priestess", "XIV - Temperance", "XVIII - The Moon", "Hunky Fireman Card", "Aquarius Horoscope", "XII - The Hanged Man", "Suit Warehouse Discount Card", "Pirate Birthday Card", "Plantable Greeting Card", "Slimer Trading Card", "XIII - Death", "Unstable Portal"]);
  }
});

// node_modules/libram/dist/resources/2015/Dinseylandfill.js
var Dinseylandfill_exports = {};
__export(Dinseylandfill_exports, {
  acceptQuest: function() {
    return acceptQuest;
  },
  activeQuest: function() {
    return activeQuest;
  },
  available: function() {
    return available;
  },
  canFightWartDinsey: function() {
    return canFightWartDinsey;
  },
  coasterNextTurn: function() {
    return coasterNextTurn;
  },
  disposeGarbage: function() {
    return disposeGarbage;
  },
  foughtWartDinseyThisLife: function() {
    return foughtWartDinseyThisLife;
  },
  hasActiveQuest: function() {
    return hasActiveQuest;
  },
  hasDisposedGarbage: function() {
    return hasDisposedGarbage;
  },
  hasQuest: function() {
    return hasQuest;
  },
  have: function() {
    return have18;
  },
  keyCardsLocations: function() {
    return keyCardsLocations;
  },
  questComplete: function() {
    return questComplete;
  },
  quests: function() {
    return quests;
  },
  turnInQuest: function() {
    return turnInQuest;
  }
});
function _createForOfIteratorHelper8(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray16(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray16(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray16(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray16(o, minLen);
  }
}
function _arrayLikeToArray16(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral21(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck10(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties8(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass8(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties8(Constructor.prototype, protoProps), staticProps && _defineProperties8(Constructor, staticProps), Constructor;
}
function _defineProperty12(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function have18() {
  return get("stenchAirportAlways");
}
function available() {
  return have18() || get("_stenchAirportToday");
}
function disposeGarbage() {
  return hasDisposedGarbage() ? !1 : (!hasDisposedGarbage() && have($item(_templateObject177 || (_templateObject177 = _taggedTemplateLiteral21(["bag of park garbage"])))) && ((0, import_kolmafia29.visitUrl)(maintUrl), (0, import_kolmafia29.runChoice)(6)), hasDisposedGarbage());
}
function hasQuest() {
  return quests.some(function(q) {
    return q.currentQuest();
  });
}
function activeQuest() {
  return quests.find(function(q) {
    return q.currentQuest();
  }) || BLANK_QUEST;
}
function questComplete() {
  var quest = activeQuest();
  return quest !== BLANK_QUEST && get(quest.questStateProperty) === "finished";
}
function hasActiveQuest() {
  return hasQuest() && !questComplete();
}
function acceptQuest(priority) {
  var _quests$find$priority, _quests$find;
  if (hasQuest())
    return !1;
  var page = (0, import_kolmafia29.visitUrl)(kioskUrl), choice = 6, at = (0, import_kolmafia29.indexOf)(page, "Available Assignments");
  if (at == -1)
    return !1;
  var jobs = [];
  quests.forEach(function(quest2) {
    jobs.push(quest2.name);
  });
  var priorityNum = typeof priority == "string" ? (_quests$find$priority = (_quests$find = quests.find(function(q) {
    return q.name === priority;
  })) === null || _quests$find === void 0 ? void 0 : _quests$find.priority) !== null && _quests$find$priority !== void 0 ? _quests$find$priority : 7 : priority, availableJobs = [], jobChoices = [["none", 999]], _iterator = _createForOfIteratorHelper8(quests), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var quest = _step.value, job = quest.name, jobAt = (0, import_kolmafia29.indexOf)(page, job, at);
      if (jobAt != -1) {
        availableJobs.push(quest), jobChoices.push([job, jobAt]);
        break;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var bestJob = availableJobs.sort(function(a, b) {
    return a.priority - b.priority;
  })[0], sortedChoices = jobChoices.sort(function(a, b) {
    return a[1] - b[1];
  });
  if (bestJob.priority <= priorityNum)
    for (var index in sortedChoices) {
      var jobName = sortedChoices[index][0];
      if (jobName === bestJob.name) {
        choice = parseInt(index) + 1;
        break;
      }
    }
  return (0, import_kolmafia29.runChoice)(choice), hasQuest();
}
function turnInQuest() {
  questComplete() && (activeQuest().name === "racism" && _set("questEStSocialJusticeI", "unstarted"), (0, import_kolmafia29.visitUrl)(kioskUrl), (0, import_kolmafia29.runChoice)(3));
}
function canFightWartDinsey() {
  return Array.from(keyCardsLocations.keys()).every(function(keycard) {
    return have(keycard);
  }) && !foughtWartDinseyThisLife() && getRemainingLiver() >= 0 && (0, import_kolmafia29.myAdventures)() > 0;
}
function coasterNextTurn() {
  return get("dinseyRollercoasterNext");
}
function foughtWartDinseyThisLife() {
  return get("lastWartDinseyDefeated") === (0, import_kolmafia29.myAscensions)();
}
function hasDisposedGarbage() {
  return get("_dinseyGarbageDisposed");
}
var import_kolmafia29, _templateObject129, _templateObject231, _templateObject331, _templateObject430, _templateObject519, _templateObject616, _templateObject713, _templateObject813, _templateObject911, _templateObject1011, _templateObject1110, _templateObject1210, _templateObject138, _templateObject147, _templateObject157, _templateObject167, _templateObject177, _templateObject187, _templateObject197, _templateObject207, _templateObject2112, _templateObject2210, _templateObject237, _templateObject247, _templateObject257, _templateObject267, _templateObject277, QuestData, kioskUrl, maintUrl, quests, BLANK_QUEST, keyCardsLocations, init_Dinseylandfill = __esm({
  "node_modules/libram/dist/resources/2015/Dinseylandfill.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia29 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    QuestData = /* @__PURE__ */ function() {
      function QuestData2(name, priority, questNameKiosk, questNameQuestLog, questStateProperty, questProgressProperty, questProgressLimit, canUseWanderers, requiredItem, questLocation) {
        _classCallCheck10(this, QuestData2), _defineProperty12(this, "name", void 0), _defineProperty12(this, "priority", void 0), _defineProperty12(this, "questNameKiosk", void 0), _defineProperty12(this, "questNameQuestLog", void 0), _defineProperty12(this, "questStateProperty", void 0), _defineProperty12(this, "questProgressProperty", void 0), _defineProperty12(this, "questProgressLimit", void 0), _defineProperty12(this, "canUseWanderers", void 0), _defineProperty12(this, "requiredItem", void 0), _defineProperty12(this, "questLocation", void 0), this.name = name, this.priority = priority, this.questNameKiosk = questNameKiosk, this.questNameQuestLog = questNameQuestLog, this.questStateProperty = questStateProperty, this.questProgressProperty = questProgressProperty, this.questProgressLimit = questProgressLimit, this.canUseWanderers = canUseWanderers, this.requiredItem = requiredItem, this.questLocation = questLocation;
      }
      return _createClass8(QuestData2, [{
        key: "currentQuest",
        value: function() {
          return get(this.questStateProperty) !== "unstarted";
        }
      }]), QuestData2;
    }(), kioskUrl = "place.php?whichplace=airport_stench&action=airport3_kiosk", maintUrl = "place.php?whichplace=airport_stench&action=airport3_tunnels", quests = [new QuestData("lube", 1, "Track Maintenance", "Super Luber", "questEStSuperLuber", "", 0, !1, $item(_templateObject129 || (_templateObject129 = _taggedTemplateLiteral21(["lube-shoes"]))), $location(_templateObject231 || (_templateObject231 = _taggedTemplateLiteral21(["Barf Mountain"])))), new QuestData("fuel", 0, "Electrical Maintenance", "Give Me Fuel", "questEStGiveMeFuel", "", 0, !1, $item(_templateObject331 || (_templateObject331 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject430 || (_templateObject430 = _taggedTemplateLiteral21(["The Toxic Teacups"])))), new QuestData("sexism", 2, "Sexism Reduction", "Social Justice Adventurer I", "questEStSocialJusticeI", "dinseySocialJusticeIProgress", 15, !0, $item(_templateObject519 || (_templateObject519 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject616 || (_templateObject616 = _taggedTemplateLiteral21(["Pirates of the Garbage Barges"])))), new QuestData("racism", 3, "Racism Reduction", "Social Justice Adventurer II", "questEStSocialJusticeII", "dinseySocialJusticeIIProgress", 15, !0, $item(_templateObject713 || (_templateObject713 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject813 || (_templateObject813 = _taggedTemplateLiteral21(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))), new QuestData("fun", 4, "Compulsory Fun", "Whistling Zippity-Doo-Dah", "questEStZippityDooDah", "dinseyFunProgress", 15, !0, $item(_templateObject911 || (_templateObject911 = _taggedTemplateLiteral21(["Dinsey mascot mask"]))), $location(_templateObject1011 || (_templateObject1011 = _taggedTemplateLiteral21(["The Toxic Teacups"])))), new QuestData("trash", 6, "Waterway Debris Removal", "Teach a Man to Fish Trash", "questEStFishTrash", "dinseyFilthLevel", 0, !0, $item(_templateObject1110 || (_templateObject1110 = _taggedTemplateLiteral21(["trash net"]))), $location(_templateObject1210 || (_templateObject1210 = _taggedTemplateLiteral21(["Pirates of the Garbage Barges"])))), new QuestData("bear", 5, "Bear Removal", "Nasty, Nasty Bears", "questEStNastyBears", "dinseyNastyBearsDefeated", 8, !1, $item(_templateObject138 || (_templateObject138 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject147 || (_templateObject147 = _taggedTemplateLiteral21(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))), new QuestData("food", 7, "Guest Sustenance Assurance", "Will Work With Food", "questEStWorkWithFood", "dinseyTouristsFed", 30, !1, $item(_templateObject157 || (_templateObject157 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject167 || (_templateObject167 = _taggedTemplateLiteral21(["Barf Mountain"]))))];
    BLANK_QUEST = new QuestData("", -1, "", "", "", "", -1, !1, $item(_templateObject187 || (_templateObject187 = _taggedTemplateLiteral21(["none"]))), $location(_templateObject197 || (_templateObject197 = _taggedTemplateLiteral21(["none"]))));
    keyCardsLocations = /* @__PURE__ */ new Map([[$item(_templateObject207 || (_templateObject207 = _taggedTemplateLiteral21(["keycard \u03B1"]))), $location(_templateObject2112 || (_templateObject2112 = _taggedTemplateLiteral21(["Barf Mountain"])))], [$item(_templateObject2210 || (_templateObject2210 = _taggedTemplateLiteral21(["keycard \u03B2"]))), $location(_templateObject237 || (_templateObject237 = _taggedTemplateLiteral21(["Pirates of the Garbage Barges"])))], [$item(_templateObject247 || (_templateObject247 = _taggedTemplateLiteral21(["keycard \u03B3"]))), $location(_templateObject257 || (_templateObject257 = _taggedTemplateLiteral21(["The Toxic Teacups"])))], [$item(_templateObject267 || (_templateObject267 = _taggedTemplateLiteral21(["keycard \u03B4"]))), $location(_templateObject277 || (_templateObject277 = _taggedTemplateLiteral21(["Uncle Gator's Country Fun-Time Liquid Waste Sluice"])))]]);
  }
});

// node_modules/libram/dist/resources/2015/MayoClinic.js
var MayoClinic_exports = {};
__export(MayoClinic_exports, {
  Mayo: function() {
    return Mayo;
  },
  have: function() {
    return have19;
  },
  installed: function() {
    return installed3;
  },
  setMayoMinder: function() {
    return setMayoMinder;
  }
});
function _taggedTemplateLiteral22(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function installed3() {
  return (0, import_kolmafia30.getWorkshed)() === $item(_templateObject520 || (_templateObject520 = _taggedTemplateLiteral22(["portable Mayo Clinic"])));
}
function have19() {
  return have($item(_templateObject617 || (_templateObject617 = _taggedTemplateLiteral22(["portable Mayo Clinic"])))) || installed3();
}
function setMayoMinder(mayo) {
  var quantity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  return (0, import_kolmafia30.getWorkshed)() !== $item(_templateObject714 || (_templateObject714 = _taggedTemplateLiteral22(["portable Mayo Clinic"]))) ? !1 : Object.values(Mayo).includes(mayo) ? get("mayoInMouth") && get("mayoInMouth") !== mayo.name ? (logger_default.error("Currently have incorrect mayo in mouth"), !1) : ((0, import_kolmafia30.retrieveItem)(quantity, mayo), have($item(_templateObject814 || (_templateObject814 = _taggedTemplateLiteral22(["Mayo Minder\u2122"])))) || (0, import_kolmafia30.buy)($item(_templateObject912 || (_templateObject912 = _taggedTemplateLiteral22(["Mayo Minder\u2122"])))), get("mayoMinderSetting") !== mayo.name && withChoice(1076, mayo.id - 8260, function() {
    return (0, import_kolmafia30.use)($item(_templateObject1012 || (_templateObject1012 = _taggedTemplateLiteral22(["Mayo Minder\u2122"]))));
  }), get("mayoMinderSetting") === mayo.name) : (logger_default.error("Invalid mayo selected"), !1);
}
var import_kolmafia30, _templateObject130, _templateObject238, _templateObject337, _templateObject431, _templateObject520, _templateObject617, _templateObject714, _templateObject814, _templateObject912, _templateObject1012, Mayo, init_MayoClinic = __esm({
  "node_modules/libram/dist/resources/2015/MayoClinic.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia30 = require("kolmafia");
    init_lib();
    init_logger();
    init_property();
    init_template_string();
    Mayo = {
      nex: $item(_templateObject130 || (_templateObject130 = _taggedTemplateLiteral22(["Mayonex"]))),
      diol: $item(_templateObject238 || (_templateObject238 = _taggedTemplateLiteral22(["Mayodiol"]))),
      zapine: $item(_templateObject337 || (_templateObject337 = _taggedTemplateLiteral22(["Mayozapine"]))),
      flex: $item(_templateObject431 || (_templateObject431 = _taggedTemplateLiteral22(["Mayoflex"])))
    };
  }
});

// node_modules/libram/dist/resources/2016/SourceTerminal.js
var SourceTerminal_exports = {};
__export(SourceTerminal_exports, {
  Buffs: function() {
    return Buffs;
  },
  Digitize: function() {
    return Digitize;
  },
  Items: function() {
    return Items;
  },
  RolloverBuffs: function() {
    return RolloverBuffs;
  },
  Skills: function() {
    return Skills;
  },
  canDigitize: function() {
    return canDigitize;
  },
  couldDigitize: function() {
    return couldDigitize;
  },
  duplicateUsesRemaining: function() {
    return duplicateUsesRemaining;
  },
  educate: function() {
    return educate;
  },
  enhance: function() {
    return enhance;
  },
  enhanceBuffDuration: function() {
    return enhanceBuffDuration;
  },
  enhanceUsesRemaining: function() {
    return enhanceUsesRemaining;
  },
  enquiry: function() {
    return enquiry;
  },
  enquiryBuffDuration: function() {
    return enquiryBuffDuration;
  },
  extrude: function() {
    return extrude;
  },
  getChips: function() {
    return getChips;
  },
  getDigitizeMonster: function() {
    return getDigitizeMonster;
  },
  getDigitizeMonsterCount: function() {
    return getDigitizeMonsterCount;
  },
  getDigitizeUses: function() {
    return getDigitizeUses;
  },
  getDigitizeUsesRemaining: function() {
    return getDigitizeUsesRemaining;
  },
  getDuplicateUses: function() {
    return getDuplicateUses;
  },
  getEnhanceUses: function() {
    return getEnhanceUses;
  },
  getMaximumDigitizeUses: function() {
    return getMaximumDigitizeUses;
  },
  getPortscanUses: function() {
    return getPortscanUses;
  },
  getSkills: function() {
    return getSkills;
  },
  have: function() {
    return have20;
  },
  isCurrentSkill: function() {
    return isCurrentSkill;
  },
  maximumDuplicateUses: function() {
    return maximumDuplicateUses;
  },
  maximumEnhanceUses: function() {
    return maximumEnhanceUses;
  },
  prepareDigitize: function() {
    return prepareDigitize;
  }
});
function _createForOfIteratorHelper9(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray17(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray17(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray17(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray17(o, minLen);
  }
}
function _arrayLikeToArray17(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral23(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have20() {
  return haveInCampground(item);
}
function enhance(buff) {
  return Object.values(Buffs).includes(buff) ? (0, import_kolmafia31.cliExecute)("terminal enhance ".concat(buff.name)) : !1;
}
function enquiry(rolloverBuff) {
  return Object.values(RolloverBuffs).includes(rolloverBuff) ? (0, import_kolmafia31.cliExecute)("terminal enquiry ".concat(rolloverBuff.name)) : !1;
}
function educate(skills3) {
  var skillsArray = Array.isArray(skills3) ? skills3.slice(0, 2) : [skills3];
  if (arrayEquals(skillsArray, getSkills()))
    return !0;
  var _iterator = _createForOfIteratorHelper9(skillsArray), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var skill = _step.value;
      if (!Object.values(Skills).includes(skill))
        return !1;
      (0, import_kolmafia31.cliExecute)("terminal educate ".concat(skill.name.toLowerCase(), ".edu"));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return !0;
}
function getSkills() {
  return ["sourceTerminalEducate1", "sourceTerminalEducate2"].map(function(p) {
    return get(p);
  }).filter(function(s) {
    return s !== "";
  }).map(function(s) {
    return import_kolmafia31.Skill.get(s.slice(0, -4));
  });
}
function isCurrentSkill(skills3) {
  var currentSkills = getSkills(), skillsArray = Array.isArray(skills3) ? skills3.slice(0, 2) : [skills3];
  return skillsArray.every(function(skill) {
    return currentSkills.includes(skill);
  });
}
function extrude(item10) {
  var fileName = Items.get(item10);
  return fileName ? (0, import_kolmafia31.cliExecute)("terminal extrude ".concat(fileName)) : !1;
}
function getChips() {
  return get("sourceTerminalChips").split(",");
}
function getDigitizeUses() {
  return get("_sourceTerminalDigitizeUses");
}
function getDigitizeMonster() {
  return get("_sourceTerminalDigitizeMonster");
}
function getDigitizeMonsterCount() {
  return get("_sourceTerminalDigitizeMonsterCount");
}
function getMaximumDigitizeUses() {
  var chips = getChips();
  return 1 + (chips.includes("TRAM") ? 1 : 0) + (chips.includes("TRIGRAM") ? 1 : 0);
}
function getDigitizeUsesRemaining() {
  return getMaximumDigitizeUses() - getDigitizeUses();
}
function couldDigitize() {
  return getDigitizeUses() < getMaximumDigitizeUses();
}
function prepareDigitize() {
  return isCurrentSkill(Skills.Digitize) ? !0 : educate(Skills.Digitize);
}
function canDigitize() {
  return couldDigitize() && getSkills().includes(Skills.Digitize);
}
function getDuplicateUses() {
  return get("_sourceTerminalDuplicateUses");
}
function getEnhanceUses() {
  return get("_sourceTerminalEnhanceUses");
}
function getPortscanUses() {
  return get("_sourceTerminalPortscanUses");
}
function maximumDuplicateUses() {
  return (0, import_kolmafia31.myPath)() === import_kolmafia31.Path.get("The Source") ? 5 : 1;
}
function duplicateUsesRemaining() {
  return maximumDuplicateUses() - getDuplicateUses();
}
function maximumEnhanceUses() {
  return 1 + getChips().filter(function(chip) {
    return ["CRAM", "SCRAM"].includes(chip);
  }).length;
}
function enhanceUsesRemaining() {
  return maximumEnhanceUses() - getEnhanceUses();
}
function enhanceBuffDuration() {
  return 25 + get("sourceTerminalPram") * 5 + (getChips().includes("INGRAM") ? 25 : 0);
}
function enquiryBuffDuration() {
  return 50 + 10 * get("sourceTerminalGram") + (getChips().includes("DIAGRAM") ? 50 : 0);
}
var import_kolmafia31, _templateObject131, _templateObject239, _templateObject338, _templateObject437, _templateObject521, _templateObject618, _templateObject715, _templateObject815, _templateObject913, _templateObject1013, _templateObject1111, _templateObject1211, _templateObject139, _templateObject148, _templateObject158, _templateObject168, _templateObject178, _templateObject188, _templateObject198, _templateObject208, _templateObject2113, _templateObject2211, _templateObject2310, _templateObject248, _templateObject258, _templateObject268, _templateObject278, item, Buffs, RolloverBuffs, Skills, Items, Digitize, init_SourceTerminal = __esm({
  "node_modules/libram/dist/resources/2016/SourceTerminal.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia31 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item = $item(_templateObject131 || (_templateObject131 = _taggedTemplateLiteral23(["Source terminal"])));
    Buffs = {
      Items: $effect(_templateObject239 || (_templateObject239 = _taggedTemplateLiteral23(["items.enh"]))),
      Meat: $effect(_templateObject338 || (_templateObject338 = _taggedTemplateLiteral23(["meat.enh"]))),
      Init: $effect(_templateObject437 || (_templateObject437 = _taggedTemplateLiteral23(["init.enh"]))),
      Critical: $effect(_templateObject521 || (_templateObject521 = _taggedTemplateLiteral23(["critical.enh"]))),
      Damage: $effect(_templateObject618 || (_templateObject618 = _taggedTemplateLiteral23(["damage.enh"]))),
      Substats: $effect(_templateObject715 || (_templateObject715 = _taggedTemplateLiteral23(["substats.enh"])))
    };
    RolloverBuffs = {
      /** +5 Familiar Weight */
      Familiar: $effect(_templateObject815 || (_templateObject815 = _taggedTemplateLiteral23(["familiar.enq"]))),
      /** +25 ML */
      Monsters: $effect(_templateObject913 || (_templateObject913 = _taggedTemplateLiteral23(["monsters.enq"]))),
      /** +5 Prismatic Resistance */
      Protect: $effect(_templateObject1013 || (_templateObject1013 = _taggedTemplateLiteral23(["protect.enq"]))),
      /** +100% Muscle, +100% Mysticality, +100% Moxie */
      Stats: $effect(_templateObject1111 || (_templateObject1111 = _taggedTemplateLiteral23(["stats.enq"])))
    };
    Skills = {
      /** Collect Source essence from enemies once per combat */
      Extract: $skill(_templateObject1211 || (_templateObject1211 = _taggedTemplateLiteral23(["Extract"]))),
      /** Stagger and create a wandering monster 1-3 times per day */
      Digitize: $skill(_templateObject139 || (_templateObject139 = _taggedTemplateLiteral23(["Digitize"]))),
      /** Stagger and deal 25% of enemy HP in damage once per combat */
      Compress: $skill(_templateObject148 || (_templateObject148 = _taggedTemplateLiteral23(["Compress"]))),
      /** Double monster's HP, attack, defence, attacks per round and item drops once per fight and once per day (five in The Source) */
      Duplicate: $skill(_templateObject158 || (_templateObject158 = _taggedTemplateLiteral23(["Duplicate"]))),
      /** Causes government agent/Source Agent wanderer next turn once per combat and three times per day */
      Portscan: $skill(_templateObject168 || (_templateObject168 = _taggedTemplateLiteral23(["Portscan"]))),
      /** Increase Max MP by 100% and recover 1000 MP once per combat with a 30 turn cooldown */
      Turbo: $skill(_templateObject178 || (_templateObject178 = _taggedTemplateLiteral23(["Turbo"])))
    };
    Items = /* @__PURE__ */ new Map([[$item(_templateObject188 || (_templateObject188 = _taggedTemplateLiteral23(["browser cookie"]))), "food.ext"], [$item(_templateObject198 || (_templateObject198 = _taggedTemplateLiteral23(["hacked gibson"]))), "booze.ext"], [$item(_templateObject208 || (_templateObject208 = _taggedTemplateLiteral23(["Source shades"]))), "goggles.ext"], [$item(_templateObject2113 || (_templateObject2113 = _taggedTemplateLiteral23(["Source terminal GRAM chip"]))), "gram.ext"], [$item(_templateObject2211 || (_templateObject2211 = _taggedTemplateLiteral23(["Source terminal PRAM chip"]))), "pram.ext"], [$item(_templateObject2310 || (_templateObject2310 = _taggedTemplateLiteral23(["Source terminal SPAM chip"]))), "spam.ext"], [$item(_templateObject248 || (_templateObject248 = _taggedTemplateLiteral23(["Source terminal CRAM chip"]))), "cram.ext"], [$item(_templateObject258 || (_templateObject258 = _taggedTemplateLiteral23(["Source terminal DRAM chip"]))), "dram.ext"], [$item(_templateObject268 || (_templateObject268 = _taggedTemplateLiteral23(["Source terminal TRAM chip"]))), "tram.ext"], [$item(_templateObject278 || (_templateObject278 = _taggedTemplateLiteral23(["software bug"]))), "familiar.ext"]]);
    Digitize = new Copier(function() {
      return couldDigitize();
    }, function() {
      return prepareDigitize();
    }, function() {
      return canDigitize();
    }, function() {
      return getDigitizeMonster();
    });
  }
});

// node_modules/libram/dist/resources/2016/Witchess.js
var Witchess_exports = {};
__export(Witchess_exports, {
  fightPiece: function() {
    return fightPiece;
  },
  fightsDone: function() {
    return fightsDone;
  },
  have: function() {
    return have21;
  },
  pieces: function() {
    return pieces;
  }
});
function _taggedTemplateLiteral24(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have21() {
  return haveInCampground(item2);
}
function fightsDone() {
  return get("_witchessFights");
}
function fightPiece(piece) {
  if (!pieces.includes(piece))
    throw new Error("That is not a valid piece.");
  if (!(0, import_kolmafia32.visitUrl)("campground.php?action=witchess").includes("whichchoice value=1181"))
    throw new Error("Failed to open Witchess.");
  if (!(0, import_kolmafia32.runChoice)(1).includes("whichchoice=1182"))
    throw new Error("Failed to visit shrink ray.");
  if (!(0, import_kolmafia32.visitUrl)("choice.php?option=1&pwd=".concat((0, import_kolmafia32.myHash)(), "&whichchoice=1182&piece=").concat(piece.id), !1).includes(piece.name))
    throw new Error("Failed to start fight.");
  return (0, import_kolmafia32.runCombat)();
}
var import_kolmafia32, _templateObject140, item2, pieces, init_Witchess = __esm({
  "node_modules/libram/dist/resources/2016/Witchess.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia32 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item2 = $item(_templateObject140 || (_templateObject140 = _taggedTemplateLiteral24(["Witchess Set"])));
    pieces = import_kolmafia32.Monster.get(["Witchess Pawn", "Witchess Knight", "Witchess Bishop", "Witchess Rook", "Witchess Queen", "Witchess King", "Witchess Witch", "Witchess Ox"]);
  }
});

// node_modules/libram/dist/resources/2017/Horsery.js
var Horsery_exports = {};
__export(Horsery_exports, {
  changeHorse: function() {
    return changeHorse;
  },
  crazyHorseStats: function() {
    return crazyHorseStats;
  },
  current: function() {
    return current;
  },
  have: function() {
    return have22;
  }
});
function have22() {
  return get("horseryAvailable");
}
function current() {
  var horse = get("_horsery");
  return horse ? horse.split(" ")[0] : null;
}
function changeHorse(horse) {
  return horse === current() ? !0 : have22() ? ((0, import_kolmafia33.cliExecute)("horsery ".concat(horse)), current() === horse) : !1;
}
function crazyHorseStats() {
  return have22() ? (get("_horseryCrazyName") || (0, import_kolmafia33.visitUrl)("place.php?whichplace=town_right&action=town_horsery"), {
    "Mysticality Percent": Number(get("_horseryCrazyMys")),
    "Muscle Percent": Number(get("_horseryCrazyMus")),
    "Moxie Percent": Number(get("_horseryCrazyMox"))
  }) : {};
}
var import_kolmafia33, init_Horsery = __esm({
  "node_modules/libram/dist/resources/2017/Horsery.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia33 = require("kolmafia");
    init_property();
  }
});

// node_modules/libram/dist/resources/2017/MummingTrunk.js
var MummingTrunk_exports = {};
__export(MummingTrunk_exports, {
  currentCostumes: function() {
    return currentCostumes;
  }
});
function _createForOfIteratorHelper10(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray18(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray18(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray18(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray18(o, minLen);
  }
}
function _arrayLikeToArray18(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function toModifier(input) {
  var regExp = new RegExp(/Experience \((.*?)\)/), matcher = input.match(regExp);
  return matcher ? "".concat(matcher[2], " Experience") : input;
}
function currentCostumes() {
  var entries = get("_mummeryMods").split(","), returnValue = /* @__PURE__ */ new Map(), regExp = new RegExp(/([^:]+): \[(\d+)\*fam\(([^)]+)\)\]/), _iterator = _createForOfIteratorHelper10(entries), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var entry = _step.value, matcher = entry.match(regExp);
      matcher && returnValue.set((0, import_kolmafia34.toFamiliar)(matcher[3]), [toModifier(matcher[1]), parseInt(matcher[2])]);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return returnValue;
}
var import_kolmafia34, init_MummingTrunk = __esm({
  "node_modules/libram/dist/resources/2017/MummingTrunk.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia34 = require("kolmafia");
    init_property();
  }
});

// node_modules/libram/dist/resources/2017/Pantogram.js
var Pantogram_exports = {};
__export(Pantogram_exports, {
  findRequirements: function() {
    return findRequirements;
  },
  have: function() {
    return have23;
  },
  havePants: function() {
    return havePants;
  },
  makePants: function() {
    return makePants;
  },
  makePantsFromObject: function() {
    return makePantsFromObject;
  }
});
function _slicedToArray8(arr, i) {
  return _arrayWithHoles8(arr) || _iterableToArrayLimit8(arr, i) || _unsupportedIterableToArray19(arr, i) || _nonIterableRest8();
}
function _nonIterableRest8() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray19(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray19(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray19(o, minLen);
  }
}
function _arrayLikeToArray19(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit8(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles8(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _defineProperty13(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _taggedTemplateLiteral25(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have23() {
  return have(pantogram);
}
function havePants() {
  return have(pants);
}
function getLeftSacPair(mod) {
  return LeftSacrifice[mod];
}
function getMiddleSacPair(mod) {
  return MiddleSacrifice[mod];
}
function getRightSacPair(mod) {
  return RightSacrifice[mod];
}
function findRequirements(modifiers) {
  var leftSac = modifiers.leftSac, rightSac = modifiers.rightSac, middleSac = modifiers.middleSac, returnValue = /* @__PURE__ */ new Map();
  if (leftSac) {
    var _getLeftSacPair = getLeftSacPair(leftSac), _getLeftSacPair2 = _slicedToArray8(_getLeftSacPair, 2), sacrifice = _getLeftSacPair2[0], quantity = _getLeftSacPair2[1];
    sacrifice instanceof import_kolmafia35.Item && returnValue.set(sacrifice, quantity);
  }
  if (rightSac) {
    var _getRightSacPair = getRightSacPair(rightSac), _getRightSacPair2 = _slicedToArray8(_getRightSacPair, 2), _sacrifice = _getRightSacPair2[0], _quantity = _getRightSacPair2[1];
    _sacrifice instanceof import_kolmafia35.Item && returnValue.set(_sacrifice, _quantity);
  }
  if (middleSac) {
    var _getMiddleSacPair = getMiddleSacPair(middleSac), _getMiddleSacPair2 = _slicedToArray8(_getMiddleSacPair, 2), _sacrifice2 = _getMiddleSacPair2[0], _quantity2 = _getMiddleSacPair2[1];
    _sacrifice2 instanceof import_kolmafia35.Item && returnValue.set(_sacrifice2, _quantity2);
  }
  return returnValue;
}
function sacrificePairToURL(pair) {
  var _pair = _slicedToArray8(pair, 2), rawSacrifice = _pair[0], quantity = _pair[1], sacrifice = rawSacrifice instanceof import_kolmafia35.Item ? rawSacrifice.id : rawSacrifice;
  return "".concat(sacrifice, ",").concat(quantity);
}
function makePants(alignment, element, leftSac, middleSac, rightSac) {
  if (have(pants) || !have(pantogram))
    return !1;
  var requirements = findRequirements({
    alignment: alignment,
    element: element,
    leftSac: leftSac,
    rightSac: rightSac,
    middleSac: middleSac
  });
  if (Array.from(requirements.entries()).some(function(_ref) {
    var _ref2 = _slicedToArray8(_ref, 2), item10 = _ref2[0], quantity = _ref2[1];
    return !have(item10, quantity);
  }))
    return !1;
  var s1 = sacrificePairToURL(getLeftSacPair(leftSac)), s2 = sacrificePairToURL(getRightSacPair(rightSac)), s3 = sacrificePairToURL(getMiddleSacPair(middleSac)), url = "choice.php?whichchoice=1270&pwd&option=1&m=".concat(Alignment[alignment], "&e=").concat(Element3[element], "&s1=").concat(s1, "&s2=").concat(s2, "&s3=").concat(s3);
  return directlyUse(pantogram), (0, import_kolmafia35.visitUrl)(url), have(pants);
}
function makePantsFromObject(pants2) {
  return makePants(pants2.alignment, pants2.element, pants2.leftSac, pants2.middleSac, pants2.rightSac);
}
var import_kolmafia35, _templateObject141, _templateObject240, _Alignment, _Element, _templateObject339, _templateObject438, _templateObject525, _templateObject619, _templateObject716, _templateObject816, _templateObject914, _LeftSacrifice, _templateObject1014, _templateObject1112, _templateObject1212, _templateObject1310, _templateObject149, _templateObject159, _templateObject169, _templateObject179, _templateObject189, _MiddleSacrifice, _templateObject199, _templateObject209, _templateObject2114, _templateObject2212, _templateObject2311, _templateObject249, _templateObject259, _templateObject269, _templateObject279, _templateObject287, _RightSacrifice, pantogram, pants, Alignment, Element3, LeftSacrifice, MiddleSacrifice, RightSacrifice, init_Pantogram = __esm({
  "node_modules/libram/dist/resources/2017/Pantogram.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia35 = require("kolmafia");
    init_lib();
    init_template_string();
    pantogram = $item(_templateObject141 || (_templateObject141 = _taggedTemplateLiteral25(["portable pantogram"]))), pants = $item(_templateObject240 || (_templateObject240 = _taggedTemplateLiteral25(["pantogram pants"])));
    Alignment = (_Alignment = {}, _defineProperty13(_Alignment, "Muscle", 1), _defineProperty13(_Alignment, "Mysticality", 2), _defineProperty13(_Alignment, "Moxie", 3), _Alignment), Element3 = (_Element = {}, _defineProperty13(_Element, "Hot Resistance: 2", 1), _defineProperty13(_Element, "Cold Resistance: 2", 2), _defineProperty13(_Element, "Spooky Resistance: 2", 3), _defineProperty13(_Element, "Sleaze Resistance: 2", 4), _defineProperty13(_Element, "Stench Resistance: 2", 5), _Element), LeftSacrifice = (_LeftSacrifice = {}, _defineProperty13(_LeftSacrifice, "Maximum HP: 40", [-1, 0]), _defineProperty13(_LeftSacrifice, "Maximum MP: 20", [-2, 0]), _defineProperty13(_LeftSacrifice, "HP Regen Max: 10", [$item(_templateObject339 || (_templateObject339 = _taggedTemplateLiteral25(["red pixel potion"]))), 1]), _defineProperty13(_LeftSacrifice, "HP Regen Max: 15", [$item(_templateObject438 || (_templateObject438 = _taggedTemplateLiteral25(["royal jelly"]))), 1]), _defineProperty13(_LeftSacrifice, "HP Regen Max: 20", [$item(_templateObject525 || (_templateObject525 = _taggedTemplateLiteral25(["scented massage oil"]))), 1]), _defineProperty13(_LeftSacrifice, "MP Regen Max: 10", [$item(_templateObject619 || (_templateObject619 = _taggedTemplateLiteral25(["Cherry Cloaca Cola"]))), 1]), _defineProperty13(_LeftSacrifice, "MP Regen Max: 15", [$item(_templateObject716 || (_templateObject716 = _taggedTemplateLiteral25(["bubblin' crude"]))), 1]), _defineProperty13(_LeftSacrifice, "MP Regen Max: 20", [$item(_templateObject816 || (_templateObject816 = _taggedTemplateLiteral25(["glowing New Age crystal"]))), 1]), _defineProperty13(_LeftSacrifice, "Mana Cost: -3", [$item(_templateObject914 || (_templateObject914 = _taggedTemplateLiteral25(["baconstone"]))), 1]), _LeftSacrifice);
    MiddleSacrifice = (_MiddleSacrifice = {}, _defineProperty13(_MiddleSacrifice, "Combat Rate: -5", [-1, 0]), _defineProperty13(_MiddleSacrifice, "Combat Rate: 5", [-2, 0]), _defineProperty13(_MiddleSacrifice, "Critical Hit Percent: 10", [$item(_templateObject1014 || (_templateObject1014 = _taggedTemplateLiteral25(["hamethyst"]))), 1]), _defineProperty13(_MiddleSacrifice, "Initiative: 50", [$item(_templateObject1112 || (_templateObject1112 = _taggedTemplateLiteral25(["bar skin"]))), 1]), _defineProperty13(_MiddleSacrifice, "Familiar Weight: 10", [$item(_templateObject1212 || (_templateObject1212 = _taggedTemplateLiteral25(["lead necklace"]))), 11]), _defineProperty13(_MiddleSacrifice, "Candy Drop: 100", [$item(_templateObject1310 || (_templateObject1310 = _taggedTemplateLiteral25(["huge bowl of candy"]))), 1]), _defineProperty13(_MiddleSacrifice, "Item Drop Penalty: -10", [$item(_templateObject149 || (_templateObject149 = _taggedTemplateLiteral25(["sea salt crystal"]))), 11]), _defineProperty13(_MiddleSacrifice, "Fishing Skill: 5", [$item(_templateObject159 || (_templateObject159 = _taggedTemplateLiteral25(["wriggling worm"]))), 1]), _defineProperty13(_MiddleSacrifice, "Pool Skill: 5", [$item(_templateObject169 || (_templateObject169 = _taggedTemplateLiteral25(["8-ball"]))), 15]), _defineProperty13(_MiddleSacrifice, "Avatar: Purple", [$item(_templateObject179 || (_templateObject179 = _taggedTemplateLiteral25(["moxie weed"]))), 99]), _defineProperty13(_MiddleSacrifice, "Drops Items: true", [$item(_templateObject189 || (_templateObject189 = _taggedTemplateLiteral25(["ten-leaf clover"]))), 1]), _MiddleSacrifice);
    RightSacrifice = (_RightSacrifice = {}, _defineProperty13(_RightSacrifice, "Weapon Damage: 20", [-1, 0]), _defineProperty13(_RightSacrifice, "Spell Damage Percent: 20", [-2, 0]), _defineProperty13(_RightSacrifice, "Meat Drop: 30", [$item(_templateObject199 || (_templateObject199 = _taggedTemplateLiteral25(["taco shell"]))), 1]), _defineProperty13(_RightSacrifice, "Meat Drop: 60", [$item(_templateObject209 || (_templateObject209 = _taggedTemplateLiteral25(["porquoise"]))), 1]), _defineProperty13(_RightSacrifice, "Item Drop: 15", [$item(_templateObject2114 || (_templateObject2114 = _taggedTemplateLiteral25(["fairy gravy boat"]))), 1]), _defineProperty13(_RightSacrifice, "Item Drop: 30", [$item(_templateObject2212 || (_templateObject2212 = _taggedTemplateLiteral25(["tiny dancer"]))), 1]), _defineProperty13(_RightSacrifice, "Muscle Experience: 3", [$item(_templateObject2311 || (_templateObject2311 = _taggedTemplateLiteral25(["Knob Goblin firecracker"]))), 3]), _defineProperty13(_RightSacrifice, "Mysticality Experience: 3", [$item(_templateObject249 || (_templateObject249 = _taggedTemplateLiteral25(["razor-sharp can lid"]))), 3]), _defineProperty13(_RightSacrifice, "Moxie Experience: 3", [$item(_templateObject259 || (_templateObject259 = _taggedTemplateLiteral25(["spider web"]))), 3]), _defineProperty13(_RightSacrifice, "Muscle Experience Percent: 25", [$item(_templateObject269 || (_templateObject269 = _taggedTemplateLiteral25(["synthetic marrow"]))), 5]), _defineProperty13(_RightSacrifice, "Mysticality Experience Percent: 25", [$item(_templateObject279 || (_templateObject279 = _taggedTemplateLiteral25(["haunted battery"]))), 5]), _defineProperty13(_RightSacrifice, "Moxie Experience Percent: 25", [$item(_templateObject287 || (_templateObject287 = _taggedTemplateLiteral25(["the funk"]))), 5]), _RightSacrifice);
  }
});

// node_modules/libram/dist/resources/2017/Robortender.js
var Robortender_exports = {};
__export(Robortender_exports, {
  currentDrinks: function() {
    return currentDrinks;
  },
  drinks: function() {
    return drinks;
  },
  dropChance: function() {
    return dropChance;
  },
  dropFrom: function() {
    return dropFrom;
  },
  feed: function() {
    return feed;
  },
  have: function() {
    return have24;
  },
  majorDrinks: function() {
    return majorDrinks;
  },
  minorDrinks: function() {
    return minorDrinks;
  }
});
function _toConsumableArray9(arr) {
  return _arrayWithoutHoles9(arr) || _iterableToArray9(arr) || _unsupportedIterableToArray20(arr) || _nonIterableSpread9();
}
function _nonIterableSpread9() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray20(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray20(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray20(o, minLen);
  }
}
function _iterableToArray9(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles9(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray20(arr);
}
function _arrayLikeToArray20(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral26(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have24() {
  return (0, import_kolmafia36.haveFamiliar)(familiar5);
}
function dropFrom(target) {
  var _phylumDrops$get, phylum = target instanceof import_kolmafia36.Monster ? target.phylum : target;
  return (_phylumDrops$get = phylumDrops.get(phylum)) !== null && _phylumDrops$get !== void 0 ? _phylumDrops$get : $item.none;
}
function dropChance() {
  var _dropNumber, dropNumber = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_roboDrops");
  return (_dropNumber = [1, 0.5, 0.4, 0.4, 0.4, 0.3, 0.3, 0.3][dropNumber]) !== null && _dropNumber !== void 0 ? _dropNumber : 0.2;
}
function currentDrinks() {
  var pref = get("_roboDrinks");
  return pref ? pref.split(",").filter(function(x) {
    return x.trim();
  }).map(function(name) {
    return (0, import_kolmafia36.toItem)(name);
  }).filter(function(drink) {
    return drinks.includes(drink);
  }) : [];
}
function feed(beverage) {
  if (currentDrinks().includes(beverage))
    return !0;
  if (currentDrinks().length >= 5 || !drinks.includes(beverage) || !(0, import_kolmafia36.itemAmount)(beverage) || !have24())
    return !1;
  var priorFamiliar = (0, import_kolmafia36.myFamiliar)();
  return (0, import_kolmafia36.useFamiliar)(familiar5), (0, import_kolmafia36.visitUrl)("inventory.php?action=robooze&which=1&whichitem=".concat(beverage.id)), (0, import_kolmafia36.useFamiliar)(priorFamiliar), currentDrinks().includes(beverage);
}
var import_kolmafia36, _templateObject150, _templateObject241, _templateObject340, _templateObject439, _templateObject526, _templateObject620, _templateObject717, _templateObject817, _templateObject915, _templateObject1015, _templateObject1113, _templateObject1213, _templateObject1311, _templateObject1410, _templateObject1510, _templateObject1610, _templateObject1710, _templateObject1810, _templateObject1910, _templateObject2010, _templateObject2115, _templateObject2213, _templateObject2312, _templateObject2410, _templateObject2510, _templateObject2610, _templateObject2710, _templateObject288, _templateObject297, _templateObject307, _templateObject3112, _templateObject3210, _templateObject3310, _templateObject347, _templateObject357, _templateObject367, _templateObject377, familiar5, phylumDrops, minorDrinks, majorDrinks, drinks, init_Robortender = __esm({
  "node_modules/libram/dist/resources/2017/Robortender.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia36 = require("kolmafia");
    init_property();
    init_template_string();
    familiar5 = $familiar(_templateObject150 || (_templateObject150 = _taggedTemplateLiteral26(["Robortender"])));
    phylumDrops = /* @__PURE__ */ new Map([
      [$phylum(_templateObject241 || (_templateObject241 = _taggedTemplateLiteral26(["Bug"]))), $item(_templateObject340 || (_templateObject340 = _taggedTemplateLiteral26(["pickled grasshopper"])))],
      // bottle of anís
      [$phylum(_templateObject439 || (_templateObject439 = _taggedTemplateLiteral26(["Constellation"]))), import_kolmafia36.Item.get(9348)],
      [$phylum(_templateObject526 || (_templateObject526 = _taggedTemplateLiteral26(["Demon"]))), $item(_templateObject620 || (_templateObject620 = _taggedTemplateLiteral26(["bottle of novelty hot sauce"])))],
      [$phylum(_templateObject717 || (_templateObject717 = _taggedTemplateLiteral26(["Elemental"]))), $item(_templateObject817 || (_templateObject817 = _taggedTemplateLiteral26(["elemental sugarcube"])))],
      [$phylum(_templateObject915 || (_templateObject915 = _taggedTemplateLiteral26(["Elf"]))), $item(_templateObject1015 || (_templateObject1015 = _taggedTemplateLiteral26(["peppermint sprig"])))],
      [$phylum(_templateObject1113 || (_templateObject1113 = _taggedTemplateLiteral26(["Fish"]))), $item(_templateObject1213 || (_templateObject1213 = _taggedTemplateLiteral26(["bottle of clam juice"])))],
      [$phylum(_templateObject1311 || (_templateObject1311 = _taggedTemplateLiteral26(["Goblin"]))), $item(_templateObject1410 || (_templateObject1410 = _taggedTemplateLiteral26(["cocktail mushroom"])))],
      [$phylum(_templateObject1510 || (_templateObject1510 = _taggedTemplateLiteral26(["Hippy"]))), $item(_templateObject1610 || (_templateObject1610 = _taggedTemplateLiteral26(["shot of granola liqueur"])))],
      [$phylum(_templateObject1710 || (_templateObject1710 = _taggedTemplateLiteral26(["Hobo"]))), $item(_templateObject1810 || (_templateObject1810 = _taggedTemplateLiteral26(["can of cherry-flavored sterno"])))],
      [$phylum(_templateObject1910 || (_templateObject1910 = _taggedTemplateLiteral26(["Horror"]))), $item(_templateObject2010 || (_templateObject2010 = _taggedTemplateLiteral26(["lump of black ichor"])))],
      [$phylum(_templateObject2115 || (_templateObject2115 = _taggedTemplateLiteral26(["Humanoid"]))), $item(_templateObject2213 || (_templateObject2213 = _taggedTemplateLiteral26(["bottle of gregnadigne"])))],
      // bottle of Crème de Fugu
      [$phylum(_templateObject2312 || (_templateObject2312 = _taggedTemplateLiteral26(["Mer-kin"]))), import_kolmafia36.Item.get(9358)],
      [$phylum(_templateObject2410 || (_templateObject2410 = _taggedTemplateLiteral26(["Orc"]))), $item(_templateObject2510 || (_templateObject2510 = _taggedTemplateLiteral26(["baby oil shooter"])))],
      [$phylum(_templateObject2610 || (_templateObject2610 = _taggedTemplateLiteral26(["Penguin"]))), $item(_templateObject2710 || (_templateObject2710 = _taggedTemplateLiteral26(["fish head"])))],
      [$phylum(_templateObject288 || (_templateObject288 = _taggedTemplateLiteral26(["Pirate"]))), $item(_templateObject297 || (_templateObject297 = _taggedTemplateLiteral26(["limepatch"])))],
      [$phylum(_templateObject307 || (_templateObject307 = _taggedTemplateLiteral26(["Plant"]))), $item(_templateObject3112 || (_templateObject3112 = _taggedTemplateLiteral26(["pile of dirt"])))],
      [$phylum(_templateObject3210 || (_templateObject3210 = _taggedTemplateLiteral26(["Slime"]))), $item(_templateObject3310 || (_templateObject3310 = _taggedTemplateLiteral26(["slime shooter"])))],
      [$phylum(_templateObject347 || (_templateObject347 = _taggedTemplateLiteral26(["Weird"]))), $item(_templateObject357 || (_templateObject357 = _taggedTemplateLiteral26(["imaginary lemon"])))]
    ]);
    minorDrinks = $items(_templateObject367 || (_templateObject367 = _taggedTemplateLiteral26(["literal grasshopper, double entendre, Phlegethon, Siberian sunrise, mentholated wine, low tide martini, shroomtini, morning dew, whiskey squeeze, great old fashioned, Gnomish sagngria, vodka stinger, extremely slippery nipple, piscatini, Churchill, soilzerac, London frog, nothingtini"]))), majorDrinks = $items(_templateObject377 || (_templateObject377 = _taggedTemplateLiteral26(["eighth plague, single entendre, reverse Tantalus, elemental caipiroska, Feliz Navidad, Bloody Nora, moreltini, hell in a bucket, Newark, R'lyeh, Gnollish sangria, vodka barracuda, Mysterious Island iced tea, drive-by shooting, gunner's daughter, dirt julep, Simepore slime, Phil Collins"]))), drinks = [].concat(_toConsumableArray9(minorDrinks), _toConsumableArray9(majorDrinks));
  }
});

// node_modules/libram/dist/resources/2017/Spacegate.js
var Spacegate_exports = {};
__export(Spacegate_exports, {
  animalLife: function() {
    return animalLife;
  },
  dial: function() {
    return dial;
  },
  dialRandom: function() {
    return dialRandom;
  },
  dialled: function() {
    return dialled;
  },
  getHazardEquipment: function() {
    return getHazardEquipment;
  },
  getVaccine: function() {
    return getVaccine;
  },
  have: function() {
    return have25;
  },
  hazardEquipment: function() {
    return hazardEquipment;
  },
  hazards: function() {
    return hazards;
  },
  hostileLife: function() {
    return hostileLife;
  },
  intelligentLife: function() {
    return intelligentLife;
  },
  murderBots: function() {
    return murderBots;
  },
  planetCoords: function() {
    return planetCoords;
  },
  planetName: function() {
    return planetName;
  },
  plantLife: function() {
    return plantLife;
  },
  ruins: function() {
    return ruins;
  },
  spants: function() {
    return spants;
  },
  updateStatus: function() {
    return updateStatus;
  }
});
function _slicedToArray9(arr, i) {
  return _arrayWithHoles9(arr) || _iterableToArrayLimit9(arr, i) || _unsupportedIterableToArray21(arr, i) || _nonIterableRest9();
}
function _nonIterableRest9() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray21(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray21(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray21(o, minLen);
  }
}
function _arrayLikeToArray21(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit9(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles9(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral27(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have25() {
  return get("spacegateAlways");
}
function updateStatus() {
  (0, import_kolmafia37.visitUrl)("place.php?whichplace=spacegate&action=sg_Terminal");
}
function dialled() {
  return updateStatus(), get("_spacegateCoordinates") !== "" || get("_spacegateToday");
}
function hazards() {
  return get("_spacegateHazards");
}
function planetName() {
  return get("_spacegatePlanetName");
}
function planetCoords() {
  return get("_spacegateCoordinates");
}
function plantLife() {
  return get("_spacegatePlantLife");
}
function animalLife() {
  return get("_spacegateAnimalLife");
}
function intelligentLife() {
  return get("_spacegateIntelligentLife").includes("detected");
}
function hostileLife() {
  return get("_spacegateIntelligentLife").includes("hostile");
}
function ruins() {
  return get("_spacegateRuins");
}
function spants() {
  return get("_spacegateSpant");
}
function murderBots() {
  return get("_spacegateMurderbot");
}
function hazardEquipment(hazards2) {
  var hazardEquipment2 = {
    "toxic atmosphere": $item(_templateObject151 || (_templateObject151 = _taggedTemplateLiteral27(["filter helmet"]))),
    "high gravity": $item(_templateObject250 || (_templateObject250 = _taggedTemplateLiteral27(["exo-servo leg braces"]))),
    irradiated: $item(_templateObject341 || (_templateObject341 = _taggedTemplateLiteral27(["rad cloak"]))),
    "magnetic storms": $item(_templateObject440 || (_templateObject440 = _taggedTemplateLiteral27(["gate transceiver"]))),
    "high winds": $item(_templateObject527 || (_templateObject527 = _taggedTemplateLiteral27(["high-friction boots"])))
  };
  return Object.entries(hazardEquipment2).filter(function(_ref) {
    var _ref2 = _slicedToArray9(_ref, 1), clue = _ref2[0];
    return hazards2.includes(clue);
  }).map(function(_ref3) {
    var _ref4 = _slicedToArray9(_ref3, 2), item10 = _ref4[1];
    return item10;
  });
}
function getHazardEquipment() {
  if (!have25())
    return !1;
  var equipment = hazardEquipment(hazards());
  return equipment.forEach(function(equip5) {
    var num = equip5.id - 9404;
    (0, import_kolmafia37.visitUrl)("place.php?whichplace=spacegate&action=sg_requisition"), (0, import_kolmafia37.visitUrl)("choice.php?whichchoice=1233&option=".concat(num));
  }), equipment.forEach(function(equip5) {
    if ((0, import_kolmafia37.availableAmount)(equip5) !== 1)
      return !1;
  }), !0;
}
function getVaccine(choice) {
  if (get("_spacegateVaccine"))
    return !1;
  var nums = {
    Rainbow: 1,
    "Elemental Resistance": 1,
    "Broad-Spectrum": 2,
    Stats: 2,
    Emotional: 3,
    "Monster Level": 3
  }, num = nums[choice];
  if (!get("spacegateVaccine".concat(num)))
    throw "You don't appear to have that Vaccine Unlocked!";
  return (0, import_kolmafia37.cliExecute)("spacegate vaccine ".concat(num)), get("_spacegateVaccine");
}
function dial(address) {
  if (!have25() || dialled())
    return !1;
  if (!address.match("^[[alpha]]+$") || address.length !== 7)
    throw "Invalid Spacegate Address - must be exactly 7 alphabetic characters";
  return (0, import_kolmafia37.cliExecute)("spacegate destination ".concat(address)), dialled() && planetCoords() === address;
}
function dialRandom() {
  return !have25() || dialled() ? !1 : ((0, import_kolmafia37.cliExecute)("spacegate destination random"), dialled());
}
var import_kolmafia37, _templateObject151, _templateObject250, _templateObject341, _templateObject440, _templateObject527, init_Spacegate = __esm({
  "node_modules/libram/dist/resources/2017/Spacegate.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia37 = require("kolmafia");
    init_property();
    init_template_string();
  }
});

// node_modules/libram/dist/resources/2017/TunnelOfLove.js
var TunnelOfLove_exports = {};
__export(TunnelOfLove_exports, {
  LovEnamorang: function() {
    return LovEnamorang;
  },
  couldUseLoveEnamorang: function() {
    return couldUseLoveEnamorang;
  },
  fightAll: function() {
    return fightAll;
  },
  getLovEnamorangMonster: function() {
    return getLovEnamorangMonster;
  },
  getLovEnamorangUses: function() {
    return getLovEnamorangUses;
  },
  have: function() {
    return have26;
  },
  haveLovEnamorang: function() {
    return haveLovEnamorang;
  },
  isUsed: function() {
    return isUsed;
  }
});
function _taggedTemplateLiteral28(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have26() {
  return get("loveTunnelAvailable");
}
function isUsed() {
  return get("_loveTunnelUsed");
}
function haveLovEnamorang() {
  return have($item(_templateObject160 || (_templateObject160 = _taggedTemplateLiteral28(["LOV Enamorang"]))));
}
function getLovEnamorangUses() {
  return get("_enamorangs");
}
function couldUseLoveEnamorang() {
  return !haveWandererCounter(Wanderer.Enamorang) && getLovEnamorangUses() < 3 && haveLovEnamorang();
}
function getLovEnamorangMonster() {
  return get("enamorangMonster");
}
function equipmentChoice(equipment) {
  switch (equipment) {
    case "LOV Eardigan":
      return 1;
    case "LOV Epaulettes":
      return 2;
    case "LOV Earring":
      return 3;
  }
}
function effectChoice(effect2) {
  switch (effect2) {
    case "Lovebotamy":
      return 1;
    case "Open Heart Surgery":
      return 2;
    case "Wandering Eye Surgery":
      return 3;
  }
}
function extraChoice(extra) {
  switch (extra) {
    case "LOV Enamorang":
      return 1;
    case "LOV Emotionizer":
      return 2;
    case "LOV Extraterrestrial Chocolate":
      return 3;
    case "LOV Echinacea Bouquet":
      return 4;
    case "LOV Elephant":
      return 5;
    case "toast":
      return 6;
    case null:
      return 7;
  }
}
function fightAll(equipment, effect2, extra) {
  withChoices({
    1222: 1,
    1223: 1,
    1224: equipmentChoice(equipment),
    1225: 1,
    1226: effectChoice(effect2),
    1227: 1,
    1228: extraChoice(extra)
  }, function() {
    (0, import_kolmafia38.adv1)($location(_templateObject251 || (_templateObject251 = _taggedTemplateLiteral28(["The Tunnel of L.O.V.E."]))), 0, "");
  });
}
var import_kolmafia38, _templateObject160, _templateObject251, LovEnamorang, init_TunnelOfLove = __esm({
  "node_modules/libram/dist/resources/2017/TunnelOfLove.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia38 = require("kolmafia");
    init_Copier();
    init_lib();
    init_property();
    init_template_string();
    LovEnamorang = new Copier(function() {
      return couldUseLoveEnamorang();
    }, null, function() {
      return couldUseLoveEnamorang();
    }, function() {
      return getLovEnamorangMonster();
    });
  }
});

// node_modules/libram/dist/counter.js
var counter_exports = {};
__export(counter_exports, {
  exists: function() {
    return exists;
  },
  get: function() {
    return get3;
  },
  set: function() {
    return set;
  }
});
function get3(counter) {
  var value = (0, import_kolmafia39.getCounter)(counter);
  return value === -1 ? (0, import_kolmafia39.getCounters)(counter, -1, -1).trim() === "" ? 1 / 0 : -1 : value;
}
function exists(counter) {
  return (0, import_kolmafia39.getCounter)(counter) !== -1 || (0, import_kolmafia39.getCounters)(counter, -1, -1).trim() !== "";
}
function set(counter, duration) {
  return (0, import_kolmafia39.cliExecute)("counters add ".concat(duration, " ").concat(counter)), get3(counter) !== null;
}
var import_kolmafia39, init_counter = __esm({
  "node_modules/libram/dist/counter.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia39 = require("kolmafia");
  }
});

// node_modules/libram/dist/resources/2018/LatteLoversMembersMug.js
var LatteLoversMembersMug_exports = {};
__export(LatteLoversMembersMug_exports, {
  currentIngredients: function() {
    return currentIngredients;
  },
  fill: function() {
    return fill;
  },
  have: function() {
    return have27;
  },
  ingredientsUnlocked: function() {
    return ingredientsUnlocked;
  },
  locationOf: function() {
    return locationOf;
  },
  modifierOf: function() {
    return modifierOf;
  },
  refillsRemaining: function() {
    return refillsRemaining;
  },
  sniffedMonster: function() {
    return sniffedMonster;
  }
});
function _taggedTemplateLiteral29(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have27() {
  return have($item(_templateObject161 || (_templateObject161 = _taggedTemplateLiteral29(["latte lovers member's mug"]))));
}
function sniffedMonster() {
  return exists("Latte Monster") ? get("_latteMonster") : null;
}
function refillsRemaining() {
  return clamp(3 - get("_latteRefillsUsed"), 0, 3);
}
function ingredientsUnlocked() {
  return get("latteUnlocks").split(",");
}
function fill() {
  if (refillsRemaining() <= 0)
    return !1;
  for (var _len = arguments.length, ingredients = new Array(_len), _key = 0; _key < _len; _key++)
    ingredients[_key] = arguments[_key];
  return new Set(ingredients).size < 3 || ingredients.some(function(i) {
    return !ingredientsUnlocked().includes(i);
  }) ? !1 : (0, import_kolmafia40.cliExecute)("latte refill ".concat(ingredients.join(" ")));
}
function modifierOf(ingredient) {
  return INGREDIENTS[ingredient].modifier;
}
function locationOf(ingredient) {
  return INGREDIENTS[ingredient].location;
}
function currentIngredients() {
  return (0, import_kolmafia40.getProperty)("latteIngredients").split(",");
}
var import_kolmafia40, _templateObject161, _templateObject260, _templateObject348, _templateObject441, _templateObject528, _templateObject621, _templateObject718, _templateObject818, _templateObject916, _templateObject1016, _templateObject1114, _templateObject1214, _templateObject1312, _templateObject1411, _templateObject1511, _templateObject1611, _templateObject1711, _templateObject1811, _templateObject1911, _templateObject2011, _templateObject2116, _templateObject2214, _templateObject2313, _templateObject2411, _templateObject2511, _templateObject2611, _templateObject2711, _templateObject289, _templateObject298, _templateObject308, _templateObject3113, _templateObject3211, _templateObject3311, _templateObject349, _templateObject358, _templateObject368, _templateObject378, _templateObject387, _templateObject397, _templateObject407, _templateObject4111, _templateObject4210, _templateObject4310, _templateObject447, _templateObject457, _templateObject466, _templateObject476, _templateObject485, _templateObject495, _templateObject505, _templateObject5110, _templateObject529, _templateObject535, INGREDIENTS, init_LatteLoversMembersMug = __esm({
  "node_modules/libram/dist/resources/2018/LatteLoversMembersMug.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia40 = require("kolmafia");
    init_counter();
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    INGREDIENTS = {
      ancient: {
        modifier: {
          "Spooky Damage": 50
        },
        location: $location(_templateObject260 || (_templateObject260 = _taggedTemplateLiteral29(["The Mouldering Mansion"])))
      },
      asp: {
        modifier: {
          "Weapon Damage": 25
        },
        location: $location(_templateObject348 || (_templateObject348 = _taggedTemplateLiteral29(["The Middle Chamber"])))
      },
      basil: {
        modifier: {
          "HP Regen Min": 5,
          "HP Regen Max": 5
        },
        location: $location(_templateObject441 || (_templateObject441 = _taggedTemplateLiteral29(["The Overgrown Lot"])))
      },
      belgian: {
        modifier: {
          "Moxie Percent": 20,
          "Mysticality Percent": 20,
          "Muscle Percent": 20
        },
        location: $location(_templateObject528 || (_templateObject528 = _taggedTemplateLiteral29(["Whitey's Grove"])))
      },
      chalk: {
        modifier: {
          "Cold Damage": 25
        },
        location: $location(_templateObject621 || (_templateObject621 = _taggedTemplateLiteral29(["The Haunted Billiards Room"])))
      },
      "bug-thistle": {
        modifier: {
          Mysticality: 20
        },
        location: $location(_templateObject718 || (_templateObject718 = _taggedTemplateLiteral29(["The Bugbear Pen"])))
      },
      butternut: {
        modifier: {
          "Spell Damage": 10
        },
        location: $location(_templateObject818 || (_templateObject818 = _taggedTemplateLiteral29(["Madness Bakery"])))
      },
      cajun: {
        modifier: {
          "Meat Drop": 40
        },
        location: $location(_templateObject916 || (_templateObject916 = _taggedTemplateLiteral29(["The Black Forest"])))
      },
      carrot: {
        modifier: {
          "Item Drop": 20
        },
        location: $location(_templateObject1016 || (_templateObject1016 = _taggedTemplateLiteral29(["The Dire Warren"])))
      },
      carrrdamom: {
        modifier: {
          "MP Regen Min": 4,
          "MP Regen Max": 6
        },
        location: $location(_templateObject1114 || (_templateObject1114 = _taggedTemplateLiteral29(["Barrrney's Barrr"])))
      },
      chili: {
        modifier: {
          "Hot Resistance": 3
        },
        location: $location(_templateObject1214 || (_templateObject1214 = _taggedTemplateLiteral29(["The Haunted Kitchen"])))
      },
      clove: {
        modifier: {
          "Stench Resistance": 3
        },
        location: $location(_templateObject1312 || (_templateObject1312 = _taggedTemplateLiteral29(["The Sleazy Back Alley"])))
      },
      coal: {
        modifier: {
          "Hot Damage": 25
        },
        location: $location(_templateObject1411 || (_templateObject1411 = _taggedTemplateLiteral29(["The Haunted Boiler Room"])))
      },
      cocoa: {
        modifier: {
          "Cold Resistance": 3
        },
        location: $location(_templateObject1511 || (_templateObject1511 = _taggedTemplateLiteral29(["The Icy Peak"])))
      },
      diet: {
        modifier: {
          Initiative: 50
        },
        location: $location(_templateObject1611 || (_templateObject1611 = _taggedTemplateLiteral29(["Battlefield (No Uniform)"])))
      },
      dwarf: {
        modifier: {
          Muscle: 30
        },
        location: $location(_templateObject1711 || (_templateObject1711 = _taggedTemplateLiteral29(["Itznotyerzitz Mine"])))
      },
      dyspepsi: {
        modifier: {
          Initiative: 25
        },
        location: $location(_templateObject1811 || (_templateObject1811 = _taggedTemplateLiteral29(["Battlefield (Dyspepsi Uniform)"])))
      },
      filth: {
        modifier: {
          "Damage Reduction": 20
        },
        location: $location(_templateObject1911 || (_templateObject1911 = _taggedTemplateLiteral29(["The Feeding Chamber"])))
      },
      grass: {
        modifier: {
          Experience: 3
        },
        location: $location(_templateObject2011 || (_templateObject2011 = _taggedTemplateLiteral29(["The Hidden Park"])))
      },
      fungus: {
        modifier: {
          "Maximum MP": 30
        },
        location: $location(_templateObject2116 || (_templateObject2116 = _taggedTemplateLiteral29(["The Fungal Nethers"])))
      },
      mold: {
        modifier: {
          "Spooky Damage": 20
        },
        location: $location(_templateObject2214 || (_templateObject2214 = _taggedTemplateLiteral29(["The Unquiet Garves"])))
      },
      greek: {
        modifier: {
          "Sleaze Damage": 25
        },
        location: $location(_templateObject2313 || (_templateObject2313 = _taggedTemplateLiteral29(["Wartime Frat House"])))
      },
      grobold: {
        modifier: {
          "Sleaze Damage": 25
        },
        location: $location(_templateObject2411 || (_templateObject2411 = _taggedTemplateLiteral29(["The Old Rubee Mine"])))
      },
      guarna: {
        modifier: {
          Adventures: 4
        },
        location: $location(_templateObject2511 || (_templateObject2511 = _taggedTemplateLiteral29(["The Bat Hole Entrance"])))
      },
      gunpowder: {
        modifier: {
          "Weapon Damage": 50
        },
        location: $location(_templateObject2611 || (_templateObject2611 = _taggedTemplateLiteral29(["1st Floor, Shiawase-Mitsuhama Building"])))
      },
      healing: {
        modifier: {
          "HP Regen Min": 10,
          "HP Regen Max": 20
        },
        location: $location(_templateObject2711 || (_templateObject2711 = _taggedTemplateLiteral29(["The Daily Dungeon"])))
      },
      hellion: {
        modifier: {
          "PvP Fights": 6
        },
        location: $location(_templateObject289 || (_templateObject289 = _taggedTemplateLiteral29(["The Dark Neck of the Woods"])))
      },
      hobo: {
        modifier: {
          "Damage Absorption": 50
        },
        location: $location(_templateObject298 || (_templateObject298 = _taggedTemplateLiteral29(["Hobopolis Town Square"])))
      },
      greasy: {
        modifier: {
          "Muscle Percent": 50
        },
        location: $location(_templateObject308 || (_templateObject308 = _taggedTemplateLiteral29(["Cobb's Knob Barracks"])))
      },
      wing: {
        modifier: {
          "Combat Rate": 10
        },
        location: $location(_templateObject3113 || (_templateObject3113 = _taggedTemplateLiteral29(["The Dark Heart of the Woods"])))
      },
      ink: {
        modifier: {
          "Combat Rate": -10
        },
        location: $location(_templateObject3211 || (_templateObject3211 = _taggedTemplateLiteral29(["The Haunted Library"])))
      },
      kombucha: {
        modifier: {
          "Stench Damage": 25
        },
        location: $location(_templateObject3311 || (_templateObject3311 = _taggedTemplateLiteral29(["Wartime Hippy Camp"])))
      },
      lihc: {
        modifier: {
          "Spooky Damage": 25
        },
        location: $location(_templateObject349 || (_templateObject349 = _taggedTemplateLiteral29(["The Defiled Niche"])))
      },
      lizard: {
        modifier: {
          "MP Regen Min": 5,
          "MP Regen Max": 15
        },
        location: $location(_templateObject358 || (_templateObject358 = _taggedTemplateLiteral29(["The Arid, Extra-Dry Desert"])))
      },
      macaroni: {
        modifier: {
          "Maximum HP": 20
        },
        location: $location(_templateObject368 || (_templateObject368 = _taggedTemplateLiteral29(["The Haunted Pantry"])))
      },
      mega: {
        modifier: {
          "Moxie Percent": 50
        },
        location: $location(_templateObject378 || (_templateObject378 = _taggedTemplateLiteral29(["Cobb's Knob Laboratory"])))
      },
      oil: {
        modifier: {
          "Sleaze Damage": 20
        },
        location: $location(_templateObject387 || (_templateObject387 = _taggedTemplateLiteral29(["The Old Landfill"])))
      },
      msg: {
        modifier: {
          "Critical Hit Percent": 15
        },
        location: $location(_templateObject397 || (_templateObject397 = _taggedTemplateLiteral29(["The Briniest Deepests"])))
      },
      norwhal: {
        modifier: {
          "Maximum HP Percent": 200
        },
        location: $location(_templateObject407 || (_templateObject407 = _taggedTemplateLiteral29(["The Ice Hole"])))
      },
      paint: {
        modifier: {
          "Prismatic Damage": 5
        },
        location: $location(_templateObject4111 || (_templateObject4111 = _taggedTemplateLiteral29(["The Haunted Gallery"])))
      },
      paradise: {
        modifier: {
          Moxie: 20,
          Muscle: 20,
          Mysticality: 20
        },
        location: $location(_templateObject4210 || (_templateObject4210 = _taggedTemplateLiteral29(["The Stately Pleasure Dome"])))
      },
      rawhide: {
        modifier: {
          "Familiar Weight": 5
        },
        location: $location(_templateObject4310 || (_templateObject4310 = _taggedTemplateLiteral29(["The Spooky Forest"])))
      },
      rock: {
        modifier: {
          "Critical Hit Percent": 10
        },
        location: $location(_templateObject447 || (_templateObject447 = _taggedTemplateLiteral29(["The Brinier Deepers"])))
      },
      salt: {
        modifier: {
          "Critical Hit Percent": 5
        },
        location: $location(_templateObject457 || (_templateObject457 = _taggedTemplateLiteral29(["The Briny Deeps"])))
      },
      sandalwood: {
        modifier: {
          Moxie: 5,
          Muscle: 5,
          Mysticality: 5
        },
        location: $location(_templateObject466 || (_templateObject466 = _taggedTemplateLiteral29(["Noob Cave"])))
      },
      sausage: {
        modifier: {
          "Mysticality Percent": 50
        },
        location: $location(_templateObject476 || (_templateObject476 = _taggedTemplateLiteral29(["Cobb's Knob Kitchens"])))
      },
      space: {
        modifier: {
          Moxie: 10,
          Muscle: 10,
          Mysticality: 10
        },
        location: $location(_templateObject485 || (_templateObject485 = _taggedTemplateLiteral29(["The Hole in the Sky"])))
      },
      squash: {
        modifier: {
          "Spell Damage": 10
        },
        location: $location(_templateObject495 || (_templateObject495 = _taggedTemplateLiteral29(["The Copperhead Club"])))
      },
      teeth: {
        modifier: {
          "Spooky Damage": 25,
          "Weapon Damage": 25
        },
        location: $location(_templateObject505 || (_templateObject505 = _taggedTemplateLiteral29(["The VERY Unquiet Garves"])))
      },
      vitamin: {
        modifier: {
          "Familiar Experience": 3
        },
        location: $location(_templateObject5110 || (_templateObject5110 = _taggedTemplateLiteral29(["The Dark Elbow of the Woods"])))
      },
      flour: {
        modifier: {
          "Sleaze Resistance": 3
        },
        location: $location(_templateObject529 || (_templateObject529 = _taggedTemplateLiteral29(["The Road to the White Citadel"])))
      },
      squamous: {
        modifier: {
          "Spooky Resistance": 3
        },
        location: $location(_templateObject535 || (_templateObject535 = _taggedTemplateLiteral29(["The Caliginous Abyss"])))
      },
      pumpkin: {
        modifier: {
          "Mysticality Experience": 1,
          "Spell Damage": 5,
          "Mysticality Percent": 5
        },
        location: null
      },
      cinnamon: {
        modifier: {
          "Moxie Experience": 1,
          "Pickpocket Rate": 5,
          "Moxie Percent": 5
        },
        location: null
      },
      vanilla: {
        modifier: {
          "Muscle Experience": 1,
          "Weapon Damage Percent": 5,
          "Muscle Percent": 5
        },
        location: null
      }
    };
  }
});

// node_modules/libram/dist/resources/2018/SongBoom.js
var SongBoom_exports = {};
__export(SongBoom_exports, {
  dropProgress: function() {
    return dropProgress;
  },
  have: function() {
    return have28;
  },
  setSong: function() {
    return setSong;
  },
  song: function() {
    return song;
  },
  songBoomSongs: function() {
    return songBoomSongs;
  },
  songChangesLeft: function() {
    return songChangesLeft;
  }
});
function _taggedTemplateLiteral30(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have28() {
  return have(item3);
}
function song() {
  var stored = get("boomBoxSong");
  return songBoomSongs.has(stored) ? stored : null;
}
function songChangesLeft() {
  return get("_boomBoxSongsLeft");
}
function setSong(newSong) {
  if (song() !== newSong) {
    if (songChangesLeft() === 0)
      throw new Error("Out of song changes!");
    return (0, import_kolmafia41.cliExecute)("boombox ".concat(newSong ? keywords[newSong] : "none")), !0;
  } else
    return !1;
}
function dropProgress() {
  return get("_boomBoxFights");
}
var import_kolmafia41, _templateObject170, item3, keywords, songBoomSongs, init_SongBoom = __esm({
  "node_modules/libram/dist/resources/2018/SongBoom.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia41 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item3 = $item(_templateObject170 || (_templateObject170 = _taggedTemplateLiteral30(["SongBoom\u2122 BoomBox"])));
    keywords = {
      "Eye of the Giger": "spooky",
      "Food Vibrations": "food",
      "Remainin' Alive": "dr",
      "These Fists Were Made for Punchin'": "damage",
      "Total Eclipse of Your Meat": "meat"
    }, songBoomSongs = new Set(Object.keys(keywords));
  }
});

// node_modules/libram/dist/resources/2019/BeachComb.js
var BeachComb_exports = {};
__export(BeachComb_exports, {
  available: function() {
    return available2;
  },
  canComb: function() {
    return canComb;
  },
  comb: function() {
    return comb;
  },
  freeCombs: function() {
    return freeCombs;
  },
  have: function() {
    return have29;
  },
  head: function() {
    return head;
  },
  headAvailable: function() {
    return headAvailable;
  },
  headBuffs: function() {
    return headBuffs;
  },
  tideLevel: function() {
    return tideLevel;
  },
  tryHead: function() {
    return tryHead;
  }
});
function _taggedTemplateLiteral31(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have29() {
  return have(import_kolmafia42.Item.get("Beach Comb"));
}
function available2() {
  return have29() || have(import_kolmafia42.Item.get("driftwood beach comb"));
}
function tideLevel() {
  var day = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia42.gamedayToInt)(), dayOfMonth = 1 + day % 8;
  return 4 - Math.abs(4 - dayOfMonth);
}
function canComb(tile) {
  return tile.row > tideLevel();
}
function freeCombs() {
  return available2() ? clamp(11 - get("_freeBeachWalksUsed"), 0, 11) : 0;
}
function comb() {
  for (var _len = arguments.length, tiles = new Array(_len), _key = 0; _key < _len; _key++)
    tiles[_key] = arguments[_key];
  if (!(!available2() || !tiles.length)) {
    for (var _i = 0, _tiles = tiles; _i < _tiles.length; _i++) {
      var tile = _tiles[_i];
      if (canComb(tile)) {
        var minute = tile.minute, row = tile.row, column = tile.column;
        (0, import_kolmafia42.cliExecute)("beach wander ".concat(minute)), (0, import_kolmafia42.cliExecute)("beach comb ".concat(row, " ").concat(column));
      }
    }
    (0, import_kolmafia42.handlingChoice)() && (0, import_kolmafia42.runChoice)(5);
  }
}
function headAvailable(target) {
  var effect2 = target instanceof import_kolmafia42.Effect ? target : head[target], headNumber = 1 + headBuffs.indexOf(effect2);
  return (0, import_kolmafia42.getProperty)("beachHeadsUnlocked").split(",").includes(headNumber.toString()) && !(0, import_kolmafia42.getProperty)("_beachHeadsUsed").split(",").includes(headNumber.toString());
}
function tryHead(target) {
  var effect2 = target instanceof import_kolmafia42.Effect ? target : head[target];
  return !headBuffs.includes(effect2) || !headAvailable(target) ? !1 : ((0, import_kolmafia42.cliExecute)(effect2.default), have(effect2));
}
var import_kolmafia42, _templateObject171, _templateObject261, _templateObject350, _templateObject448, _templateObject530, _templateObject625, _templateObject719, _templateObject819, _templateObject917, _templateObject1017, _templateObject1115, _templateObject1215, _templateObject1313, _templateObject1412, _templateObject1512, _templateObject1612, _templateObject1712, _templateObject1812, _templateObject1912, _templateObject2012, _templateObject2117, headBuffs, head, init_BeachComb = __esm({
  "node_modules/libram/dist/resources/2019/BeachComb.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia42 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    headBuffs = [$effect(_templateObject171 || (_templateObject171 = _taggedTemplateLiteral31(["Hot-Headed"]))), $effect(_templateObject261 || (_templateObject261 = _taggedTemplateLiteral31(["Cold as Nice"]))), $effect(_templateObject350 || (_templateObject350 = _taggedTemplateLiteral31(["A Brush with Grossness"]))), $effect(_templateObject448 || (_templateObject448 = _taggedTemplateLiteral31(["Does It Have a Skull In There??"]))), $effect(_templateObject530 || (_templateObject530 = _taggedTemplateLiteral31(["Oiled, Slick"]))), $effect(_templateObject625 || (_templateObject625 = _taggedTemplateLiteral31(["Lack of Body-Building"]))), $effect(_templateObject719 || (_templateObject719 = _taggedTemplateLiteral31(["We're All Made of Starfish"]))), $effect(_templateObject819 || (_templateObject819 = _taggedTemplateLiteral31(["Pomp & Circumsands"]))), $effect(_templateObject917 || (_templateObject917 = _taggedTemplateLiteral31(["Resting Beach Face"]))), $effect(_templateObject1017 || (_templateObject1017 = _taggedTemplateLiteral31(["Do I Know You From Somewhere?"]))), $effect(_templateObject1115 || (_templateObject1115 = _taggedTemplateLiteral31(["You Learned Something Maybe!"])))], head = {
      HOT: $effect(_templateObject1215 || (_templateObject1215 = _taggedTemplateLiteral31(["Hot-Headed"]))),
      COLD: $effect(_templateObject1313 || (_templateObject1313 = _taggedTemplateLiteral31(["Cold as Nice"]))),
      STENCH: $effect(_templateObject1412 || (_templateObject1412 = _taggedTemplateLiteral31(["A Brush with Grossness"]))),
      SPOOKY: $effect(_templateObject1512 || (_templateObject1512 = _taggedTemplateLiteral31(["Does It Have a Skull In There??"]))),
      SLEAZE: $effect(_templateObject1612 || (_templateObject1612 = _taggedTemplateLiteral31(["Oiled, Slick"]))),
      MUSCLE: $effect(_templateObject1712 || (_templateObject1712 = _taggedTemplateLiteral31(["Lack of Body-Building"]))),
      MYSTICALITY: $effect(_templateObject1812 || (_templateObject1812 = _taggedTemplateLiteral31(["We're All Made of Starfish"]))),
      INITIATIVE: $effect(_templateObject1912 || (_templateObject1912 = _taggedTemplateLiteral31(["Resting Beach Face"]))),
      FAMILIAR: $effect(_templateObject2012 || (_templateObject2012 = _taggedTemplateLiteral31(["Do I Know You From Somewhere?"]))),
      EXPERIENCE: $effect(_templateObject2117 || (_templateObject2117 = _taggedTemplateLiteral31(["You Learned Something Maybe!"])))
    };
  }
});

// node_modules/libram/dist/resources/2019/CampAway.js
var CampAway_exports = {};
__export(CampAway_exports, {
  blowSmoke: function() {
    return blowSmoke;
  },
  canGaze: function() {
    return canGaze;
  },
  gaze: function() {
    return gaze;
  },
  getBuffsToday: function() {
    return getBuffsToday;
  },
  getCloudBuffsToday: function() {
    return getCloudBuffsToday;
  },
  getGazeBuff: function() {
    return getGazeBuff;
  },
  getSmileBuffsToday: function() {
    return getSmileBuffsToday;
  },
  have: function() {
    return have30;
  }
});
function _taggedTemplateLiteral32(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have30() {
  return get("getawayCampsiteUnlocked");
}
function getCloudBuffsToday() {
  return get("_campAwayCloudBuffs");
}
function getSmileBuffsToday() {
  return get("_campAwaySmileBuffs");
}
function getBuffsToday() {
  return getCloudBuffsToday() + getSmileBuffsToday();
}
function canGaze() {
  return getBuffsToday() < 4;
}
function gaze() {
  canGaze() && (0, import_kolmafia43.visitUrl)("place.php?whichplace=campaway&action=campaway_sky");
}
function getGazeBuff() {
  var daycountToCheck = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia43.daycount)(), buffSign = signIdToName((daycountToCheck + (0, import_kolmafia43.myPath)().id) % 9 + 1), effectName = [];
  return buffSign === (0, import_kolmafia43.mySign)() && effectName.push("Big"), effectName.push("Smile of the", buffSign), import_kolmafia43.Effect.get(effectName.join(" "));
}
function blowSmoke(messages) {
  var times = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, smoke = $item(_templateObject180 || (_templateObject180 = _taggedTemplateLiteral32(["campfire smoke"])));
  (0, import_kolmafia43.retrieveItem)(smoke, times);
  for (var i = 0; i < times; i++)
    withChoice(1394, "1&message=".concat(random(messages)), function() {
      (0, import_kolmafia43.use)(smoke);
    });
}
var import_kolmafia43, _templateObject180, init_CampAway = __esm({
  "node_modules/libram/dist/resources/2019/CampAway.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia43 = require("kolmafia");
    init_ascend();
    init_property();
    init_template_string();
    init_utils();
  }
});

// node_modules/libram/dist/resources/2019/Snapper.js
var Snapper_exports = {};
__export(Snapper_exports, {
  getProgress: function() {
    return getProgress;
  },
  getTrackedPhylum: function() {
    return getTrackedPhylum;
  },
  have: function() {
    return have31;
  },
  itemPhylum: function() {
    return itemPhylum;
  },
  phylumItem: function() {
    return phylumItem;
  },
  trackPhylum: function() {
    return trackPhylum;
  }
});
function _slicedToArray10(arr, i) {
  return _arrayWithHoles10(arr) || _iterableToArrayLimit10(arr, i) || _unsupportedIterableToArray22(arr, i) || _nonIterableRest10();
}
function _nonIterableRest10() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit10(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles10(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray10(arr) {
  return _arrayWithoutHoles10(arr) || _iterableToArray10(arr) || _unsupportedIterableToArray22(arr) || _nonIterableSpread10();
}
function _nonIterableSpread10() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray22(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray22(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray22(o, minLen);
  }
}
function _iterableToArray10(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles10(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray22(arr);
}
function _arrayLikeToArray22(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function have31() {
  return (0, import_kolmafia44.haveFamiliar)(familiar6);
}
function getTrackedPhylum() {
  return get("redSnapperPhylum");
}
function trackPhylum(phylum) {
  var currentFamiliar = (0, import_kolmafia44.myFamiliar)();
  try {
    (0, import_kolmafia44.useFamiliar)(familiar6), (0, import_kolmafia44.cliExecute)("snapper ".concat(phylum));
  } finally {
    (0, import_kolmafia44.useFamiliar)(currentFamiliar);
  }
}
function getProgress() {
  return get("redSnapperProgress");
}
var import_kolmafia44, familiar6, phylumItem, itemPhylum, init_Snapper = __esm({
  "node_modules/libram/dist/resources/2019/Snapper.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia44 = require("kolmafia");
    init_property();
    familiar6 = import_kolmafia44.Familiar.get("Red-Nosed Snapper"), phylumItem = /* @__PURE__ */ new Map([[import_kolmafia44.Phylum.get("beast"), import_kolmafia44.Item.get("patch of extra-warm fur")], [import_kolmafia44.Phylum.get("bug"), import_kolmafia44.Item.get("a bug's lymph")], [import_kolmafia44.Phylum.get("constellation"), import_kolmafia44.Item.get("micronova")], [import_kolmafia44.Phylum.get("construct"), import_kolmafia44.Item.get("industrial lubricant")], [import_kolmafia44.Phylum.get("demon"), import_kolmafia44.Item.get("infernal snowball")], [import_kolmafia44.Phylum.get("dude"), import_kolmafia44.Item.get("human musk")], [import_kolmafia44.Phylum.get("elemental"), import_kolmafia44.Item.get("livid energy")], [import_kolmafia44.Phylum.get("elf"), import_kolmafia44.Item.get("peppermint syrup")], [import_kolmafia44.Phylum.get("fish"), import_kolmafia44.Item.get("fish sauce")], [import_kolmafia44.Phylum.get("goblin"), import_kolmafia44.Item.get("guffin")], [import_kolmafia44.Phylum.get("hippy"), import_kolmafia44.Item.get("organic potpourri")], [import_kolmafia44.Phylum.get("hobo"), import_kolmafia44.Item.get("beggin' cologne")], [import_kolmafia44.Phylum.get("horror"), import_kolmafia44.Item.get("powdered madness")], [import_kolmafia44.Phylum.get("humanoid"), import_kolmafia44.Item.get("vial of humanoid growth hormone")], [import_kolmafia44.Phylum.get("mer-kin"), import_kolmafia44.Item.get("Mer-kin eyedrops")], [import_kolmafia44.Phylum.get("orc"), import_kolmafia44.Item.get("boot flask")], [import_kolmafia44.Phylum.get("penguin"), import_kolmafia44.Item.get("envelope full of Meat")], [import_kolmafia44.Phylum.get("pirate"), import_kolmafia44.Item.get("Shantix\u2122")], [import_kolmafia44.Phylum.get("plant"), import_kolmafia44.Item.get("goodberry")], [import_kolmafia44.Phylum.get("slime"), import_kolmafia44.Item.get("extra-strength goo")], [import_kolmafia44.Phylum.get("undead"), import_kolmafia44.Item.get("unfinished pleasure")], [import_kolmafia44.Phylum.get("weird"), import_kolmafia44.Item.get("non-Euclidean angle")]]), itemPhylum = new Map(_toConsumableArray10(phylumItem).map(function(_ref) {
      var _ref2 = _slicedToArray10(_ref, 2), phylum = _ref2[0], item10 = _ref2[1];
      return [item10, phylum];
    }));
  }
});

// node_modules/libram/dist/resources/2020/Cartography.js
var Cartography_exports = {};
__export(Cartography_exports, {
  have: function() {
    return have32;
  },
  mapMonster: function() {
    return mapMonster;
  }
});
function _taggedTemplateLiteral33(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have32() {
  return have(passive);
}
function mapMonster(location, monster) {
  if (!have32() || get("_monstersMapped") >= 3 || !(0, import_kolmafia45.canAdventure)(location) || ((0, import_kolmafia45.useSkill)($skill(_templateObject270 || (_templateObject270 = _taggedTemplateLiteral33(["Map the Monsters"])))), !get("mappingMonsters")))
    return !1;
  for (var turns = (0, import_kolmafia45.myTurncount)(); (0, import_kolmafia45.currentRound)() < 1; ) {
    if ((0, import_kolmafia45.myTurncount)() > turns)
      throw new Error("Map the Monsters unsuccessful?");
    if ((0, import_kolmafia45.visitUrl)((0, import_kolmafia45.toUrl)(location)), (0, import_kolmafia45.handlingChoice)() && (0, import_kolmafia45.lastChoice)() === 1435)
      return (0, import_kolmafia45.runChoice)(1, "heyscriptswhatsupwinkwink=".concat(monster.id)), !0;
    (0, import_kolmafia45.runChoice)(-1, !1);
  }
  return !1;
}
var import_kolmafia45, _templateObject181, _templateObject270, passive, init_Cartography = __esm({
  "node_modules/libram/dist/resources/2020/Cartography.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia45 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    passive = $skill(_templateObject181 || (_templateObject181 = _taggedTemplateLiteral33(["Comprehensive Cartography"])));
  }
});

// node_modules/libram/dist/resources/2020/Guzzlr.js
var Guzzlr_exports = {};
__export(Guzzlr_exports, {
  Cocktails: function() {
    return Cocktails;
  },
  abandon: function() {
    return abandon;
  },
  acceptBronze: function() {
    return acceptBronze;
  },
  acceptGold: function() {
    return acceptGold;
  },
  acceptPlatinum: function() {
    return acceptPlatinum;
  },
  canAbandon: function() {
    return canAbandon;
  },
  canGold: function() {
    return canGold;
  },
  canPlatinum: function() {
    return canPlatinum;
  },
  expectedReward: function() {
    return expectedReward;
  },
  getBooze: function() {
    return getBooze;
  },
  getBronze: function() {
    return getBronze;
  },
  getCheapestPlatinumCocktail: function() {
    return getCheapestPlatinumCocktail;
  },
  getGold: function() {
    return getGold;
  },
  getGoldToday: function() {
    return getGoldToday;
  },
  getLocation: function() {
    return getLocation2;
  },
  getPlatinum: function() {
    return getPlatinum;
  },
  getPlatinumToday: function() {
    return getPlatinumToday;
  },
  getTier: function() {
    return getTier;
  },
  have: function() {
    return have33;
  },
  haveBooze: function() {
    return haveBooze;
  },
  haveFullBronzeBonus: function() {
    return haveFullBronzeBonus;
  },
  haveFullGoldBonus: function() {
    return haveFullGoldBonus;
  },
  haveFullPlatinumBonus: function() {
    return haveFullPlatinumBonus;
  },
  havePlatinumBooze: function() {
    return havePlatinumBooze;
  },
  ingredientToPlatinumCocktail: function() {
    return ingredientToPlatinumCocktail;
  },
  isQuestActive: function() {
    return isQuestActive;
  },
  platinumCocktailToIngredient: function() {
    return platinumCocktailToIngredient;
  },
  turnsLeftOnQuest: function() {
    return turnsLeftOnQuest;
  }
});
function _slicedToArray11(arr, i) {
  return _arrayWithHoles11(arr) || _iterableToArrayLimit11(arr, i) || _unsupportedIterableToArray23(arr, i) || _nonIterableRest11();
}
function _nonIterableRest11() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit11(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles11(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray11(arr) {
  return _arrayWithoutHoles11(arr) || _iterableToArray11(arr) || _unsupportedIterableToArray23(arr) || _nonIterableSpread11();
}
function _nonIterableSpread11() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray23(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray23(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray23(o, minLen);
  }
}
function _iterableToArray11(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles11(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray23(arr);
}
function _arrayLikeToArray23(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral34(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have33() {
  return have(item4);
}
function useTabletWithChoice(option) {
  withChoice(1412, option, function() {
    return (0, import_kolmafia46.use)(1, item4);
  });
}
function isQuestActive() {
  return get("questGuzzlr") !== "unstarted";
}
function getPlatinum() {
  return get("guzzlrPlatinumDeliveries");
}
function getPlatinumToday() {
  return get("_guzzlrPlatinumDeliveries");
}
function canPlatinum() {
  return !isQuestActive() && getGold() >= 5 && getPlatinumToday() < 1;
}
function haveFullPlatinumBonus() {
  return getPlatinum() >= 30;
}
function acceptPlatinum() {
  return canPlatinum() ? (useTabletWithChoice(4), !0) : !1;
}
function getGold() {
  return get("guzzlrGoldDeliveries");
}
function getGoldToday() {
  return get("_guzzlrGoldDeliveries");
}
function canGold() {
  return !isQuestActive() && getBronze() >= 5 && getGoldToday() < 3;
}
function haveFullGoldBonus() {
  return getGold() >= 150;
}
function acceptGold() {
  return canGold() ? (useTabletWithChoice(3), !0) : !1;
}
function getBronze() {
  return get("guzzlrBronzeDeliveries");
}
function haveFullBronzeBonus() {
  return getBronze() >= 196;
}
function acceptBronze() {
  return isQuestActive() ? !1 : (useTabletWithChoice(2), !0);
}
function canAbandon() {
  return isQuestActive() && !get("_guzzlrQuestAbandoned");
}
function abandon() {
  return canAbandon() ? ((0, import_kolmafia46.visitUrl)("inventory.php?tap=guzzlr", !1), (0, import_kolmafia46.runChoice)(1), (0, import_kolmafia46.runChoice)(5), !0) : !1;
}
function getLocation2() {
  return get("guzzlrQuestLocation");
}
function getTier() {
  var tier = get("guzzlrQuestTier");
  return tier === "" ? null : tier;
}
function getBooze() {
  var booze = get("guzzlrQuestBooze");
  return booze === "" ? null : import_kolmafia46.Item.get(booze);
}
function havePlatinumBooze() {
  return Cocktails.some(function(cock) {
    return (0, import_kolmafia46.itemAmount)(cock) > 0;
  });
}
function haveBooze() {
  var booze = getBooze();
  switch (booze) {
    case null:
      return !1;
    case $item(_templateObject351 || (_templateObject351 = _taggedTemplateLiteral34(["Guzzlr cocktail set"]))):
      return havePlatinumBooze();
    default:
      return (0, import_kolmafia46.itemAmount)(booze) > 0;
  }
}
function getCheapestPlatinumCocktail() {
  var freeCraft = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
  return freeCraft ? maxBy(Array.from(ingredientToPlatinumCocktail), function(ingredientAndCocktail) {
    return Math.min.apply(Math, _toConsumableArray11(ingredientAndCocktail.map(function(item10) {
      return (0, import_kolmafia46.mallPrice)(item10);
    })));
  }, !0)[1] : maxBy(Array.from(ingredientToPlatinumCocktail), function(_ref) {
    var _ref2 = _slicedToArray11(_ref, 2), cocktail = _ref2[1];
    return (0, import_kolmafia46.mallPrice)(cocktail);
  })[1];
}
function turnsLeftOnQuest() {
  var useShoes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, progressPerTurn = useShoes ? Math.floor((10 - get("_guzzlrDeliveries")) * 1.5) : 10 - get("_guzzlrDeliveries");
  return Math.ceil((100 - get("guzzlrDeliveryProgress")) / progressPerTurn);
}
function expectedReward() {
  var usePants = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
  switch (getTier()) {
    case "platinum":
      return 22.5 + (usePants ? 5 : 0);
    case "gold":
      return 6 + (usePants ? 3 : 0);
    case "bronze":
      return 3 + (usePants ? 3 : 0);
    default:
      return 0;
  }
}
var import_kolmafia46, _templateObject190, _templateObject271, _templateObject351, _templateObject449, _templateObject531, _templateObject626, _templateObject720, _templateObject820, _templateObject918, _templateObject1018, _templateObject1116, _templateObject1216, _templateObject1314, item4, Cocktails, ingredientToPlatinumCocktail, platinumCocktailToIngredient, init_Guzzlr = __esm({
  "node_modules/libram/dist/resources/2020/Guzzlr.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia46 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item4 = $item(_templateObject190 || (_templateObject190 = _taggedTemplateLiteral34(["Guzzlr tablet"])));
    Cocktails = $items(_templateObject271 || (_templateObject271 = _taggedTemplateLiteral34(["Buttery Boy, Steamboat, Ghiaccio Colada, Nog-on-the-Cob, Sourfinger"])));
    ingredientToPlatinumCocktail = /* @__PURE__ */ new Map([[$item(_templateObject449 || (_templateObject449 = _taggedTemplateLiteral34(["miniature boiler"]))), $item(_templateObject531 || (_templateObject531 = _taggedTemplateLiteral34(["Steamboat"])))], [$item(_templateObject626 || (_templateObject626 = _taggedTemplateLiteral34(["cold wad"]))), $item(_templateObject720 || (_templateObject720 = _taggedTemplateLiteral34(["Ghiaccio Colada"])))], [$item(_templateObject820 || (_templateObject820 = _taggedTemplateLiteral34(["robin's egg"]))), $item(_templateObject918 || (_templateObject918 = _taggedTemplateLiteral34(["Nog-on-the-Cob"])))], [$item(_templateObject1018 || (_templateObject1018 = _taggedTemplateLiteral34(["mangled finger"]))), $item(_templateObject1116 || (_templateObject1116 = _taggedTemplateLiteral34(["Sourfinger"])))], [$item(_templateObject1216 || (_templateObject1216 = _taggedTemplateLiteral34(["Dish of Clarified Butter"]))), $item(_templateObject1314 || (_templateObject1314 = _taggedTemplateLiteral34(["Buttery Boy"])))]]), platinumCocktailToIngredient = invertMap(ingredientToPlatinumCocktail);
  }
});

// node_modules/libram/dist/resources/2020/RetroCape.js
var RetroCape_exports = {};
__export(RetroCape_exports, {
  currentHero: function() {
    return currentHero;
  },
  currentMode: function() {
    return currentMode;
  },
  getModifier: function() {
    return getModifier2;
  },
  have: function() {
    return have34;
  },
  set: function() {
    return set2;
  },
  tuneToSkill: function() {
    return tuneToSkill;
  }
});
function _toConsumableArray12(arr) {
  return _arrayWithoutHoles12(arr) || _iterableToArray12(arr) || _unsupportedIterableToArray24(arr) || _nonIterableSpread12();
}
function _nonIterableSpread12() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray24(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray24(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray24(o, minLen);
  }
}
function _iterableToArray12(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles12(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray24(arr);
}
function _arrayLikeToArray24(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function ownKeys6(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread6(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys6(Object(source), !0).forEach(function(key) {
      _defineProperty14(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys6(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty14(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _taggedTemplateLiteral35(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have34() {
  return have(item5);
}
function set2(hero, mode) {
  return have34() ? currentHero() === hero && currentMode() === mode ? !0 : ((0, import_kolmafia47.cliExecute)("retrocape ".concat(hero, " ").concat(mode)), currentHero() === hero && currentMode() === mode) : !1;
}
function getModifier2() {
  var _modeMap$get, hero = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentHero(), mode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : currentMode();
  return _objectSpread6(_objectSpread6({}, Heroes[hero]), (_modeMap$get = modeMap.get([hero, mode])) !== null && _modeMap$get !== void 0 ? _modeMap$get : {});
}
function tuneToSkill(skill) {
  var setting = skills.get(skill);
  return !setting || !have34() ? !1 : (set2.apply(void 0, _toConsumableArray12(setting)), [currentHero(), currentMode()].every(function(element, index) {
    return element === setting[index];
  }));
}
var import_kolmafia47, _templateObject191, _templateObject280, _templateObject359, _templateObject450, _templateObject536, _templateObject627, _templateObject721, _templateObject821, _templateObject919, _templateObject1019, _templateObject1117, _templateObject1217, _templateObject1315, item5, Heroes, currentHero, currentMode, modeMap, skills, init_RetroCape = __esm({
  "node_modules/libram/dist/resources/2020/RetroCape.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia47 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    item5 = $item(_templateObject191 || (_templateObject191 = _taggedTemplateLiteral35(["unwrapped knock-off retro superhero cape"])));
    Heroes = {
      vampire: {
        "Muscle Percent": 30,
        "Maximum HP": 50
      },
      heck: {
        "Mysticality Percent": 30,
        "Maximum MP": 50
      },
      robot: {
        "Moxie Percent": 30,
        "Maximum HP": 25,
        "Maximum MP": 25
      }
    }, currentHero = function() {
      return get("retroCapeSuperhero");
    }, currentMode = function() {
      return get("retroCapeWashingInstructions");
    }, modeMap = /* @__PURE__ */ new Map([[["vampire", "hold"], {
      "Hot Resistance": 3,
      "Cold Resistance": 3,
      "Stench Resistance": 3,
      "Spooky Resistance": 3,
      "Sleaze Resistance": 3
    }], [["vampire", "thrill"], {
      "Muscle Experience": 3
    }], [["vampire", "kiss"], {
      Skill: $skill(_templateObject280 || (_templateObject280 = _taggedTemplateLiteral35(["Smooch of the Daywalker"])))
    }], [["vampire", "kill"], {
      Skill: $skill(_templateObject359 || (_templateObject359 = _taggedTemplateLiteral35(["Slay the Dead"])))
    }], [["heck", "thrill"], {
      "Mysticality Experience": 3
    }], [["heck", "kiss"], {
      Skill: $skill(_templateObject450 || (_templateObject450 = _taggedTemplateLiteral35(["Unleash the Devil's Kiss"])))
    }], [["robot", "hold"], {
      Skill: $skill(_templateObject536 || (_templateObject536 = _taggedTemplateLiteral35(["Deploy Robo-Handcuffs"])))
    }], [["robot", "thrill"], {
      "Moxie Experience": 3
    }], [["robot", "kiss"], {
      Skill: $skill(_templateObject627 || (_templateObject627 = _taggedTemplateLiteral35(["Blow a Robo-Kiss"])))
    }], [["robot", "kill"], {
      Skill: $skill(_templateObject721 || (_templateObject721 = _taggedTemplateLiteral35(["Precision Shot"])))
    }]]);
    skills = /* @__PURE__ */ new Map([[$skill(_templateObject821 || (_templateObject821 = _taggedTemplateLiteral35(["Smooch of the Daywalker"]))), ["vampire", "kiss"]], [$skill(_templateObject919 || (_templateObject919 = _taggedTemplateLiteral35(["Slay the Dead"]))), ["vampire", "kill"]], [$skill(_templateObject1019 || (_templateObject1019 = _taggedTemplateLiteral35(["Unleash the Devil's Kiss"]))), ["heck", "kiss"]], [$skill(_templateObject1117 || (_templateObject1117 = _taggedTemplateLiteral35(["Deploy Robo-Handcuffs"]))), ["robot", "hold"]], [$skill(_templateObject1217 || (_templateObject1217 = _taggedTemplateLiteral35(["Blow a Robo-Kiss"]))), ["robot", "kiss"]], [$skill(_templateObject1315 || (_templateObject1315 = _taggedTemplateLiteral35(["Precision Shot"]))), ["robot", "kill"]]]);
  }
});

// node_modules/libram/dist/resources/2021/CrystalBall.js
var CrystalBall_exports = {};
__export(CrystalBall_exports, {
  have: function() {
    return have35;
  },
  orb: function() {
    return orb;
  },
  ponder: function() {
    return ponder;
  }
});
function _slicedToArray12(arr, i) {
  return _arrayWithHoles12(arr) || _iterableToArrayLimit12(arr, i) || _unsupportedIterableToArray25(arr, i) || _nonIterableRest12();
}
function _nonIterableRest12() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray25(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray25(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray25(o, minLen);
  }
}
function _arrayLikeToArray25(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit12(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles12(arr) {
  if (Array.isArray(arr))
    return arr;
}
function have35() {
  return (0, import_kolmafia48.availableAmount)(orb) > 0;
}
function ponder() {
  return have35() ? (canVisitUrl() ? (logger_default.debug("Now pondering Crystal Ball."), (0, import_kolmafia48.visitUrl)("inventory.php?ponder=1", !1)) : logger_default.debug("Failed to ponder Crystall Ball."), new Map(parsedProp())) : /* @__PURE__ */ new Map();
}
var import_kolmafia48, orb, parsedProp, init_CrystalBall = __esm({
  "node_modules/libram/dist/resources/2021/CrystalBall.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia48 = require("kolmafia");
    init_dist();
    init_lib();
    init_property();
    orb = import_kolmafia48.Item.get("miniature crystal ball");
    parsedProp = function() {
      return get("crystalBallPredictions").split("|").map(function(element) {
        return element.split(":");
      }).map(function(_ref) {
        var _ref2 = _slicedToArray12(_ref, 3), location = _ref2[1], monster = _ref2[2];
        return [(0, import_kolmafia48.toLocation)(location), (0, import_kolmafia48.toMonster)(monster)];
      });
    };
  }
});

// node_modules/libram/dist/resources/2021/DaylightShavings.js
var DaylightShavings_exports = {};
__export(DaylightShavings_exports, {
  buffAvailable: function() {
    return buffAvailable;
  },
  buffCycle: function() {
    return buffCycle;
  },
  buffs: function() {
    return buffs;
  },
  buffsUntil: function() {
    return buffsUntil;
  },
  hasBuff: function() {
    return hasBuff;
  },
  have: function() {
    return have36;
  },
  nextBuff: function() {
    return nextBuff;
  }
});
function _taggedTemplateLiteral36(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have36() {
  return have(helmet);
}
function hasBuff() {
  return buffs.some(function(buff) {
    return have(buff);
  });
}
function buffAvailable() {
  return !buffs.some(function(buff) {
    return have(buff, 2);
  });
}
function buffCycle() {
  var playerclass = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, import_kolmafia49.myClass)();
  if (playerclass.id <= 0)
    return [];
  for (var returnValue = [], id = playerclass.id, seed = id > 6 ? id % 6 + 1 : id, i = 1; i < 12; i++) {
    var index = i * seed % 11;
    returnValue.push(buffs[index]);
  }
  return returnValue;
}
function nextBuff() {
  var currentBuff = (0, import_kolmafia49.toEffect)(get("lastBeardBuff").toFixed(0)), cycle2 = buffCycle(), index = cycle2.indexOf(currentBuff), newIndex = (1 + index) % 11;
  return cycle2[newIndex];
}
function buffsUntil(buff) {
  if (!buffs.includes(buff))
    return null;
  var currentIndex = buffs.indexOf(nextBuff()) - 1, newIndex = buffs.indexOf(buff), diff = (newIndex - currentIndex) % 11;
  return diff === 0 ? 11 : diff;
}
var import_kolmafia49, _templateObject200, _templateObject281, helmet, buffs, init_DaylightShavings = __esm({
  "node_modules/libram/dist/resources/2021/DaylightShavings.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia49 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    helmet = $item(_templateObject200 || (_templateObject200 = _taggedTemplateLiteral36(["Daylight Shavings Helmet"])));
    buffs = $effects(_templateObject281 || (_templateObject281 = _taggedTemplateLiteral36(["Spectacle Moustache, Toiletbrush Moustache, Barbell Moustache, Grizzly Beard, Surrealist's Moustache, Musician's Musician's Moustache, Gull-Wing Moustache, Space Warlord's Beard, Pointy Wizard Beard, Cowboy Stache, Friendly Chops"])));
  }
});

// node_modules/libram/dist/resources/2022/AutumnAton.js
var AutumnAton_exports = {};
__export(AutumnAton_exports, {
  available: function() {
    return available3;
  },
  availableLocations: function() {
    return availableLocations;
  },
  currentUpgrades: function() {
    return currentUpgrades;
  },
  currentlyIn: function() {
    return currentlyIn;
  },
  getUniques: function() {
    return getUniques;
  },
  have: function() {
    return have37;
  },
  legs: function() {
    return legs;
  },
  possibleUpgrades: function() {
    return possibleUpgrades;
  },
  seasonalItems: function() {
    return seasonalItems;
  },
  sendTo: function() {
    return sendTo;
  },
  turnsForQuest: function() {
    return turnsForQuest;
  },
  turnsLeft: function() {
    return turnsLeft;
  },
  upgrade: function() {
    return upgrade;
  },
  visualAcuity: function() {
    return visualAcuity;
  },
  zoneItems: function() {
    return zoneItems;
  }
});
function _taggedTemplateLiteral37(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function available3() {
  return (0, import_kolmafia50.availableAmount)(item6) > 0;
}
function have37() {
  return get("hasAutumnaton") || available3();
}
function checkLocations(html) {
  return (0, import_kolmafia50.xpath)(html, '//select[@name="heythereprogrammer"]//option[position()>1]/text()').map(function(name) {
    return (0, import_kolmafia50.toLocation)(name);
  });
}
function currentlyIn() {
  return get("autumnatonQuestLocation");
}
function sendTo(target) {
  var upgrade2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  if (!available3())
    return null;
  var pageHtml = directlyUse(item6);
  upgrade2 && (0, import_kolmafia50.availableChoiceOptions)()[1] && (0, import_kolmafia50.runChoice)(1);
  var locationsAvailable = checkLocations(pageHtml), location = target instanceof import_kolmafia50.Location ? target : Array.isArray(target) ? target.find(function(l) {
    return locationsAvailable.includes(l);
  }) : target(locationsAvailable);
  return !location || !locationsAvailable.includes(location) ? null : ((0, import_kolmafia50.handlingChoice)() || directlyUse(item6), (0, import_kolmafia50.runChoice)(2, "heythereprogrammer=".concat(location.id)), (0, import_kolmafia50.handlingChoice)() && (0, import_kolmafia50.visitUrl)("main.php"), location);
}
function upgrade() {
  directlyUse(item6);
  var canUpgrade = (0, import_kolmafia50.availableChoiceOptions)()[1] !== void 0;
  return canUpgrade && (0, import_kolmafia50.runChoice)(1), (0, import_kolmafia50.visitUrl)("main.php"), canUpgrade;
}
function availableLocations() {
  if (!available3())
    return [];
  var pageHtml = directlyUse(item6);
  return (0, import_kolmafia50.visitUrl)("main.php"), checkLocations(pageHtml);
}
function currentUpgrades() {
  return get("autumnatonUpgrades").split(",");
}
function turnsLeft() {
  return get("autumnatonQuestTurn") - (0, import_kolmafia50.totalTurnsPlayed)();
}
function legs() {
  return currentUpgrades().filter(function(u) {
    return u.includes("leg");
  }).length;
}
function turnsForQuest() {
  return 11 * Math.max(1, get("_autumnatonQuests") - legs());
}
function visualAcuity() {
  var visualUpgrades = ["periscope", "radardish"];
  return 1 + currentUpgrades().filter(function(u) {
    return visualUpgrades.includes(u);
  }).length;
}
function zoneItems() {
  return 3 + currentUpgrades().filter(function(u) {
    return u.includes("arm");
  }).length;
}
function seasonalItems() {
  return currentUpgrades().includes("cowcatcher") ? 2 : 1;
}
function getUniques(location) {
  var env = location.environment, difficulty = location.difficultyLevel;
  if (arrayContains(env, ["outdoor", "indoor", "underground"]) && arrayContains(difficulty, difficulties)) {
    var _UNIQUES$env$difficul = UNIQUES[env][difficulty], index = _UNIQUES$env$difficul.index, _item = _UNIQUES$env$difficul.item;
    return {
      upgrade: possibleUpgrades[index],
      item: _item
    };
  }
  return null;
}
var import_kolmafia50, _templateObject201, _templateObject290, _templateObject360, _templateObject451, _templateObject537, _templateObject628, _templateObject724, _templateObject824, _templateObject920, item6, possibleUpgrades, difficulties, UNIQUES, init_AutumnAton = __esm({
  "node_modules/libram/dist/resources/2022/AutumnAton.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia50 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item6 = import_kolmafia50.Item.get("autumn-aton");
    possibleUpgrades = ["leftarm1", "leftleg1", "rightarm1", "rightleg1", "base_blackhat", "cowcatcher", "periscope", "radardish", "dualexhaust"];
    difficulties = ["low", "mid", "high"], UNIQUES = {
      outdoor: {
        low: {
          index: 4,
          item: $item(_templateObject201 || (_templateObject201 = _taggedTemplateLiteral37(["autumn leaf"])))
        },
        mid: {
          index: 2,
          item: $item(_templateObject290 || (_templateObject290 = _taggedTemplateLiteral37(["autumn debris shield"])))
        },
        high: {
          index: 6,
          item: $item(_templateObject360 || (_templateObject360 = _taggedTemplateLiteral37(["autumn leaf pendant"])))
        }
      },
      indoor: {
        low: {
          index: 0,
          item: $item(_templateObject451 || (_templateObject451 = _taggedTemplateLiteral37(["AutumnFest ale"])))
        },
        mid: {
          index: 3,
          item: $item(_templateObject537 || (_templateObject537 = _taggedTemplateLiteral37(["autumn-spice donut"])))
        },
        high: {
          index: 7,
          item: $item(_templateObject628 || (_templateObject628 = _taggedTemplateLiteral37(["autumn breeze"])))
        }
      },
      underground: {
        low: {
          index: 1,
          item: $item(_templateObject724 || (_templateObject724 = _taggedTemplateLiteral37(["autumn sweater-weather sweater"])))
        },
        mid: {
          index: 5,
          item: $item(_templateObject824 || (_templateObject824 = _taggedTemplateLiteral37(["autumn dollar"])))
        },
        high: {
          index: 8,
          item: $item(_templateObject920 || (_templateObject920 = _taggedTemplateLiteral37(["autumn years wisdom"])))
        }
      }
    };
  }
});

// node_modules/libram/dist/resources/2022/CombatLoversLocket.js
var CombatLoversLocket_exports = {};
__export(CombatLoversLocket_exports, {
  availableLocketMonsters: function() {
    return availableLocketMonsters;
  },
  findMonster: function() {
    return findMonster;
  },
  have: function() {
    return have38;
  },
  monstersReminisced: function() {
    return monstersReminisced;
  },
  reminisce: function() {
    return reminisce;
  },
  reminiscesLeft: function() {
    return reminiscesLeft;
  },
  unlockedLocketMonsters: function() {
    return unlockedLocketMonsters;
  }
});
function _slicedToArray13(arr, i) {
  return _arrayWithHoles13(arr) || _iterableToArrayLimit13(arr, i) || _unsupportedIterableToArray26(arr, i) || _nonIterableRest13();
}
function _nonIterableRest13() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray26(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray26(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray26(o, minLen);
  }
}
function _arrayLikeToArray26(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit13(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles13(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral38(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have38() {
  return have(locket);
}
function availableLocketMonsters() {
  return reminiscesLeft() === 0 ? [] : Object.entries((0, import_kolmafia51.getLocketMonsters)()).filter(function(_ref) {
    var _ref2 = _slicedToArray13(_ref, 2), unused = _ref2[1];
    return unused;
  }).map(function(_ref3) {
    var _ref4 = _slicedToArray13(_ref3, 1), name = _ref4[0];
    return (0, import_kolmafia51.toMonster)(name);
  });
}
function unlockedLocketMonsters() {
  return Object.entries((0, import_kolmafia51.getLocketMonsters)()).map(function(_ref5) {
    var _ref6 = _slicedToArray13(_ref5, 1), name = _ref6[0];
    return (0, import_kolmafia51.toMonster)(name);
  });
}
function parseLocketProperty() {
  return get("_locketMonstersFought").split(",").filter(function(id) {
    return id.trim().length > 0;
  });
}
function reminiscesLeft() {
  return have38() ? clamp(3 - parseLocketProperty().length, 0, 3) : 0;
}
function monstersReminisced() {
  return parseLocketProperty().map(function(id) {
    return (0, import_kolmafia51.toMonster)(id);
  });
}
function reminisce(monster) {
  return !have38() || reminiscesLeft() === 0 || !(0, import_kolmafia51.getLocketMonsters)()[monster.name] ? !1 : ((0, import_kolmafia51.cliExecute)("reminisce ".concat(monster)), (0, import_kolmafia51.runCombat)(), monstersReminisced().includes(monster));
}
function findMonster(criteria) {
  var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function() {
    return 1;
  };
  if (!have38() || reminiscesLeft() === 0)
    return null;
  var options = availableLocketMonsters().filter(criteria);
  return options.length ? options.reduce(function(a, b) {
    return value(a) > value(b) ? a : b;
  }) : null;
}
var import_kolmafia51, _templateObject291, locket, init_CombatLoversLocket = __esm({
  "node_modules/libram/dist/resources/2022/CombatLoversLocket.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia51 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    locket = $item(_templateObject291 || (_templateObject291 = _taggedTemplateLiteral38(["combat lover's locket"])));
  }
});

// node_modules/libram/dist/resources/2022/GreyGoose.js
var GreyGoose_exports = {};
__export(GreyGoose_exports, {
  currentDrones: function() {
    return currentDrones;
  },
  currentExperience: function() {
    return currentExperience;
  },
  currentWeight: function() {
    return currentWeight;
  },
  expectedDrones: function() {
    return expectedDrones;
  },
  expectedExperience: function() {
    return expectedExperience;
  },
  expectedMeat: function() {
    return expectedMeat;
  },
  fightsUntil: function() {
    return fightsUntil;
  },
  hasMeatified: function() {
    return hasMeatified;
  },
  have: function() {
    return have39;
  }
});
function _taggedTemplateLiteral39(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have39() {
  return have(goose);
}
function currentExperience() {
  var postAscensionBaseExperience = have($familiar(_templateObject2100 || (_templateObject2100 = _taggedTemplateLiteral39(["Shorter-Order Cook"])))) && !get("gooseReprocessed") ? 81 + (have($item(_templateObject361 || (_templateObject361 = _taggedTemplateLiteral39(["blue plate"])))) ? 19 : 0) : 0;
  return goose.experience || postAscensionBaseExperience;
}
function currentWeight() {
  return Math.min(Math.floor(Math.sqrt(currentExperience())), 20);
}
function expectedDrones() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.max(0, weight - 5);
}
function expectedExperience() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.pow(Math.max(weight - 5, 0), (0, import_kolmafia52.myClass)().id === 27 ? 2 : 3);
}
function expectedMeat() {
  var weight = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : currentWeight();
  return Math.pow(Math.max(weight - 5, 0), 4);
}
function hasMeatified() {
  return get("_meatifyMatterUsed");
}
function fightsUntil(target) {
  var bonusExperience = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : get2("Familiar Experience"), diff = Math.pow(target, 2) - currentExperience();
  return diff <= 0 ? 0 : Math.ceil(diff / (1 + bonusExperience + (have($skill(_templateObject458 || (_templateObject458 = _taggedTemplateLiteral39(["Testudinal Teachings"])))) ? 1 / 6 : 0)));
}
function currentDrones() {
  return get("gooseDronesRemaining");
}
var import_kolmafia52, _templateObject299, _templateObject2100, _templateObject361, _templateObject458, goose, init_GreyGoose = __esm({
  "node_modules/libram/dist/resources/2022/GreyGoose.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia52 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_template_string();
    goose = $familiar(_templateObject299 || (_templateObject299 = _taggedTemplateLiteral39(["Grey Goose"])));
  }
});

// node_modules/libram/dist/resources/2022/JuneCleaver.js
var JuneCleaver_exports = {};
__export(JuneCleaver_exports, {
  choices: function() {
    return choices;
  },
  choicesAvailable: function() {
    return choicesAvailable;
  },
  cleaver: function() {
    return cleaver;
  },
  damage: function() {
    return damage;
  },
  getInterval: function() {
    return getInterval;
  },
  getSkippedInterval: function() {
    return getSkippedInterval;
  },
  have: function() {
    return have40;
  },
  queue: function() {
    return queue;
  },
  skipsRemaining: function() {
    return skipsRemaining;
  }
});
function have40() {
  return (0, import_kolmafia53.availableAmount)(cleaver) > 0;
}
function getInterval() {
  var _encounters, encounters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_juneCleaverEncounters");
  return (_encounters = [1, 6, 10, 12, 15, 20][encounters]) !== null && _encounters !== void 0 ? _encounters : 30;
}
function getSkippedInterval() {
  var _encounters2, encounters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_juneCleaverEncounters");
  return (_encounters2 = [1, 2, 3, 3, 4, 5][encounters]) !== null && _encounters2 !== void 0 ? _encounters2 : 8;
}
function damage(element) {
  return get("_juneCleaver".concat(element));
}
function skipsRemaining() {
  return 5 - get("_juneCleaverSkips");
}
function queue() {
  return get("juneCleaverQueue").split(",").filter(function(x) {
    return x.trim().length > 0;
  }).map(function(x) {
    return parseInt(x);
  });
}
function choicesAvailable() {
  var currentQueue = queue();
  return choices.filter(function(choice) {
    return !currentQueue.includes(choice);
  });
}
var import_kolmafia53, cleaver, choices, init_JuneCleaver = __esm({
  "node_modules/libram/dist/resources/2022/JuneCleaver.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia53 = require("kolmafia");
    init_property();
    cleaver = (0, import_kolmafia53.toItem)("June cleaver");
    choices = [1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475];
  }
});

// node_modules/libram/dist/resources/2022/TrainSet.js
var TrainSet_exports = {};
__export(TrainSet_exports, {
  Station: function() {
    return Station;
  },
  canConfigure: function() {
    return canConfigure;
  },
  cycle: function() {
    return cycle;
  },
  doubledEffect: function() {
    return doubledEffect;
  },
  effect: function() {
    return effect;
  },
  have: function() {
    return have41;
  },
  installed: function() {
    return installed4;
  },
  next: function() {
    return next;
  },
  nextConfigurable: function() {
    return nextConfigurable;
  },
  setConfiguration: function() {
    return setConfiguration;
  }
});
function _taggedTemplateLiteral40(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function installed4() {
  return (0, import_kolmafia54.getWorkshed)() === item7;
}
function have41() {
  return installed4() || have(item7);
}
function effect(station) {
  var _trainsetEffects$get;
  return (_trainsetEffects$get = trainsetEffects.get(station)) !== null && _trainsetEffects$get !== void 0 ? _trainsetEffects$get : null;
}
function doubledEffect(station) {
  var _trainsetEffectsDoubl;
  return (_trainsetEffectsDoubl = trainsetEffectsDoubled.get(station)) !== null && _trainsetEffectsDoubl !== void 0 ? _trainsetEffectsDoubl : null;
}
function cycle() {
  return get("trainsetConfiguration").split(",");
}
function nextConfigurable() {
  return clamp(get("lastTrainsetConfiguration") + 40 - get("trainsetPosition"), 0, 40);
}
function canConfigure() {
  return installed4() && !nextConfigurable();
}
function stationToInt(station) {
  return pieces2.indexOf(station);
}
function setConfiguration(configuration) {
  if (!canConfigure())
    return !1;
  (0, import_kolmafia54.visitUrl)("campground.php?action=workshed"), (0, import_kolmafia54.runChoice)(1, "forceoption=0".concat(configuration.map(function(station, index) {
    return "&slot[".concat(index, "]=").concat(stationToInt(station));
  }).join(""))), (0, import_kolmafia54.visitUrl)("main.php");
  var currentConfiguration = cycle();
  return configuration.every(function(station, index) {
    return station === currentConfiguration[index];
  });
}
function next() {
  return cycle()[get("trainsetPosition") % 8];
}
var import_kolmafia54, _templateObject300, item7, Station, trainsetEffects, trainsetEffectsDoubled, pieces2, init_TrainSet = __esm({
  "node_modules/libram/dist/resources/2022/TrainSet.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia54 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item7 = $item(_templateObject300 || (_templateObject300 = _taggedTemplateLiteral40(["model train set"])));
    (function(Station2) {
      Station2.UNKNOWN = "", Station2.EMPTY = "empty", Station2.GAIN_MEAT = "meat_mine", Station2.TOWER_FIZZY = "tower_fizzy", Station2.VIEWING_PLATFORM = "viewing_platform", Station2.TOWER_FROZEN = "tower_frozen", Station2.SPOOKY_GRAVEYARD = "spooky_graveyard", Station2.LOGGING_MILL = "logging_mill", Station2.CANDY_FACTORY = "candy_factory", Station2.COAL_HOPPER = "coal_hopper", Station2.TOWER_SEWAGE = "tower_sewage", Station2.OIL_REFINERY = "oil_refinery", Station2.OIL_BRIDGE = "oil_bridge", Station2.WATER_BRIDGE = "water_bridge", Station2.GROIN_SILO = "groin_silo", Station2.GRAIN_SILO = "grain_silo", Station2.BRAIN_SILO = "brain_silo", Station2.BRAWN_SILO = "brawn_silo", Station2.PRAWN_SILO = "prawn_silo", Station2.TRACKSIDE_DINER = "trackside_diner", Station2.ORE_HOPPER = "ore_hopper";
    })(Station || (Station = {}));
    trainsetEffects = /* @__PURE__ */ new Map([[Station.TOWER_FIZZY, import_kolmafia54.Effect.get("Carbonated")], [Station.TOWER_FROZEN, import_kolmafia54.Effect.get("Frozen")], [Station.SPOOKY_GRAVEYARD, import_kolmafia54.Effect.get("Shivering Spine")], [Station.TOWER_SEWAGE, import_kolmafia54.Effect.get("Hot Soupy Garbage")], [Station.OIL_BRIDGE, import_kolmafia54.Effect.get("Burningly Oiled")], [Station.OIL_REFINERY, import_kolmafia54.Effect.get("Spookily Greasy")], [Station.WATER_BRIDGE, import_kolmafia54.Effect.get("Troubled Waters")], [Station.PRAWN_SILO, import_kolmafia54.Effect.get("Craving Prawns")]]), trainsetEffectsDoubled = /* @__PURE__ */ new Map([[Station.TOWER_FIZZY, import_kolmafia54.Effect.get("Double Carbonated")], [Station.TOWER_FROZEN, import_kolmafia54.Effect.get("Double Frozen")], [Station.SPOOKY_GRAVEYARD, import_kolmafia54.Effect.get("Doubly Shivering Spine")], [Station.TOWER_SEWAGE, import_kolmafia54.Effect.get("Double Hot Soupy Garbage")], [Station.OIL_BRIDGE, import_kolmafia54.Effect.get("Doubly Burningly Oiled")], [Station.OIL_REFINERY, import_kolmafia54.Effect.get("Doubly Spookily Greasy")], [Station.WATER_BRIDGE, import_kolmafia54.Effect.get("Doubly Troubled Waters")], [Station.PRAWN_SILO, import_kolmafia54.Effect.get("Doubly Craving Prawns")]]);
    pieces2 = [Station.EMPTY, Station.GAIN_MEAT, Station.TOWER_FIZZY, Station.VIEWING_PLATFORM, Station.TOWER_FROZEN, Station.SPOOKY_GRAVEYARD, Station.LOGGING_MILL, Station.CANDY_FACTORY, Station.COAL_HOPPER, Station.TOWER_SEWAGE, Station.UNKNOWN, Station.OIL_REFINERY, Station.OIL_BRIDGE, Station.WATER_BRIDGE, Station.GROIN_SILO, Station.GRAIN_SILO, Station.BRAIN_SILO, Station.BRAWN_SILO, Station.PRAWN_SILO, Station.TRACKSIDE_DINER, Station.ORE_HOPPER];
  }
});

// node_modules/libram/dist/resources/2023/AugustScepter.js
var AugustScepter_exports = {};
__export(AugustScepter_exports, {
  SKILLS: function() {
    return SKILLS;
  },
  canCast: function() {
    return canCast;
  },
  getAugustCast: function() {
    return getAugustCast;
  },
  getTodayCast: function() {
    return getTodayCast;
  },
  have: function() {
    return have42;
  },
  todaysSkill: function() {
    return todaysSkill;
  }
});
function _taggedTemplateLiteral41(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have42() {
  return have($item(_templateObject301 || (_templateObject301 = _taggedTemplateLiteral41(["august scepter"]))));
}
function todaysSkill() {
  return (0, import_kolmafia55.toSkill)((gameDay().getDate() + 7451).toFixed(0));
}
function getAugustCast(skillNum) {
  return get("_aug".concat(skillNum, "Cast"));
}
function getTodayCast() {
  return get("_augTodayCast");
}
function canCast(skillNum) {
  return have42() && !get("_aug".concat(skillNum, "Cast")) && (gameDay().getDate() === skillNum && !getTodayCast() || get("_augSkillsCast") < 5);
}
var import_kolmafia55, _templateObject301, _templateObject2101, SKILLS, init_AugustScepter = __esm({
  "node_modules/libram/dist/resources/2023/AugustScepter.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia55 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    SKILLS = Object.freeze($skills(_templateObject2101 || (_templateObject2101 = _taggedTemplateLiteral41(["Aug. 1st: Mountain Climbing Day!, Aug. 2nd: Find an Eleven-Leaf Clover Day, Aug. 3rd: Watermelon Day!, Aug. 4th: Water Balloon Day!, Aug. 5th: Oyster Day!, Aug. 6th: Fresh Breath Day!, Aug. 7th: Lighthouse Day!, Aug. 8th: Cat Day!, Aug. 9th: Hand Holding Day!, Aug. 10th: World Lion Day!, Aug. 11th: Presidential Joke Day!, Aug. 12th: Elephant Day!, Aug. 13th: Left/Off Hander's Day!, Aug. 14th: Financial Awareness  Day!, Aug. 15th: Relaxation Day!, Aug. 16th: Roller Coaster Day!, Aug. 17th: Thriftshop Day!, Aug. 18th: Serendipity Day!, Aug. 19th: Honey Bee Awareness Day!, Aug. 20th: Mosquito Day!, Aug. 21st: Spumoni Day!, Aug. 22nd: Tooth Fairy Day!, Aug. 23rd: Ride the Wind Day!, Aug. 24th: Waffle Day!, Aug. 25th: Banana Split Day!, Aug. 26th: Toilet Paper Day!, Aug. 27th: Just Because Day!, Aug. 28th: Race Your Mouse Day!, Aug. 29th: More Herbs, Less Salt  Day!, Aug. 30th: Beach Day!, Aug. 31st: Cabernet Sauvignon  Day!"], ["Aug. 1st: Mountain Climbing Day!, Aug. 2nd: Find an Eleven-Leaf Clover Day, Aug. 3rd: Watermelon Day!, Aug. 4th: Water Balloon Day!, Aug. 5th: Oyster Day!, Aug. 6th: Fresh Breath Day!, Aug. 7th: Lighthouse Day!, Aug. 8th: Cat Day!, Aug. 9th: Hand Holding Day!, Aug. 10th: World Lion Day!, Aug. 11th: Presidential Joke Day!, Aug. 12th: Elephant Day!, Aug. 13th: Left/Off Hander's Day!, Aug. 14th: Financial Awareness  Day!, Aug. 15th: Relaxation Day!, Aug. 16th: Roller Coaster Day!, Aug. 17th: Thriftshop Day!, Aug. 18th: Serendipity Day!, Aug. 19th: Honey Bee Awareness Day!, Aug. 20th: Mosquito Day!, Aug. 21st: Spumoni Day!, Aug. 22nd: Tooth Fairy Day!, Aug. 23rd: Ride the Wind Day!, Aug. 24th: Waffle Day!, Aug. 25th: Banana Split Day!, Aug. 26th: Toilet Paper Day!, Aug. 27th: Just Because Day!, Aug. 28th: Race Your Mouse Day!, Aug. 29th: More Herbs\\, Less Salt  Day!, Aug. 30th: Beach Day!, Aug. 31st: Cabernet Sauvignon  Day!"]))));
  }
});

// node_modules/libram/dist/resources/2023/CinchoDeMayo.js
var CinchoDeMayo_exports = {};
__export(CinchoDeMayo_exports, {
  cinchRestoredBy: function() {
    return cinchRestoredBy;
  },
  currentCinch: function() {
    return currentCinch;
  },
  have: function() {
    return have43;
  },
  skills: function() {
    return skills2;
  },
  totalAvailableCinch: function() {
    return totalAvailableCinch;
  }
});
function _taggedTemplateLiteral42(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have43() {
  return have(cincho);
}
function currentCinch() {
  return have43() ? clamp(100 - get("_cinchUsed"), 0, 100) : 0;
}
function cinchRestoredBy() {
  var currentRests = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : get("_cinchoRests");
  return have43() ? clamp(50 - currentRests * 5, 5, 30) : 0;
}
function totalAvailableCinch() {
  var remainingRests = Math.max(0, (0, import_kolmafia56.totalFreeRests)() - get("timesRested"));
  return have43() ? currentCinch() + sum(new Array(remainingRests).fill(null).map(function(_, i) {
    return i + get("_cinchoRests");
  }), function(restNumber) {
    return cinchRestoredBy(restNumber);
  }) : 0;
}
var import_kolmafia56, _templateObject309, _templateObject2102, _templateObject369, _templateObject459, _templateObject538, _templateObject629, _templateObject725, cincho, skills2, init_CinchoDeMayo = __esm({
  "node_modules/libram/dist/resources/2023/CinchoDeMayo.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia56 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    cincho = $item(_templateObject309 || (_templateObject309 = _taggedTemplateLiteral42(["Cincho de Mayo"])));
    skills2 = {
      SaltAndLime: $skill(_templateObject2102 || (_templateObject2102 = _taggedTemplateLiteral42(["Cincho: Dispense Salt and Lime"]))),
      PartySoundtrack: $skill(_templateObject369 || (_templateObject369 = _taggedTemplateLiteral42(["Cincho: Party Soundtrack"]))),
      FiestaExit: $skill(_templateObject459 || (_templateObject459 = _taggedTemplateLiteral42(["Cincho: Fiesta Exit"]))),
      ProjectilePi\u00F1ata: $skill(_templateObject538 || (_templateObject538 = _taggedTemplateLiteral42(["Cincho: Projectile Pi\xF1ata"]))),
      PartyFoul: $skill(_templateObject629 || (_templateObject629 = _taggedTemplateLiteral42(["Cincho: Party Foul"]))),
      ConfettiExtrava: $skill(_templateObject725 || (_templateObject725 = _taggedTemplateLiteral42(["Cincho: Confetti Extravaganza"])))
    };
  }
});

// node_modules/libram/dist/resources/2023/ClosedCircuitPayphone.js
var ClosedCircuitPayphone_exports = {};
__export(ClosedCircuitPayphone_exports, {
  byIngress: function() {
    return byIngress;
  },
  chooseQuest: function() {
    return chooseQuest;
  },
  chooseRift: function() {
    return chooseRift;
  },
  currentIngress: function() {
    return currentIngress;
  },
  currentRift: function() {
    return currentRift;
  },
  have: function() {
    return have44;
  },
  rifts: function() {
    return rifts;
  },
  rufusTarget: function() {
    return rufusTarget;
  },
  submitQuest: function() {
    return submitQuest;
  }
});
function _toConsumableArray13(arr) {
  return _arrayWithoutHoles13(arr) || _iterableToArray13(arr) || _unsupportedIterableToArray27(arr) || _nonIterableSpread13();
}
function _nonIterableSpread13() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray27(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray27(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray27(o, minLen);
  }
}
function _iterableToArray13(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles13(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray27(arr);
}
function _arrayLikeToArray27(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral43(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have44() {
  return have(item8);
}
function rufusTarget() {
  var target = get("rufusQuestTarget");
  switch (get("rufusQuestType")) {
    case "entity":
      return import_kolmafia57.Monster.get(target);
    case "artifact":
    case "items":
      return import_kolmafia57.Item.get(target);
    default:
      return null;
  }
}
function currentIngress() {
  return get("shadowRiftIngress");
}
function currentRift() {
  var ingress = currentIngress();
  return ingress ? INGRESS_RIFTS[ingress] : null;
}
function chooseRift(options) {
  var filterFunction = function(l) {
    var _options$monsters, _options$drops, _options$otherFilter, _options$otherFilter2, monsters = (0, import_kolmafia57.getMonsters)(l);
    return options.canAdventure && !(0, import_kolmafia57.canAdventure)(l) || (_options$monsters = options.monsters) !== null && _options$monsters !== void 0 && _options$monsters.some(function(m) {
      return !monsters.includes(m);
    }) || (_options$drops = options.drops) !== null && _options$drops !== void 0 && _options$drops.every(function(i) {
      return !monsters.some(function(m) {
        return i.name in (0, import_kolmafia57.itemDrops)(m);
      });
    }) ? !1 : (_options$otherFilter = (_options$otherFilter2 = options.otherFilter) === null || _options$otherFilter2 === void 0 ? void 0 : _options$otherFilter2.call(options, l)) !== null && _options$otherFilter !== void 0 ? _options$otherFilter : !0;
  }, validRifts = _toConsumableArray13(RIFTS).filter(filterFunction);
  return validRifts.length ? options.sortBy ? maxBy(validRifts, options.sortBy) : validRifts[0] : null;
}
function chooseQuest(chooser) {
  return get("questRufus") !== "unstarted" || !have44() ? !1 : (withChoice(1497, "", function() {
    var _get3;
    directlyUse(item8), (0, import_kolmafia57.runChoice)(chooser({
      artifact: (0, import_kolmafia57.toItem)(get("rufusDesiredArtifact")),
      entity: (_get3 = get("rufusDesiredEntity")) !== null && _get3 !== void 0 ? _get3 : $monster.none,
      items: (0, import_kolmafia57.toItem)(get("rufusDesiredItems"))
    }));
  }), get("questRufus") !== "unstarted");
}
function rifts() {
  return _toConsumableArray13(RIFTS);
}
function submitQuest() {
  return questStep("questRufus") === 1 ? (withChoice(1498, 1, function() {
    return (0, import_kolmafia57.use)(item8);
  }), questStep("questRufus") === -1) : !1;
}
var import_kolmafia57, _templateObject370, _templateObject2103, _templateObject371, _templateObject460, _templateObject539, _templateObject630, _templateObject726, _templateObject825, _templateObject921, _templateObject1020, _templateObject1118, _templateObject1218, _templateObject1316, _templateObject1413, item8, INGRESS_RIFTS, RIFTS, byIngress, init_ClosedCircuitPayphone = __esm({
  "node_modules/libram/dist/resources/2023/ClosedCircuitPayphone.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia57 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    init_utils();
    item8 = $item(_templateObject370 || (_templateObject370 = _taggedTemplateLiteral43(["closed-circuit pay phone"])));
    INGRESS_RIFTS = {
      desertbeach: $location(_templateObject2103 || (_templateObject2103 = _taggedTemplateLiteral43(["Shadow Rift (Desert Beach)"]))),
      forestvillage: $location(_templateObject371 || (_templateObject371 = _taggedTemplateLiteral43(["Shadow Rift (Forest Village)"]))),
      mclargehuge: $location(_templateObject460 || (_templateObject460 = _taggedTemplateLiteral43(["Shadow Rift (Mt. McLargeHuge)"]))),
      beanstalk: $location(_templateObject539 || (_templateObject539 = _taggedTemplateLiteral43(["Shadow Rift (Somewhere Over the Beanstalk)"]))),
      manor3: $location(_templateObject630 || (_templateObject630 = _taggedTemplateLiteral43(["Shadow Rift (Spookyraven Manor Third Floor)"]))),
      "8bit": $location(_templateObject726 || (_templateObject726 = _taggedTemplateLiteral43(["Shadow Rift (The 8-Bit Realm)"]))),
      pyramid: $location(_templateObject825 || (_templateObject825 = _taggedTemplateLiteral43(["Shadow Rift (The Ancient Buried Pyramid)"]))),
      giantcastle: $location(_templateObject921 || (_templateObject921 = _taggedTemplateLiteral43(["Shadow Rift (The Castle in the Clouds in the Sky)"]))),
      woods: $location(_templateObject1020 || (_templateObject1020 = _taggedTemplateLiteral43(["Shadow Rift (The Distant Woods)"]))),
      hiddencity: $location(_templateObject1118 || (_templateObject1118 = _taggedTemplateLiteral43(["Shadow Rift (The Hidden City)"]))),
      cemetery: $location(_templateObject1218 || (_templateObject1218 = _taggedTemplateLiteral43(["Shadow Rift (The Misspelled Cemetary)"]))),
      plains: $location(_templateObject1316 || (_templateObject1316 = _taggedTemplateLiteral43(["Shadow Rift (The Nearby Plains)"]))),
      town_right: $location(_templateObject1413 || (_templateObject1413 = _taggedTemplateLiteral43(["Shadow Rift (The Right Side of the Tracks)"])))
    };
    RIFTS = Array.from(Object.values(INGRESS_RIFTS));
    byIngress = makeByXFunction(currentIngress);
  }
});

// node_modules/libram/dist/resources/2023/CursedMonkeyPaw.js
var CursedMonkeyPaw_exports = {};
__export(CursedMonkeyPaw_exports, {
  getUnwishableEffects: function() {
    return getUnwishableEffects;
  },
  have: function() {
    return have45;
  },
  isWishable: function() {
    return isWishable;
  },
  wishFor: function() {
    return wishFor;
  },
  wishableItems: function() {
    return wishableItems;
  },
  wishes: function() {
    return wishes;
  }
});
function _taggedTemplateLiteral44(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have45() {
  return have(item9);
}
function wishes() {
  return clamp(5 - get("_monkeyPawWishesUsed"), 0, 5);
}
function wishableItems() {
  var filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return new Set(flat(import_kolmafia58.Location.all().filter(function(l) {
    var _filters$location, _filters$location2;
    return (0, import_kolmafia58.canAdventure)(l) && ((_filters$location = (_filters$location2 = filters.location) === null || _filters$location2 === void 0 ? void 0 : _filters$location2.call(filters, l)) !== null && _filters$location !== void 0 ? _filters$location : !0);
  }).map(function(l) {
    return (0, import_kolmafia58.getMonsters)(l).filter(function(m) {
      var _filters$monster, _filters$monster2;
      return m.copyable && ((_filters$monster = (_filters$monster2 = filters.monster) === null || _filters$monster2 === void 0 ? void 0 : _filters$monster2.call(filters, m)) !== null && _filters$monster !== void 0 ? _filters$monster : !0);
    }).map(function(m) {
      return (0, import_kolmafia58.itemDropsArray)(m).filter(function(_ref) {
        var _filters$drop, _filters$drop2, type = _ref.type, rate = _ref.rate, drop = _ref.drop;
        return !drop.quest && (type !== "c" || rate >= 1) && ((_filters$drop = (_filters$drop2 = filters.drop) === null || _filters$drop2 === void 0 ? void 0 : _filters$drop2.call(filters, {
          type: type,
          rate: rate,
          drop: drop
        })) !== null && _filters$drop !== void 0 ? _filters$drop : !0);
      }).map(function(_ref2) {
        var drop = _ref2.drop;
        return drop;
      });
    });
  })));
}
function unwishableEffects() {
  var names = import_kolmafia58.Effect.all().filter(function(e) {
    return !e.attributes.includes("nohookah");
  }).map(function(e) {
    var name = e.name.toLowerCase();
    return {
      name: name,
      splitName: name.split(INVALID_CHARACTERS)
    };
  });
  return names.filter(function(_ref3) {
    var name = _ref3.name, splitName = _ref3.splitName;
    return (
      // Any effect that doesn't contain an INVALID_CHARACTER is fine
      splitName.length > 1 && // To be unwishable, there can't be any substrings that uniquely match a genie-wishable effect
      splitName.every(function(s) {
        return (
          // So we check every maximal substring against every one of our genie-wishable effects, excluding the effect we're currently looking at
          // if one of the substrings matches a substring associated with another effect, we're screwed.
          names.some(function(_ref4) {
            var n = _ref4.name;
            return n !== name && n.includes(s);
          })
        );
      })
    );
  }).map(function(_ref5) {
    var name = _ref5.name;
    return (0, import_kolmafia58.toEffect)(name);
  });
}
function getUnwishableEffects() {
  var _unwishableEffects2;
  return (_unwishableEffects2 = _unwishableEffects) !== null && _unwishableEffects2 !== void 0 ? _unwishableEffects2 : _unwishableEffects = unwishableEffects();
}
function isWishable(wish) {
  return wish instanceof import_kolmafia58.Item ? wishableItems().has(wish) : wish.attributes.includes("nohookah") ? !1 : wish.name.match(/[.,']/) ? !getUnwishableEffects().includes(wish) : !0;
}
function wishFor(wish) {
  if (wishes() <= 0)
    return !1;
  if (wish instanceof import_kolmafia58.Effect)
    return (0, import_kolmafia58.monkeyPaw)(wish);
  var locations = import_kolmafia58.Location.all().filter(function(l) {
    return (0, import_kolmafia58.canAdventure)(l) && (0, import_kolmafia58.getMonsters)(l).some(function(m) {
      return m.copyable && (0, import_kolmafia58.itemDropsArray)(m).some(function(_ref6) {
        var drop = _ref6.drop;
        return drop === wish;
      });
    });
  });
  try {
    locations.length && ((0, import_kolmafia58.cliExecute)("checkpoint"), (0, import_kolmafia58.prepareForAdventure)(locations[0]));
    var result = (0, import_kolmafia58.monkeyPaw)(wish);
    return result || logger_default.debug("Failed to monkeyPaw wish for ".concat(wish, "; assumed it was available in locations ").concat(locations.join(", "))), result;
  } finally {
    locations.length && (0, import_kolmafia58.cliExecute)("outfit checkpoint");
  }
}
var import_kolmafia58, _templateObject379, item9, INVALID_CHARACTERS, _unwishableEffects, init_CursedMonkeyPaw = __esm({
  "node_modules/libram/dist/resources/2023/CursedMonkeyPaw.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia58 = require("kolmafia");
    init_lib();
    init_logger();
    init_property();
    init_template_string();
    init_utils();
    item9 = $item(_templateObject379 || (_templateObject379 = _taggedTemplateLiteral44(["cursed monkey's paw"])));
    INVALID_CHARACTERS = /[^a-z\d -]/g;
  }
});

// node_modules/libram/dist/resources/putty-likes.js
function getTotalPuttyLikeCopiesMade() {
  return getSpookyPuttySheetCopiesMade() + getRainDohBlackBoxCopiesMade();
}
function couldUseRainDohBlackBox() {
  return have8() && getRainDohBlackBoxCopiesMade() < 5 && getTotalPuttyLikeCopiesMade() < 6;
}
function couldUseSpookyPuttySheet() {
  return have6() && getSpookyPuttySheetCopiesMade() < 5 && getTotalPuttyLikeCopiesMade() < 6;
}
var RainDohBlackBox, SpookyPuttySheet, init_putty_likes = __esm({
  "node_modules/libram/dist/resources/putty-likes.js": function() {
    init_kolmafia_polyfill();
    init_Copier();
    init_SpookyPutty();
    init_RainDoh();
    RainDohBlackBox = new Copier(function() {
      return couldUseRainDohBlackBox();
    }, null, function() {
      return couldUseRainDohBlackBox();
    }, function() {
      return getRainDohBlackBoxMonster();
    }, function() {
      return useRainDohBlackBox();
    });
    SpookyPuttySheet = new Copier(function() {
      return couldUseSpookyPuttySheet();
    }, function() {
      return prepareSpookyPuttySheet();
    }, function() {
      return couldUseSpookyPuttySheet();
    }, function() {
      return getSpookyPuttySheetMonster();
    }, function() {
      return useSpookyPuttySheet();
    });
  }
});

// node_modules/libram/dist/resources/2007/CandyHearts.js
function _taggedTemplateLiteral45(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have46() {
  return have(summonSkill);
}
function expected() {
  return libramExpected;
}
var _templateObject380, _templateObject2104, _templateObject381, _templateObject461, _templateObject540, _templateObject631, _templateObject727, summonSkill, libramChance, libramExpected, init_CandyHearts = __esm({
  "node_modules/libram/dist/resources/2007/CandyHearts.js": function() {
    init_kolmafia_polyfill();
    init_lib();
    init_template_string();
    summonSkill = $skill(_templateObject380 || (_templateObject380 = _taggedTemplateLiteral45(["Summon Candy Heart"]))), libramChance = 1 / 6, libramExpected = /* @__PURE__ */ new Map([[$item(_templateObject2104 || (_templateObject2104 = _taggedTemplateLiteral45(["green candy heart"]))), libramChance], [$item(_templateObject381 || (_templateObject381 = _taggedTemplateLiteral45(["lavender candy heart"]))), libramChance], [$item(_templateObject461 || (_templateObject461 = _taggedTemplateLiteral45(["orange candy heart"]))), libramChance], [$item(_templateObject540 || (_templateObject540 = _taggedTemplateLiteral45(["pink candy heart"]))), libramChance], [$item(_templateObject631 || (_templateObject631 = _taggedTemplateLiteral45(["white candy heart"]))), libramChance], [$item(_templateObject727 || (_templateObject727 = _taggedTemplateLiteral45(["yellow candy heart"]))), libramChance]]);
  }
});

// node_modules/libram/dist/resources/2008/DivineFavors.js
function _taggedTemplateLiteral46(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have47() {
  return have(summonSkill2);
}
function expected2() {
  var rareSummons = get("_favorRareSummons"), totalRareChance = 1 / Math.pow(2, rareSummons + 1), commonChance2 = (1 - totalRareChance) / 3, rareChance2 = totalRareChance / 3;
  return /* @__PURE__ */ new Map([[$item(_templateObject2105 || (_templateObject2105 = _taggedTemplateLiteral46(["divine blowout"]))), commonChance2], [$item(_templateObject389 || (_templateObject389 = _taggedTemplateLiteral46(["divine can of silly string"]))), commonChance2], [$item(_templateObject467 || (_templateObject467 = _taggedTemplateLiteral46(["divine noisemaker"]))), commonChance2], [$item(_templateObject541 || (_templateObject541 = _taggedTemplateLiteral46(["divine champagne flute"]))), rareChance2], [$item(_templateObject634 || (_templateObject634 = _taggedTemplateLiteral46(["divine champagne popper"]))), rareChance2], [$item(_templateObject728 || (_templateObject728 = _taggedTemplateLiteral46(["divine cracker"]))), rareChance2]]);
}
var _templateObject388, _templateObject2105, _templateObject389, _templateObject467, _templateObject541, _templateObject634, _templateObject728, summonSkill2, init_DivineFavors = __esm({
  "node_modules/libram/dist/resources/2008/DivineFavors.js": function() {
    init_kolmafia_polyfill();
    init_lib();
    init_property();
    init_template_string();
    summonSkill2 = $skill(_templateObject388 || (_templateObject388 = _taggedTemplateLiteral46(["Summon Party Favor"])));
  }
});

// node_modules/libram/dist/resources/2009/LoveSongs.js
function _taggedTemplateLiteral47(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have48() {
  return have(summonSkill3);
}
function expected3() {
  return libramExpected2;
}
var _templateObject390, _templateObject2106, _templateObject391, _templateObject468, _templateObject545, _templateObject635, _templateObject729, summonSkill3, libramChance2, libramExpected2, init_LoveSongs = __esm({
  "node_modules/libram/dist/resources/2009/LoveSongs.js": function() {
    init_kolmafia_polyfill();
    init_lib();
    init_template_string();
    summonSkill3 = $skill(_templateObject390 || (_templateObject390 = _taggedTemplateLiteral47(["Summon Love Song"]))), libramChance2 = 1 / 6, libramExpected2 = /* @__PURE__ */ new Map([[$item(_templateObject2106 || (_templateObject2106 = _taggedTemplateLiteral47(["love song of disturbing obsession"]))), libramChance2], [$item(_templateObject391 || (_templateObject391 = _taggedTemplateLiteral47(["love song of icy revenge"]))), libramChance2], [$item(_templateObject468 || (_templateObject468 = _taggedTemplateLiteral47(["love song of naughty innuendo"]))), libramChance2], [$item(_templateObject545 || (_templateObject545 = _taggedTemplateLiteral47(["love song of smoldering passion"]))), libramChance2], [$item(_templateObject635 || (_templateObject635 = _taggedTemplateLiteral47(["love song of sugary cuteness"]))), libramChance2], [$item(_templateObject729 || (_templateObject729 = _taggedTemplateLiteral47(["love song of vague ambiguity"]))), libramChance2]]);
  }
});

// node_modules/libram/dist/resources/2010/Brickos.js
function _taggedTemplateLiteral48(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have49() {
  return have(summonSkill4);
}
function expected4() {
  var eyeSummons = get("_brickoEyeSummons"), eyeChance = eyeSummons === 3 ? 0 : eyeSummons === 0 ? 0.5 : 1 / 3;
  return /* @__PURE__ */ new Map([[$item(_templateObject2107 || (_templateObject2107 = _taggedTemplateLiteral48(["BRICKO eye brick"]))), eyeChance], [$item(_templateObject399 || (_templateObject399 = _taggedTemplateLiteral48(["BRICKO brick"]))), 3 - eyeChance]]);
}
var _templateObject398, _templateObject2107, _templateObject399, summonSkill4, init_Brickos = __esm({
  "node_modules/libram/dist/resources/2010/Brickos.js": function() {
    init_kolmafia_polyfill();
    init_lib();
    init_property();
    init_template_string();
    summonSkill4 = $skill(_templateObject398 || (_templateObject398 = _taggedTemplateLiteral48(["Summon BRICKOs"])));
  }
});

// node_modules/libram/dist/resources/2011/Gygaxian.js
function _taggedTemplateLiteral49(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have50() {
  return have(summonSkill5);
}
function expected5() {
  return libramExpected3;
}
var _templateObject400, _templateObject2108, _templateObject3100, _templateObject469, _templateObject546, _templateObject636, _templateObject730, summonSkill5, libramChance3, libramExpected3, init_Gygaxian = __esm({
  "node_modules/libram/dist/resources/2011/Gygaxian.js": function() {
    init_kolmafia_polyfill();
    init_lib();
    init_template_string();
    summonSkill5 = $skill(_templateObject400 || (_templateObject400 = _taggedTemplateLiteral49(["Summon Dice"]))), libramChance3 = 1 / 6, libramExpected3 = /* @__PURE__ */ new Map([[$item(_templateObject2108 || (_templateObject2108 = _taggedTemplateLiteral49(["d4"]))), libramChance3], [$item(_templateObject3100 || (_templateObject3100 = _taggedTemplateLiteral49(["d6"]))), libramChance3], [$item(_templateObject469 || (_templateObject469 = _taggedTemplateLiteral49(["d8"]))), libramChance3], [$item(_templateObject546 || (_templateObject546 = _taggedTemplateLiteral49(["d10"]))), libramChance3], [$item(_templateObject636 || (_templateObject636 = _taggedTemplateLiteral49(["d12"]))), libramChance3], [$item(_templateObject730 || (_templateObject730 = _taggedTemplateLiteral49(["d20"]))), libramChance3]]);
  }
});

// node_modules/libram/dist/resources/2012/Resolutions.js
function _taggedTemplateLiteral50(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have51() {
  return have(summonSkill6);
}
function expected6() {
  return libramExpected4;
}
var _templateObject401, _templateObject2109, _templateObject3101, _templateObject470, _templateObject547, _templateObject637, _templateObject731, _templateObject826, _templateObject923, _templateObject1021, summonSkill6, commonChance, rareChance, libramExpected4, init_Resolutions = __esm({
  "node_modules/libram/dist/resources/2012/Resolutions.js": function() {
    init_kolmafia_polyfill();
    init_lib();
    init_template_string();
    summonSkill6 = $skill(_templateObject401 || (_templateObject401 = _taggedTemplateLiteral50(["Summon Resolutions"]))), commonChance = 0.98 / 6, rareChance = 0.02 / 3, libramExpected4 = /* @__PURE__ */ new Map([[$item(_templateObject2109 || (_templateObject2109 = _taggedTemplateLiteral50(["resolution: be feistier"]))), commonChance], [$item(_templateObject3101 || (_templateObject3101 = _taggedTemplateLiteral50(["resolution: be happier"]))), commonChance], [$item(_templateObject470 || (_templateObject470 = _taggedTemplateLiteral50(["resolution: be sexier"]))), commonChance], [$item(_templateObject547 || (_templateObject547 = _taggedTemplateLiteral50(["resolution: be smarter"]))), commonChance], [$item(_templateObject637 || (_templateObject637 = _taggedTemplateLiteral50(["resolution: be stronger"]))), commonChance], [$item(_templateObject731 || (_templateObject731 = _taggedTemplateLiteral50(["resolution: be wealthier"]))), commonChance], [$item(_templateObject826 || (_templateObject826 = _taggedTemplateLiteral50(["resolution: be kinder"]))), rareChance], [$item(_templateObject923 || (_templateObject923 = _taggedTemplateLiteral50(["resolution: be luckier"]))), rareChance], [$item(_templateObject1021 || (_templateObject1021 = _taggedTemplateLiteral50(["resolution: be more adventurous"]))), rareChance]]);
  }
});

// node_modules/libram/dist/resources/2013/PulledTaffy.js
function _taggedTemplateLiteral51(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function have52() {
  return have(summonSkill7);
}
function expected7() {
  var rareSummons = get("_taffyRareSummons"), yellowSummons = get("_taffyYellowSummons"), onlyYellow = yellowSummons === 0 && rareSummons === 3, totalRareChance = rareSummons < 4 ? 1 / Math.pow(2, rareSummons + 1) : 0, commonChance2 = (1 - totalRareChance) / 4, rareChance2 = onlyYellow ? 0 : totalRareChance / (3 - get("_taffyYellowSummons")), yellowChance = yellowSummons === 1 ? 0 : onlyYellow ? totalRareChance : rareChance2;
  return /* @__PURE__ */ new Map([[$item(_templateObject2118 || (_templateObject2118 = _taggedTemplateLiteral51(["pulled blue taffy"]))), commonChance2], [$item(_templateObject3102 || (_templateObject3102 = _taggedTemplateLiteral51(["pulled orange taffy"]))), commonChance2], [$item(_templateObject471 || (_templateObject471 = _taggedTemplateLiteral51(["pulled violet taffy"]))), commonChance2], [$item(_templateObject548 || (_templateObject548 = _taggedTemplateLiteral51(["pulled red taffy"]))), commonChance2], [$item(_templateObject638 || (_templateObject638 = _taggedTemplateLiteral51(["pulled indigo taffy"]))), rareChance2], [$item(_templateObject734 || (_templateObject734 = _taggedTemplateLiteral51(["pulled green taffy"]))), rareChance2], [$item(_templateObject827 || (_templateObject827 = _taggedTemplateLiteral51(["pulled yellow taffy"]))), yellowChance]]);
}
var _templateObject408, _templateObject2118, _templateObject3102, _templateObject471, _templateObject548, _templateObject638, _templateObject734, _templateObject827, summonSkill7, init_PulledTaffy = __esm({
  "node_modules/libram/dist/resources/2013/PulledTaffy.js": function() {
    init_kolmafia_polyfill();
    init_lib();
    init_property();
    init_template_string();
    summonSkill7 = $skill(_templateObject408 || (_templateObject408 = _taggedTemplateLiteral51(["Summon Taffy"])));
  }
});

// node_modules/libram/dist/resources/LibramSummon.js
function _slicedToArray14(arr, i) {
  return _arrayWithHoles14(arr) || _iterableToArrayLimit14(arr, i) || _unsupportedIterableToArray28(arr, i) || _nonIterableRest14();
}
function _nonIterableRest14() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray28(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray28(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray28(o, minLen);
  }
}
function _arrayLikeToArray28(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit14(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles14(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral52(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function expectedLibramSummon(summonSkill8) {
  switch (summonSkill8) {
    case $skill(_templateObject409 || (_templateObject409 = _taggedTemplateLiteral52(["Summon Candy Heart"]))):
      return expected();
    case $skill(_templateObject2119 || (_templateObject2119 = _taggedTemplateLiteral52(["Summon Party Favor"]))):
      return expected2();
    case $skill(_templateObject3103 || (_templateObject3103 = _taggedTemplateLiteral52(["Summon Love Song"]))):
      return expected3();
    case $skill(_templateObject477 || (_templateObject477 = _taggedTemplateLiteral52(["Summon BRICKOs"]))):
      return expected4();
    case $skill(_templateObject549 || (_templateObject549 = _taggedTemplateLiteral52(["Summon Dice"]))):
      return expected5();
    case $skill(_templateObject639 || (_templateObject639 = _taggedTemplateLiteral52(["Summon Resolutions"]))):
      return expected6();
    case $skill(_templateObject735 || (_templateObject735 = _taggedTemplateLiteral52(["Summon Taffy"]))):
      return expected7();
  }
  return /* @__PURE__ */ new Map();
}
function possibleLibramSummons() {
  var results = /* @__PURE__ */ new Map();
  return have46() && results.set($skill(_templateObject828 || (_templateObject828 = _taggedTemplateLiteral52(["Summon Candy Heart"]))), expected()), have47() && results.set($skill(_templateObject924 || (_templateObject924 = _taggedTemplateLiteral52(["Summon Party Favor"]))), expected2()), have48() && results.set($skill(_templateObject1022 || (_templateObject1022 = _taggedTemplateLiteral52(["Summon Love Song"]))), expected3()), have49() && results.set($skill(_templateObject1119 || (_templateObject1119 = _taggedTemplateLiteral52(["Summon BRICKOs"]))), expected4()), have50() && results.set($skill(_templateObject1219 || (_templateObject1219 = _taggedTemplateLiteral52(["Summon Dice"]))), expected5()), have51() && results.set($skill(_templateObject1317 || (_templateObject1317 = _taggedTemplateLiteral52(["Summon Resolutions"]))), expected6()), have52() && results.set($skill(_templateObject1414 || (_templateObject1414 = _taggedTemplateLiteral52(["Summon Taffy"]))), expected7()), results;
}
function bestLibramToCast() {
  var arr = Array.from(possibleLibramSummons().entries());
  return arr.length ? maxBy(arr, function(_ref) {
    var _ref2 = _slicedToArray14(_ref, 2), itemMap = _ref2[1];
    return sum(Array.from(itemMap.entries()), function(_ref3) {
      var _ref4 = _slicedToArray14(_ref3, 2), item10 = _ref4[0], weight = _ref4[1];
      return weight * getSaleValue(item10);
    });
  })[0] : null;
}
var _templateObject409, _templateObject2119, _templateObject3103, _templateObject477, _templateObject549, _templateObject639, _templateObject735, _templateObject828, _templateObject924, _templateObject1022, _templateObject1119, _templateObject1219, _templateObject1317, _templateObject1414, init_LibramSummon = __esm({
  "node_modules/libram/dist/resources/LibramSummon.js": function() {
    init_kolmafia_polyfill();
    init_lib();
    init_template_string();
    init_utils();
    init_CandyHearts();
    init_DivineFavors();
    init_LoveSongs();
    init_Brickos();
    init_Gygaxian();
    init_Resolutions();
    init_PulledTaffy();
  }
});

// node_modules/libram/dist/resources/index.js
var init_resources = __esm({
  "node_modules/libram/dist/resources/index.js": function() {
    init_kolmafia_polyfill();
    init_Stickers();
    init_Bandersnatch();
    init_SpookyPutty();
    init_CrownOfThrones();
    init_LookingGlass();
    init_ObtuseAngel();
    init_StompingBoots();
    init_RainDoh();
    init_ReagnimatedGnome();
    init_Florist();
    init_JungMan();
    init_CrimboShrub();
    init_DNALab();
    init_WinterGarden();
    init_BarrelShrine();
    init_ChateauMantegna();
    init_DeckOfEveryCard();
    init_Dinseylandfill();
    init_MayoClinic();
    init_SourceTerminal();
    init_Witchess();
    init_AsdonMartin();
    init_Horsery();
    init_MummingTrunk();
    init_Pantogram();
    init_Robortender();
    init_Spacegate();
    init_TunnelOfLove();
    init_LatteLoversMembersMug();
    init_SongBoom();
    init_BeachComb();
    init_CampAway();
    init_Snapper();
    init_Cartography();
    init_Guzzlr();
    init_RetroCape();
    init_CrystalBall();
    init_DaylightShavings();
    init_AutumnAton();
    init_CombatLoversLocket();
    init_GreyGoose();
    init_JuneCleaver();
    init_TrainSet();
    init_AugustScepter();
    init_CinchoDeMayo();
    init_ClosedCircuitPayphone();
    init_CursedMonkeyPaw();
    init_putty_likes();
    init_LibramSummon();
  }
});

// node_modules/libram/dist/ascend.js
function _createForOfIteratorHelper11(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray29(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function ownKeys7(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread7(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys7(Object(source), !0).forEach(function(key) {
      _defineProperty15(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys7(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _taggedTemplateLiteral53(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck11(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _inherits3(subClass, superClass) {
  if (typeof superClass != "function" && superClass !== null)
    throw new TypeError("Super expression must either be null or a function");
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf3(subClass, superClass);
}
function _createSuper3(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct3();
  return function() {
    var Super = _getPrototypeOf3(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf3(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else
      result = Super.apply(this, arguments);
    return _possibleConstructorReturn3(this, result);
  };
}
function _possibleConstructorReturn3(self, call) {
  if (call && (typeof call == "object" || typeof call == "function"))
    return call;
  if (call !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized3(self);
}
function _assertThisInitialized3(self) {
  if (self === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return self;
}
function _wrapNativeSuper3(Class6) {
  var _cache = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
  return _wrapNativeSuper3 = function(Class7) {
    if (Class7 === null || !_isNativeFunction3(Class7))
      return Class7;
    if (typeof Class7 != "function")
      throw new TypeError("Super expression must either be null or a function");
    if (typeof _cache != "undefined") {
      if (_cache.has(Class7))
        return _cache.get(Class7);
      _cache.set(Class7, Wrapper);
    }
    function Wrapper() {
      return _construct3(Class7, arguments, _getPrototypeOf3(this).constructor);
    }
    return Wrapper.prototype = Object.create(Class7.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf3(Wrapper, Class7);
  }, _wrapNativeSuper3(Class6);
}
function _construct3(Parent, args2, Class6) {
  return _isNativeReflectConstruct3() ? _construct3 = Reflect.construct : _construct3 = function(Parent2, args3, Class7) {
    var a = [null];
    a.push.apply(a, args3);
    var Constructor = Function.bind.apply(Parent2, a), instance = new Constructor();
    return Class7 && _setPrototypeOf3(instance, Class7.prototype), instance;
  }, _construct3.apply(null, arguments);
}
function _isNativeReflectConstruct3() {
  if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch (e) {
    return !1;
  }
}
function _isNativeFunction3(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _setPrototypeOf3(o, p) {
  return _setPrototypeOf3 = Object.setPrototypeOf || function(o2, p2) {
    return o2.__proto__ = p2, o2;
  }, _setPrototypeOf3(o, p);
}
function _getPrototypeOf3(o) {
  return _getPrototypeOf3 = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  }, _getPrototypeOf3(o);
}
function _defineProperty15(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _slicedToArray15(arr, i) {
  return _arrayWithHoles15(arr) || _iterableToArrayLimit15(arr, i) || _unsupportedIterableToArray29(arr, i) || _nonIterableRest15();
}
function _nonIterableRest15() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray29(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray29(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray29(o, minLen);
  }
}
function _arrayLikeToArray29(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit15(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles15(arr) {
  if (Array.isArray(arr))
    return arr;
}
function permedSkills() {
  return new Map(Array.from(Object.entries((0, import_kolmafia59.getPermedSkills)())).map(function(_ref) {
    var _ref2 = _slicedToArray15(_ref, 2), skillName = _ref2[0], isHardcore = _ref2[1];
    return [(0, import_kolmafia59.toSkill)(skillName), isHardcore ? Lifestyle.hardcore : Lifestyle.softcore];
  }));
}
function signNameToId(moon) {
  return MoonSigns.indexOf(moon) + 1;
}
function signIdToName(id) {
  return MoonSigns[id - 1] || "None";
}
function inputToMoonId(moon, playerClass) {
  if (typeof moon == "number")
    return moon;
  var offset = function() {
    switch (playerClass.primestat) {
      case $stat(_templateObject478 || (_templateObject478 = _taggedTemplateLiteral53(["Muscle"]))):
        return 0;
      case $stat(_templateObject2120 || (_templateObject2120 = _taggedTemplateLiteral53(["Mysticality"]))):
        return 1;
      case $stat(_templateObject3104 || (_templateObject3104 = _taggedTemplateLiteral53(["Moxie"]))):
        return 2;
      default:
        throw new AscendError("unknown prime stat for ".concat(playerClass));
    }
  }, fromNormalInput = signNameToId(tc(moon));
  if (fromNormalInput > 0)
    return fromNormalInput;
  switch (moon.toLowerCase()) {
    case "degrassi":
    case "degrassi knoll":
    case "friendly degrassi knoll":
    case "knoll":
      return 1 + offset();
    case "canada":
    case "canadia":
    case "little canadia":
      return 4 + offset();
    case "gnomads":
    case "gnomish":
    case "gnomish gnomads camp":
      return 7 + offset();
    default:
      throw new AscendError("Invalid moon sign!");
  }
}
function isInValhalla() {
  var charPaneText = (0, import_kolmafia59.visitUrl)("charpane.php"), matches = charPaneText.match(/<img src="[^"]*\/otherimages\/inf_\w+\.gif">/);
  return matches !== null;
}
function ascend(options) {
  var DEFAULT_OPTIONS = {
    kolGender: get("defaultGenderOverride", "female") === "male" ? KolGender.male : KolGender.female,
    consumable: $item(_templateObject479 || (_templateObject479 = _taggedTemplateLiteral53(["astral six-pack"]))),
    pet: $item(_templateObject550 || (_templateObject550 = _taggedTemplateLiteral53(["none"])))
  }, _DEFAULT_OPTIONS$opti = _objectSpread7(_objectSpread7({}, DEFAULT_OPTIONS), options), path3 = _DEFAULT_OPTIONS$opti.path, playerClass = _DEFAULT_OPTIONS$opti.playerClass, lifestyle = _DEFAULT_OPTIONS$opti.lifestyle, kolGender = _DEFAULT_OPTIONS$opti.kolGender, moon = _DEFAULT_OPTIONS$opti.moon, consumable = _DEFAULT_OPTIONS$opti.consumable, pet = _DEFAULT_OPTIONS$opti.pet, permOptions = _DEFAULT_OPTIONS$opti.permOptions;
  if (playerClass.path !== (path3.avatar ? path3 : import_kolmafia59.Path.none))
    throw new AscendError(playerClass);
  if (path3.id < 0)
    throw new AscendError(path3);
  var moonId = inputToMoonId(moon, playerClass);
  if (moonId < 1 || moonId > 9)
    throw new Error("Invalid moon ".concat(moon));
  if (!$items(_templateObject640 || (_templateObject640 = _taggedTemplateLiteral53(["none, astral six-pack, astral hot dog dinner, [10882]carton of astral energy drinks"]))).includes(consumable))
    throw new AscendError(consumable);
  if (!$items(_templateObject736 || (_templateObject736 = _taggedTemplateLiteral53(["none, astral bludgeon, astral shield, astral chapeau, astral bracer, astral longbow, astral shorts, astral mace, astral trousers, astral ring, astral statuette, astral pistol, astral mask, astral pet sweater, astral shirt, astral belt"]))).includes(pet))
    throw new AscendError(pet);
  var illegalSkill = permOptions ? Array.from(permOptions.permSkills.keys()).find(function(skill2) {
    return !skill2.permable || !(0, import_kolmafia59.haveSkill)(skill2);
  }) : void 0;
  if (illegalSkill)
    throw new AscendError(illegalSkill);
  if (isInValhalla() || (0, import_kolmafia59.visitUrl)("ascend.php?action=ascend&confirm=on&confirm2=on"), !isInValhalla())
    throw new AscendError();
  if ((0, import_kolmafia59.visitUrl)("afterlife.php?action=pearlygates"), consumable !== $item(_templateObject829 || (_templateObject829 = _taggedTemplateLiteral53(["none"]))) && (0, import_kolmafia59.visitUrl)("afterlife.php?action=buydeli&whichitem=".concat(consumable.id)), pet !== $item(_templateObject925 || (_templateObject925 = _taggedTemplateLiteral53(["none"]))) && (0, import_kolmafia59.visitUrl)("afterlife.php?action=buyarmory&whichitem=".concat(pet.id)), permOptions) {
    var currentPerms = permedSkills(), karma = get("bankedKarma"), _iterator = _createForOfIteratorHelper11(permOptions.permSkills.entries()), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var _currentPerms$get, _step$value = _slicedToArray15(_step.value, 2), skill = _step$value[0], prospectivePermLevel = _step$value[1], currentPermLevel = (_currentPerms$get = currentPerms.get(skill)) !== null && _currentPerms$get !== void 0 ? _currentPerms$get : Lifestyle.casual;
        if (prospectivePermLevel > currentPermLevel) {
          var expectedKarma = 100 * (prospectivePermLevel - currentPermLevel);
          if (karma < expectedKarma) {
            if (!permOptions.neverAbort)
              throw new AscendError(skill);
            continue;
          }
          karma -= expectedKarma;
          var permText = prospectivePermLevel === Lifestyle.hardcore ? "hcperm" : "scperm";
          (0, import_kolmafia59.visitUrl)("afterlife.php?action=".concat(permText, "&whichskill=").concat(skill.id));
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  (0, import_kolmafia59.visitUrl)("afterlife.php?action=ascend&confirmascend=1&whichsign=".concat(moonId, "&gender=").concat(kolGender, "&whichclass=").concat(playerClass.id, "&whichpath=").concat(path3.id, "&asctype=").concat(lifestyle, "&nopetok=1&noskillsok=1&lamepathok=1&lamesignok=1&pwd"), !0);
}
function prepareAscension() {
  var _throwOnFail, _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, garden = _ref3.garden, eudora = _ref3.eudora, chateau = _ref3.chateau, throwOnFail = _ref3.throwOnFail;
  if (throwOnFail = (_throwOnFail = throwOnFail) !== null && _throwOnFail !== void 0 ? _throwOnFail : !0, garden && !Object.getOwnPropertyNames((0, import_kolmafia59.getCampground)()).includes(garden)) {
    (0, import_kolmafia59.use)(import_kolmafia59.Item.get(garden));
    var gardenName = Object.getOwnPropertyNames((0, import_kolmafia59.getCampground)()).find(isGarden);
    if (gardenName !== garden && throwOnFail)
      throw new AscensionPrepError(garden, gardenName);
  }
  if (eudora && (0, import_kolmafia59.eudoraItem)().name !== eudora) {
    var eudoraNumber = 1 + eudorae.indexOf(eudora);
    if (!(0, import_kolmafia59.xpath)((0, import_kolmafia59.visitUrl)("account.php?tab=correspondence"), '//select[@name="whichpenpal"]/option/@value').includes(eudoraNumber.toString()) && throwOnFail)
      throw new AscensionPrepError("Unable to swap eudora to ".concat(eudora, " because you are not subscribed to it."));
    if ((0, import_kolmafia59.visitUrl)("account.php?actions[]=whichpenpal&whichpenpal=".concat(eudoraNumber, "&action=Update"), !0), (0, import_kolmafia59.eudoraItem)() !== import_kolmafia59.Item.get(eudora) && throwOnFail)
      throw new AscensionPrepError(eudora, (0, import_kolmafia59.eudoraItem)());
  }
  if (chateau && ChateauMantegna_exports.have()) {
    var desk = chateau.desk, ceiling = chateau.ceiling, nightstand = chateau.nightstand;
    if (ceiling && ChateauMantegna_exports.getCeiling() !== ceiling && !ChateauMantegna_exports.changeCeiling(ceiling) && throwOnFail) {
      var _ChateauMantegna$getC;
      throw new AscensionPrepError(ceiling, (_ChateauMantegna$getC = ChateauMantegna_exports.getCeiling()) !== null && _ChateauMantegna$getC !== void 0 ? _ChateauMantegna$getC : "unknown");
    }
    if (desk && ChateauMantegna_exports.getDesk() !== desk && !ChateauMantegna_exports.changeDesk(desk) && throwOnFail) {
      var _ChateauMantegna$getD;
      throw new AscensionPrepError(desk, (_ChateauMantegna$getD = ChateauMantegna_exports.getDesk()) !== null && _ChateauMantegna$getD !== void 0 ? _ChateauMantegna$getD : "unknown");
    }
    if (nightstand && ChateauMantegna_exports.getNightstand() !== nightstand && !ChateauMantegna_exports.changeNightstand(nightstand) && throwOnFail) {
      var _ChateauMantegna$getN;
      throw new AscensionPrepError(nightstand, (_ChateauMantegna$getN = ChateauMantegna_exports.getNightstand()) !== null && _ChateauMantegna$getN !== void 0 ? _ChateauMantegna$getN : "unknown");
    }
  }
}
var import_kolmafia59, _templateObject478, _templateObject2120, _templateObject3104, _templateObject479, _templateObject550, _templateObject640, _templateObject736, _templateObject829, _templateObject925, Lifestyle, KolGender, AscendError, gardens, eudorae, isGarden, isEudora, isDesk, isNightstand, isCeiling, AscensionPrepError, MoonSigns, init_ascend = __esm({
  "node_modules/libram/dist/ascend.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia59 = require("kolmafia");
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    (function(Lifestyle2) {
      Lifestyle2[Lifestyle2.casual = 1] = "casual", Lifestyle2[Lifestyle2.softcore = 2] = "softcore", Lifestyle2[Lifestyle2.normal = 2] = "normal", Lifestyle2[Lifestyle2.hardcore = 3] = "hardcore";
    })(Lifestyle || (Lifestyle = {}));
    (function(KolGender2) {
      KolGender2[KolGender2.male = 1] = "male", KolGender2[KolGender2.female = 2] = "female";
    })(KolGender || (KolGender = {}));
    AscendError = /* @__PURE__ */ function(_Error) {
      _inherits3(AscendError2, _Error);
      var _super = _createSuper3(AscendError2);
      function AscendError2(cause) {
        var _this;
        if (_classCallCheck11(this, AscendError2), !cause)
          _this = _super.call(this, "Failed to ascend--do you have a pending trade offer?"), _defineProperty15(_assertThisInitialized3(_this), "cause", void 0);
        else if (cause instanceof import_kolmafia59.Skill) {
          var reason = cause.permable ? (0, import_kolmafia59.haveSkill)(cause) ? "too karmaically expensive" : "not a skill you currently know" : "unpermable";
          _this = _super.call(this, "Skill ".concat(cause, " is ").concat(reason, "!")), _defineProperty15(_assertThisInitialized3(_this), "cause", void 0);
        } else
          cause instanceof import_kolmafia59.Item ? (_this = _super.call(this, "Invalid astral item: ".concat(cause, "!")), _defineProperty15(_assertThisInitialized3(_this), "cause", void 0)) : cause instanceof import_kolmafia59.Class ? (_this = _super.call(this, "Invalid class ".concat(cause, " for this path!")), _defineProperty15(_assertThisInitialized3(_this), "cause", void 0)) : cause instanceof import_kolmafia59.Path ? (_this = _super.call(this, "Invalid path ".concat(cause, "!")), _defineProperty15(_assertThisInitialized3(_this), "cause", void 0)) : (_this = _super.call(this, cause), _defineProperty15(_assertThisInitialized3(_this), "cause", void 0));
        return _this.cause = cause, _possibleConstructorReturn3(_this);
      }
      return AscendError2;
    }(/* @__PURE__ */ _wrapNativeSuper3(Error)), gardens = ["packet of pumpkin seeds", "Peppermint Pip Packet", "packet of dragon's teeth", "packet of beer seeds", "packet of winter seeds", "packet of thanksgarden seeds", "packet of tall grass seeds", "packet of mushroom spores", "packet of rock seeds"], eudorae = ["My Own Pen Pal kit", "GameInformPowerDailyPro subscription card", "Xi Receiver Unit", "New-You Club Membership Form", "Our Daily Candles\u2122 order form"], isGarden = function(x) {
      return arrayContains(x, gardens);
    }, isEudora = function(x) {
      return arrayContains(x, eudorae);
    }, isDesk = function(x) {
      return arrayContains(x, ChateauMantegna_exports.desks);
    }, isNightstand = function(x) {
      return arrayContains(x, ChateauMantegna_exports.nightstands);
    }, isCeiling = function(x) {
      return arrayContains(x, ChateauMantegna_exports.ceilings);
    }, AscensionPrepError = /* @__PURE__ */ function(_Error2) {
      _inherits3(AscensionPrepError2, _Error2);
      var _super2 = _createSuper3(AscensionPrepError2);
      function AscensionPrepError2(cause, original) {
        var _this2;
        return _classCallCheck11(this, AscensionPrepError2), isGarden(cause) ? (_this2 = _super2.call(this, "Unable to swap garden to ".concat(cause, "; garden is currently ").concat(original, ".")), _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0)) : isEudora(cause) ? (_this2 = _super2.call(this, "Unable to swap eudora to ".concat(cause, "; eudora is currently ").concat(original, ".")), _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0)) : isDesk(cause) ? (_this2 = _super2.call(this, "Unable to swap chateau desk to ".concat(cause, "; desk is currently ").concat(original, ".")), _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0)) : isNightstand(cause) ? (_this2 = _super2.call(this, "Unable to swap chateau nightstand to ".concat(cause, "; nightstand is currently ").concat(original, ".")), _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0)) : isCeiling(cause) ? (_this2 = _super2.call(this, "Unable to swap chateau ceiling to ".concat(cause, "; ceiling is currently ").concat(original, ".")), _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0)) : (_this2 = _super2.call(this, cause), _defineProperty15(_assertThisInitialized3(_this2), "cause", void 0)), _this2.cause = cause, _possibleConstructorReturn3(_this2);
      }
      return AscensionPrepError2;
    }(/* @__PURE__ */ _wrapNativeSuper3(Error)), MoonSigns = ["Mongoose", "Wallaby", "Vole", "Platypus", "Opossum", "Marmot", "Wombat", "Blender", "Packrat"];
  }
});

// node_modules/html-entities/lib/named-references.js
var require_named_references = __commonJS({
  "node_modules/html-entities/lib/named-references.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.bodyRegExps = {
      xml: /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,
      html4: /&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,
      html5: /&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g
    };
    exports.namedReferences = {
      xml: {
        entities: {
          "&lt;": "<",
          "&gt;": ">",
          "&quot;": '"',
          "&apos;": "'",
          "&amp;": "&"
        },
        characters: {
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&apos;",
          "&": "&amp;"
        }
      },
      html4: {
        entities: {
          "&apos;": "'",
          "&nbsp": "\xA0",
          "&nbsp;": "\xA0",
          "&iexcl": "\xA1",
          "&iexcl;": "\xA1",
          "&cent": "\xA2",
          "&cent;": "\xA2",
          "&pound": "\xA3",
          "&pound;": "\xA3",
          "&curren": "\xA4",
          "&curren;": "\xA4",
          "&yen": "\xA5",
          "&yen;": "\xA5",
          "&brvbar": "\xA6",
          "&brvbar;": "\xA6",
          "&sect": "\xA7",
          "&sect;": "\xA7",
          "&uml": "\xA8",
          "&uml;": "\xA8",
          "&copy": "\xA9",
          "&copy;": "\xA9",
          "&ordf": "\xAA",
          "&ordf;": "\xAA",
          "&laquo": "\xAB",
          "&laquo;": "\xAB",
          "&not": "\xAC",
          "&not;": "\xAC",
          "&shy": "\xAD",
          "&shy;": "\xAD",
          "&reg": "\xAE",
          "&reg;": "\xAE",
          "&macr": "\xAF",
          "&macr;": "\xAF",
          "&deg": "\xB0",
          "&deg;": "\xB0",
          "&plusmn": "\xB1",
          "&plusmn;": "\xB1",
          "&sup2": "\xB2",
          "&sup2;": "\xB2",
          "&sup3": "\xB3",
          "&sup3;": "\xB3",
          "&acute": "\xB4",
          "&acute;": "\xB4",
          "&micro": "\xB5",
          "&micro;": "\xB5",
          "&para": "\xB6",
          "&para;": "\xB6",
          "&middot": "\xB7",
          "&middot;": "\xB7",
          "&cedil": "\xB8",
          "&cedil;": "\xB8",
          "&sup1": "\xB9",
          "&sup1;": "\xB9",
          "&ordm": "\xBA",
          "&ordm;": "\xBA",
          "&raquo": "\xBB",
          "&raquo;": "\xBB",
          "&frac14": "\xBC",
          "&frac14;": "\xBC",
          "&frac12": "\xBD",
          "&frac12;": "\xBD",
          "&frac34": "\xBE",
          "&frac34;": "\xBE",
          "&iquest": "\xBF",
          "&iquest;": "\xBF",
          "&Agrave": "\xC0",
          "&Agrave;": "\xC0",
          "&Aacute": "\xC1",
          "&Aacute;": "\xC1",
          "&Acirc": "\xC2",
          "&Acirc;": "\xC2",
          "&Atilde": "\xC3",
          "&Atilde;": "\xC3",
          "&Auml": "\xC4",
          "&Auml;": "\xC4",
          "&Aring": "\xC5",
          "&Aring;": "\xC5",
          "&AElig": "\xC6",
          "&AElig;": "\xC6",
          "&Ccedil": "\xC7",
          "&Ccedil;": "\xC7",
          "&Egrave": "\xC8",
          "&Egrave;": "\xC8",
          "&Eacute": "\xC9",
          "&Eacute;": "\xC9",
          "&Ecirc": "\xCA",
          "&Ecirc;": "\xCA",
          "&Euml": "\xCB",
          "&Euml;": "\xCB",
          "&Igrave": "\xCC",
          "&Igrave;": "\xCC",
          "&Iacute": "\xCD",
          "&Iacute;": "\xCD",
          "&Icirc": "\xCE",
          "&Icirc;": "\xCE",
          "&Iuml": "\xCF",
          "&Iuml;": "\xCF",
          "&ETH": "\xD0",
          "&ETH;": "\xD0",
          "&Ntilde": "\xD1",
          "&Ntilde;": "\xD1",
          "&Ograve": "\xD2",
          "&Ograve;": "\xD2",
          "&Oacute": "\xD3",
          "&Oacute;": "\xD3",
          "&Ocirc": "\xD4",
          "&Ocirc;": "\xD4",
          "&Otilde": "\xD5",
          "&Otilde;": "\xD5",
          "&Ouml": "\xD6",
          "&Ouml;": "\xD6",
          "&times": "\xD7",
          "&times;": "\xD7",
          "&Oslash": "\xD8",
          "&Oslash;": "\xD8",
          "&Ugrave": "\xD9",
          "&Ugrave;": "\xD9",
          "&Uacute": "\xDA",
          "&Uacute;": "\xDA",
          "&Ucirc": "\xDB",
          "&Ucirc;": "\xDB",
          "&Uuml": "\xDC",
          "&Uuml;": "\xDC",
          "&Yacute": "\xDD",
          "&Yacute;": "\xDD",
          "&THORN": "\xDE",
          "&THORN;": "\xDE",
          "&szlig": "\xDF",
          "&szlig;": "\xDF",
          "&agrave": "\xE0",
          "&agrave;": "\xE0",
          "&aacute": "\xE1",
          "&aacute;": "\xE1",
          "&acirc": "\xE2",
          "&acirc;": "\xE2",
          "&atilde": "\xE3",
          "&atilde;": "\xE3",
          "&auml": "\xE4",
          "&auml;": "\xE4",
          "&aring": "\xE5",
          "&aring;": "\xE5",
          "&aelig": "\xE6",
          "&aelig;": "\xE6",
          "&ccedil": "\xE7",
          "&ccedil;": "\xE7",
          "&egrave": "\xE8",
          "&egrave;": "\xE8",
          "&eacute": "\xE9",
          "&eacute;": "\xE9",
          "&ecirc": "\xEA",
          "&ecirc;": "\xEA",
          "&euml": "\xEB",
          "&euml;": "\xEB",
          "&igrave": "\xEC",
          "&igrave;": "\xEC",
          "&iacute": "\xED",
          "&iacute;": "\xED",
          "&icirc": "\xEE",
          "&icirc;": "\xEE",
          "&iuml": "\xEF",
          "&iuml;": "\xEF",
          "&eth": "\xF0",
          "&eth;": "\xF0",
          "&ntilde": "\xF1",
          "&ntilde;": "\xF1",
          "&ograve": "\xF2",
          "&ograve;": "\xF2",
          "&oacute": "\xF3",
          "&oacute;": "\xF3",
          "&ocirc": "\xF4",
          "&ocirc;": "\xF4",
          "&otilde": "\xF5",
          "&otilde;": "\xF5",
          "&ouml": "\xF6",
          "&ouml;": "\xF6",
          "&divide": "\xF7",
          "&divide;": "\xF7",
          "&oslash": "\xF8",
          "&oslash;": "\xF8",
          "&ugrave": "\xF9",
          "&ugrave;": "\xF9",
          "&uacute": "\xFA",
          "&uacute;": "\xFA",
          "&ucirc": "\xFB",
          "&ucirc;": "\xFB",
          "&uuml": "\xFC",
          "&uuml;": "\xFC",
          "&yacute": "\xFD",
          "&yacute;": "\xFD",
          "&thorn": "\xFE",
          "&thorn;": "\xFE",
          "&yuml": "\xFF",
          "&yuml;": "\xFF",
          "&quot": '"',
          "&quot;": '"',
          "&amp": "&",
          "&amp;": "&",
          "&lt": "<",
          "&lt;": "<",
          "&gt": ">",
          "&gt;": ">",
          "&OElig;": "\u0152",
          "&oelig;": "\u0153",
          "&Scaron;": "\u0160",
          "&scaron;": "\u0161",
          "&Yuml;": "\u0178",
          "&circ;": "\u02C6",
          "&tilde;": "\u02DC",
          "&ensp;": "\u2002",
          "&emsp;": "\u2003",
          "&thinsp;": "\u2009",
          "&zwnj;": "\u200C",
          "&zwj;": "\u200D",
          "&lrm;": "\u200E",
          "&rlm;": "\u200F",
          "&ndash;": "\u2013",
          "&mdash;": "\u2014",
          "&lsquo;": "\u2018",
          "&rsquo;": "\u2019",
          "&sbquo;": "\u201A",
          "&ldquo;": "\u201C",
          "&rdquo;": "\u201D",
          "&bdquo;": "\u201E",
          "&dagger;": "\u2020",
          "&Dagger;": "\u2021",
          "&permil;": "\u2030",
          "&lsaquo;": "\u2039",
          "&rsaquo;": "\u203A",
          "&euro;": "\u20AC",
          "&fnof;": "\u0192",
          "&Alpha;": "\u0391",
          "&Beta;": "\u0392",
          "&Gamma;": "\u0393",
          "&Delta;": "\u0394",
          "&Epsilon;": "\u0395",
          "&Zeta;": "\u0396",
          "&Eta;": "\u0397",
          "&Theta;": "\u0398",
          "&Iota;": "\u0399",
          "&Kappa;": "\u039A",
          "&Lambda;": "\u039B",
          "&Mu;": "\u039C",
          "&Nu;": "\u039D",
          "&Xi;": "\u039E",
          "&Omicron;": "\u039F",
          "&Pi;": "\u03A0",
          "&Rho;": "\u03A1",
          "&Sigma;": "\u03A3",
          "&Tau;": "\u03A4",
          "&Upsilon;": "\u03A5",
          "&Phi;": "\u03A6",
          "&Chi;": "\u03A7",
          "&Psi;": "\u03A8",
          "&Omega;": "\u03A9",
          "&alpha;": "\u03B1",
          "&beta;": "\u03B2",
          "&gamma;": "\u03B3",
          "&delta;": "\u03B4",
          "&epsilon;": "\u03B5",
          "&zeta;": "\u03B6",
          "&eta;": "\u03B7",
          "&theta;": "\u03B8",
          "&iota;": "\u03B9",
          "&kappa;": "\u03BA",
          "&lambda;": "\u03BB",
          "&mu;": "\u03BC",
          "&nu;": "\u03BD",
          "&xi;": "\u03BE",
          "&omicron;": "\u03BF",
          "&pi;": "\u03C0",
          "&rho;": "\u03C1",
          "&sigmaf;": "\u03C2",
          "&sigma;": "\u03C3",
          "&tau;": "\u03C4",
          "&upsilon;": "\u03C5",
          "&phi;": "\u03C6",
          "&chi;": "\u03C7",
          "&psi;": "\u03C8",
          "&omega;": "\u03C9",
          "&thetasym;": "\u03D1",
          "&upsih;": "\u03D2",
          "&piv;": "\u03D6",
          "&bull;": "\u2022",
          "&hellip;": "\u2026",
          "&prime;": "\u2032",
          "&Prime;": "\u2033",
          "&oline;": "\u203E",
          "&frasl;": "\u2044",
          "&weierp;": "\u2118",
          "&image;": "\u2111",
          "&real;": "\u211C",
          "&trade;": "\u2122",
          "&alefsym;": "\u2135",
          "&larr;": "\u2190",
          "&uarr;": "\u2191",
          "&rarr;": "\u2192",
          "&darr;": "\u2193",
          "&harr;": "\u2194",
          "&crarr;": "\u21B5",
          "&lArr;": "\u21D0",
          "&uArr;": "\u21D1",
          "&rArr;": "\u21D2",
          "&dArr;": "\u21D3",
          "&hArr;": "\u21D4",
          "&forall;": "\u2200",
          "&part;": "\u2202",
          "&exist;": "\u2203",
          "&empty;": "\u2205",
          "&nabla;": "\u2207",
          "&isin;": "\u2208",
          "&notin;": "\u2209",
          "&ni;": "\u220B",
          "&prod;": "\u220F",
          "&sum;": "\u2211",
          "&minus;": "\u2212",
          "&lowast;": "\u2217",
          "&radic;": "\u221A",
          "&prop;": "\u221D",
          "&infin;": "\u221E",
          "&ang;": "\u2220",
          "&and;": "\u2227",
          "&or;": "\u2228",
          "&cap;": "\u2229",
          "&cup;": "\u222A",
          "&int;": "\u222B",
          "&there4;": "\u2234",
          "&sim;": "\u223C",
          "&cong;": "\u2245",
          "&asymp;": "\u2248",
          "&ne;": "\u2260",
          "&equiv;": "\u2261",
          "&le;": "\u2264",
          "&ge;": "\u2265",
          "&sub;": "\u2282",
          "&sup;": "\u2283",
          "&nsub;": "\u2284",
          "&sube;": "\u2286",
          "&supe;": "\u2287",
          "&oplus;": "\u2295",
          "&otimes;": "\u2297",
          "&perp;": "\u22A5",
          "&sdot;": "\u22C5",
          "&lceil;": "\u2308",
          "&rceil;": "\u2309",
          "&lfloor;": "\u230A",
          "&rfloor;": "\u230B",
          "&lang;": "\u2329",
          "&rang;": "\u232A",
          "&loz;": "\u25CA",
          "&spades;": "\u2660",
          "&clubs;": "\u2663",
          "&hearts;": "\u2665",
          "&diams;": "\u2666"
        },
        characters: {
          "'": "&apos;",
          "\xA0": "&nbsp;",
          "\xA1": "&iexcl;",
          "\xA2": "&cent;",
          "\xA3": "&pound;",
          "\xA4": "&curren;",
          "\xA5": "&yen;",
          "\xA6": "&brvbar;",
          "\xA7": "&sect;",
          "\xA8": "&uml;",
          "\xA9": "&copy;",
          \u00AA: "&ordf;",
          "\xAB": "&laquo;",
          "\xAC": "&not;",
          "\xAD": "&shy;",
          "\xAE": "&reg;",
          "\xAF": "&macr;",
          "\xB0": "&deg;",
          "\xB1": "&plusmn;",
          "\xB2": "&sup2;",
          "\xB3": "&sup3;",
          "\xB4": "&acute;",
          \u00B5: "&micro;",
          "\xB6": "&para;",
          "\xB7": "&middot;",
          "\xB8": "&cedil;",
          "\xB9": "&sup1;",
          \u00BA: "&ordm;",
          "\xBB": "&raquo;",
          "\xBC": "&frac14;",
          "\xBD": "&frac12;",
          "\xBE": "&frac34;",
          "\xBF": "&iquest;",
          \u00C0: "&Agrave;",
          \u00C1: "&Aacute;",
          \u00C2: "&Acirc;",
          \u00C3: "&Atilde;",
          \u00C4: "&Auml;",
          \u00C5: "&Aring;",
          \u00C6: "&AElig;",
          \u00C7: "&Ccedil;",
          \u00C8: "&Egrave;",
          \u00C9: "&Eacute;",
          \u00CA: "&Ecirc;",
          \u00CB: "&Euml;",
          \u00CC: "&Igrave;",
          \u00CD: "&Iacute;",
          \u00CE: "&Icirc;",
          \u00CF: "&Iuml;",
          \u00D0: "&ETH;",
          \u00D1: "&Ntilde;",
          \u00D2: "&Ograve;",
          \u00D3: "&Oacute;",
          \u00D4: "&Ocirc;",
          \u00D5: "&Otilde;",
          \u00D6: "&Ouml;",
          "\xD7": "&times;",
          \u00D8: "&Oslash;",
          \u00D9: "&Ugrave;",
          \u00DA: "&Uacute;",
          \u00DB: "&Ucirc;",
          \u00DC: "&Uuml;",
          \u00DD: "&Yacute;",
          \u00DE: "&THORN;",
          \u00DF: "&szlig;",
          \u00E0: "&agrave;",
          \u00E1: "&aacute;",
          \u00E2: "&acirc;",
          \u00E3: "&atilde;",
          \u00E4: "&auml;",
          \u00E5: "&aring;",
          \u00E6: "&aelig;",
          \u00E7: "&ccedil;",
          \u00E8: "&egrave;",
          \u00E9: "&eacute;",
          \u00EA: "&ecirc;",
          \u00EB: "&euml;",
          \u00EC: "&igrave;",
          \u00ED: "&iacute;",
          \u00EE: "&icirc;",
          \u00EF: "&iuml;",
          \u00F0: "&eth;",
          \u00F1: "&ntilde;",
          \u00F2: "&ograve;",
          \u00F3: "&oacute;",
          \u00F4: "&ocirc;",
          \u00F5: "&otilde;",
          \u00F6: "&ouml;",
          "\xF7": "&divide;",
          \u00F8: "&oslash;",
          \u00F9: "&ugrave;",
          \u00FA: "&uacute;",
          \u00FB: "&ucirc;",
          \u00FC: "&uuml;",
          \u00FD: "&yacute;",
          \u00FE: "&thorn;",
          \u00FF: "&yuml;",
          '"': "&quot;",
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          \u0152: "&OElig;",
          \u0153: "&oelig;",
          \u0160: "&Scaron;",
          \u0161: "&scaron;",
          \u0178: "&Yuml;",
          "\u02C6": "&circ;",
          "\u02DC": "&tilde;",
          "\u2002": "&ensp;",
          "\u2003": "&emsp;",
          "\u2009": "&thinsp;",
          "\u200C": "&zwnj;",
          "\u200D": "&zwj;",
          "\u200E": "&lrm;",
          "\u200F": "&rlm;",
          "\u2013": "&ndash;",
          "\u2014": "&mdash;",
          "\u2018": "&lsquo;",
          "\u2019": "&rsquo;",
          "\u201A": "&sbquo;",
          "\u201C": "&ldquo;",
          "\u201D": "&rdquo;",
          "\u201E": "&bdquo;",
          "\u2020": "&dagger;",
          "\u2021": "&Dagger;",
          "\u2030": "&permil;",
          "\u2039": "&lsaquo;",
          "\u203A": "&rsaquo;",
          "\u20AC": "&euro;",
          \u0192: "&fnof;",
          \u0391: "&Alpha;",
          \u0392: "&Beta;",
          \u0393: "&Gamma;",
          \u0394: "&Delta;",
          \u0395: "&Epsilon;",
          \u0396: "&Zeta;",
          \u0397: "&Eta;",
          \u0398: "&Theta;",
          \u0399: "&Iota;",
          \u039A: "&Kappa;",
          \u039B: "&Lambda;",
          \u039C: "&Mu;",
          \u039D: "&Nu;",
          \u039E: "&Xi;",
          \u039F: "&Omicron;",
          \u03A0: "&Pi;",
          \u03A1: "&Rho;",
          \u03A3: "&Sigma;",
          \u03A4: "&Tau;",
          \u03A5: "&Upsilon;",
          \u03A6: "&Phi;",
          \u03A7: "&Chi;",
          \u03A8: "&Psi;",
          \u03A9: "&Omega;",
          \u03B1: "&alpha;",
          \u03B2: "&beta;",
          \u03B3: "&gamma;",
          \u03B4: "&delta;",
          \u03B5: "&epsilon;",
          \u03B6: "&zeta;",
          \u03B7: "&eta;",
          \u03B8: "&theta;",
          \u03B9: "&iota;",
          \u03BA: "&kappa;",
          \u03BB: "&lambda;",
          \u03BC: "&mu;",
          \u03BD: "&nu;",
          \u03BE: "&xi;",
          \u03BF: "&omicron;",
          \u03C0: "&pi;",
          \u03C1: "&rho;",
          \u03C2: "&sigmaf;",
          \u03C3: "&sigma;",
          \u03C4: "&tau;",
          \u03C5: "&upsilon;",
          \u03C6: "&phi;",
          \u03C7: "&chi;",
          \u03C8: "&psi;",
          \u03C9: "&omega;",
          \u03D1: "&thetasym;",
          \u03D2: "&upsih;",
          \u03D6: "&piv;",
          "\u2022": "&bull;",
          "\u2026": "&hellip;",
          "\u2032": "&prime;",
          "\u2033": "&Prime;",
          "\u203E": "&oline;",
          "\u2044": "&frasl;",
          "\u2118": "&weierp;",
          \u2111: "&image;",
          \u211C: "&real;",
          "\u2122": "&trade;",
          \u2135: "&alefsym;",
          "\u2190": "&larr;",
          "\u2191": "&uarr;",
          "\u2192": "&rarr;",
          "\u2193": "&darr;",
          "\u2194": "&harr;",
          "\u21B5": "&crarr;",
          "\u21D0": "&lArr;",
          "\u21D1": "&uArr;",
          "\u21D2": "&rArr;",
          "\u21D3": "&dArr;",
          "\u21D4": "&hArr;",
          "\u2200": "&forall;",
          "\u2202": "&part;",
          "\u2203": "&exist;",
          "\u2205": "&empty;",
          "\u2207": "&nabla;",
          "\u2208": "&isin;",
          "\u2209": "&notin;",
          "\u220B": "&ni;",
          "\u220F": "&prod;",
          "\u2211": "&sum;",
          "\u2212": "&minus;",
          "\u2217": "&lowast;",
          "\u221A": "&radic;",
          "\u221D": "&prop;",
          "\u221E": "&infin;",
          "\u2220": "&ang;",
          "\u2227": "&and;",
          "\u2228": "&or;",
          "\u2229": "&cap;",
          "\u222A": "&cup;",
          "\u222B": "&int;",
          "\u2234": "&there4;",
          "\u223C": "&sim;",
          "\u2245": "&cong;",
          "\u2248": "&asymp;",
          "\u2260": "&ne;",
          "\u2261": "&equiv;",
          "\u2264": "&le;",
          "\u2265": "&ge;",
          "\u2282": "&sub;",
          "\u2283": "&sup;",
          "\u2284": "&nsub;",
          "\u2286": "&sube;",
          "\u2287": "&supe;",
          "\u2295": "&oplus;",
          "\u2297": "&otimes;",
          "\u22A5": "&perp;",
          "\u22C5": "&sdot;",
          "\u2308": "&lceil;",
          "\u2309": "&rceil;",
          "\u230A": "&lfloor;",
          "\u230B": "&rfloor;",
          "\u2329": "&lang;",
          "\u232A": "&rang;",
          "\u25CA": "&loz;",
          "\u2660": "&spades;",
          "\u2663": "&clubs;",
          "\u2665": "&hearts;",
          "\u2666": "&diams;"
        }
      },
      html5: {
        entities: {
          "&AElig": "\xC6",
          "&AElig;": "\xC6",
          "&AMP": "&",
          "&AMP;": "&",
          "&Aacute": "\xC1",
          "&Aacute;": "\xC1",
          "&Abreve;": "\u0102",
          "&Acirc": "\xC2",
          "&Acirc;": "\xC2",
          "&Acy;": "\u0410",
          "&Afr;": "\uD835\uDD04",
          "&Agrave": "\xC0",
          "&Agrave;": "\xC0",
          "&Alpha;": "\u0391",
          "&Amacr;": "\u0100",
          "&And;": "\u2A53",
          "&Aogon;": "\u0104",
          "&Aopf;": "\uD835\uDD38",
          "&ApplyFunction;": "\u2061",
          "&Aring": "\xC5",
          "&Aring;": "\xC5",
          "&Ascr;": "\uD835\uDC9C",
          "&Assign;": "\u2254",
          "&Atilde": "\xC3",
          "&Atilde;": "\xC3",
          "&Auml": "\xC4",
          "&Auml;": "\xC4",
          "&Backslash;": "\u2216",
          "&Barv;": "\u2AE7",
          "&Barwed;": "\u2306",
          "&Bcy;": "\u0411",
          "&Because;": "\u2235",
          "&Bernoullis;": "\u212C",
          "&Beta;": "\u0392",
          "&Bfr;": "\uD835\uDD05",
          "&Bopf;": "\uD835\uDD39",
          "&Breve;": "\u02D8",
          "&Bscr;": "\u212C",
          "&Bumpeq;": "\u224E",
          "&CHcy;": "\u0427",
          "&COPY": "\xA9",
          "&COPY;": "\xA9",
          "&Cacute;": "\u0106",
          "&Cap;": "\u22D2",
          "&CapitalDifferentialD;": "\u2145",
          "&Cayleys;": "\u212D",
          "&Ccaron;": "\u010C",
          "&Ccedil": "\xC7",
          "&Ccedil;": "\xC7",
          "&Ccirc;": "\u0108",
          "&Cconint;": "\u2230",
          "&Cdot;": "\u010A",
          "&Cedilla;": "\xB8",
          "&CenterDot;": "\xB7",
          "&Cfr;": "\u212D",
          "&Chi;": "\u03A7",
          "&CircleDot;": "\u2299",
          "&CircleMinus;": "\u2296",
          "&CirclePlus;": "\u2295",
          "&CircleTimes;": "\u2297",
          "&ClockwiseContourIntegral;": "\u2232",
          "&CloseCurlyDoubleQuote;": "\u201D",
          "&CloseCurlyQuote;": "\u2019",
          "&Colon;": "\u2237",
          "&Colone;": "\u2A74",
          "&Congruent;": "\u2261",
          "&Conint;": "\u222F",
          "&ContourIntegral;": "\u222E",
          "&Copf;": "\u2102",
          "&Coproduct;": "\u2210",
          "&CounterClockwiseContourIntegral;": "\u2233",
          "&Cross;": "\u2A2F",
          "&Cscr;": "\uD835\uDC9E",
          "&Cup;": "\u22D3",
          "&CupCap;": "\u224D",
          "&DD;": "\u2145",
          "&DDotrahd;": "\u2911",
          "&DJcy;": "\u0402",
          "&DScy;": "\u0405",
          "&DZcy;": "\u040F",
          "&Dagger;": "\u2021",
          "&Darr;": "\u21A1",
          "&Dashv;": "\u2AE4",
          "&Dcaron;": "\u010E",
          "&Dcy;": "\u0414",
          "&Del;": "\u2207",
          "&Delta;": "\u0394",
          "&Dfr;": "\uD835\uDD07",
          "&DiacriticalAcute;": "\xB4",
          "&DiacriticalDot;": "\u02D9",
          "&DiacriticalDoubleAcute;": "\u02DD",
          "&DiacriticalGrave;": "`",
          "&DiacriticalTilde;": "\u02DC",
          "&Diamond;": "\u22C4",
          "&DifferentialD;": "\u2146",
          "&Dopf;": "\uD835\uDD3B",
          "&Dot;": "\xA8",
          "&DotDot;": "\u20DC",
          "&DotEqual;": "\u2250",
          "&DoubleContourIntegral;": "\u222F",
          "&DoubleDot;": "\xA8",
          "&DoubleDownArrow;": "\u21D3",
          "&DoubleLeftArrow;": "\u21D0",
          "&DoubleLeftRightArrow;": "\u21D4",
          "&DoubleLeftTee;": "\u2AE4",
          "&DoubleLongLeftArrow;": "\u27F8",
          "&DoubleLongLeftRightArrow;": "\u27FA",
          "&DoubleLongRightArrow;": "\u27F9",
          "&DoubleRightArrow;": "\u21D2",
          "&DoubleRightTee;": "\u22A8",
          "&DoubleUpArrow;": "\u21D1",
          "&DoubleUpDownArrow;": "\u21D5",
          "&DoubleVerticalBar;": "\u2225",
          "&DownArrow;": "\u2193",
          "&DownArrowBar;": "\u2913",
          "&DownArrowUpArrow;": "\u21F5",
          "&DownBreve;": "\u0311",
          "&DownLeftRightVector;": "\u2950",
          "&DownLeftTeeVector;": "\u295E",
          "&DownLeftVector;": "\u21BD",
          "&DownLeftVectorBar;": "\u2956",
          "&DownRightTeeVector;": "\u295F",
          "&DownRightVector;": "\u21C1",
          "&DownRightVectorBar;": "\u2957",
          "&DownTee;": "\u22A4",
          "&DownTeeArrow;": "\u21A7",
          "&Downarrow;": "\u21D3",
          "&Dscr;": "\uD835\uDC9F",
          "&Dstrok;": "\u0110",
          "&ENG;": "\u014A",
          "&ETH": "\xD0",
          "&ETH;": "\xD0",
          "&Eacute": "\xC9",
          "&Eacute;": "\xC9",
          "&Ecaron;": "\u011A",
          "&Ecirc": "\xCA",
          "&Ecirc;": "\xCA",
          "&Ecy;": "\u042D",
          "&Edot;": "\u0116",
          "&Efr;": "\uD835\uDD08",
          "&Egrave": "\xC8",
          "&Egrave;": "\xC8",
          "&Element;": "\u2208",
          "&Emacr;": "\u0112",
          "&EmptySmallSquare;": "\u25FB",
          "&EmptyVerySmallSquare;": "\u25AB",
          "&Eogon;": "\u0118",
          "&Eopf;": "\uD835\uDD3C",
          "&Epsilon;": "\u0395",
          "&Equal;": "\u2A75",
          "&EqualTilde;": "\u2242",
          "&Equilibrium;": "\u21CC",
          "&Escr;": "\u2130",
          "&Esim;": "\u2A73",
          "&Eta;": "\u0397",
          "&Euml": "\xCB",
          "&Euml;": "\xCB",
          "&Exists;": "\u2203",
          "&ExponentialE;": "\u2147",
          "&Fcy;": "\u0424",
          "&Ffr;": "\uD835\uDD09",
          "&FilledSmallSquare;": "\u25FC",
          "&FilledVerySmallSquare;": "\u25AA",
          "&Fopf;": "\uD835\uDD3D",
          "&ForAll;": "\u2200",
          "&Fouriertrf;": "\u2131",
          "&Fscr;": "\u2131",
          "&GJcy;": "\u0403",
          "&GT": ">",
          "&GT;": ">",
          "&Gamma;": "\u0393",
          "&Gammad;": "\u03DC",
          "&Gbreve;": "\u011E",
          "&Gcedil;": "\u0122",
          "&Gcirc;": "\u011C",
          "&Gcy;": "\u0413",
          "&Gdot;": "\u0120",
          "&Gfr;": "\uD835\uDD0A",
          "&Gg;": "\u22D9",
          "&Gopf;": "\uD835\uDD3E",
          "&GreaterEqual;": "\u2265",
          "&GreaterEqualLess;": "\u22DB",
          "&GreaterFullEqual;": "\u2267",
          "&GreaterGreater;": "\u2AA2",
          "&GreaterLess;": "\u2277",
          "&GreaterSlantEqual;": "\u2A7E",
          "&GreaterTilde;": "\u2273",
          "&Gscr;": "\uD835\uDCA2",
          "&Gt;": "\u226B",
          "&HARDcy;": "\u042A",
          "&Hacek;": "\u02C7",
          "&Hat;": "^",
          "&Hcirc;": "\u0124",
          "&Hfr;": "\u210C",
          "&HilbertSpace;": "\u210B",
          "&Hopf;": "\u210D",
          "&HorizontalLine;": "\u2500",
          "&Hscr;": "\u210B",
          "&Hstrok;": "\u0126",
          "&HumpDownHump;": "\u224E",
          "&HumpEqual;": "\u224F",
          "&IEcy;": "\u0415",
          "&IJlig;": "\u0132",
          "&IOcy;": "\u0401",
          "&Iacute": "\xCD",
          "&Iacute;": "\xCD",
          "&Icirc": "\xCE",
          "&Icirc;": "\xCE",
          "&Icy;": "\u0418",
          "&Idot;": "\u0130",
          "&Ifr;": "\u2111",
          "&Igrave": "\xCC",
          "&Igrave;": "\xCC",
          "&Im;": "\u2111",
          "&Imacr;": "\u012A",
          "&ImaginaryI;": "\u2148",
          "&Implies;": "\u21D2",
          "&Int;": "\u222C",
          "&Integral;": "\u222B",
          "&Intersection;": "\u22C2",
          "&InvisibleComma;": "\u2063",
          "&InvisibleTimes;": "\u2062",
          "&Iogon;": "\u012E",
          "&Iopf;": "\uD835\uDD40",
          "&Iota;": "\u0399",
          "&Iscr;": "\u2110",
          "&Itilde;": "\u0128",
          "&Iukcy;": "\u0406",
          "&Iuml": "\xCF",
          "&Iuml;": "\xCF",
          "&Jcirc;": "\u0134",
          "&Jcy;": "\u0419",
          "&Jfr;": "\uD835\uDD0D",
          "&Jopf;": "\uD835\uDD41",
          "&Jscr;": "\uD835\uDCA5",
          "&Jsercy;": "\u0408",
          "&Jukcy;": "\u0404",
          "&KHcy;": "\u0425",
          "&KJcy;": "\u040C",
          "&Kappa;": "\u039A",
          "&Kcedil;": "\u0136",
          "&Kcy;": "\u041A",
          "&Kfr;": "\uD835\uDD0E",
          "&Kopf;": "\uD835\uDD42",
          "&Kscr;": "\uD835\uDCA6",
          "&LJcy;": "\u0409",
          "&LT": "<",
          "&LT;": "<",
          "&Lacute;": "\u0139",
          "&Lambda;": "\u039B",
          "&Lang;": "\u27EA",
          "&Laplacetrf;": "\u2112",
          "&Larr;": "\u219E",
          "&Lcaron;": "\u013D",
          "&Lcedil;": "\u013B",
          "&Lcy;": "\u041B",
          "&LeftAngleBracket;": "\u27E8",
          "&LeftArrow;": "\u2190",
          "&LeftArrowBar;": "\u21E4",
          "&LeftArrowRightArrow;": "\u21C6",
          "&LeftCeiling;": "\u2308",
          "&LeftDoubleBracket;": "\u27E6",
          "&LeftDownTeeVector;": "\u2961",
          "&LeftDownVector;": "\u21C3",
          "&LeftDownVectorBar;": "\u2959",
          "&LeftFloor;": "\u230A",
          "&LeftRightArrow;": "\u2194",
          "&LeftRightVector;": "\u294E",
          "&LeftTee;": "\u22A3",
          "&LeftTeeArrow;": "\u21A4",
          "&LeftTeeVector;": "\u295A",
          "&LeftTriangle;": "\u22B2",
          "&LeftTriangleBar;": "\u29CF",
          "&LeftTriangleEqual;": "\u22B4",
          "&LeftUpDownVector;": "\u2951",
          "&LeftUpTeeVector;": "\u2960",
          "&LeftUpVector;": "\u21BF",
          "&LeftUpVectorBar;": "\u2958",
          "&LeftVector;": "\u21BC",
          "&LeftVectorBar;": "\u2952",
          "&Leftarrow;": "\u21D0",
          "&Leftrightarrow;": "\u21D4",
          "&LessEqualGreater;": "\u22DA",
          "&LessFullEqual;": "\u2266",
          "&LessGreater;": "\u2276",
          "&LessLess;": "\u2AA1",
          "&LessSlantEqual;": "\u2A7D",
          "&LessTilde;": "\u2272",
          "&Lfr;": "\uD835\uDD0F",
          "&Ll;": "\u22D8",
          "&Lleftarrow;": "\u21DA",
          "&Lmidot;": "\u013F",
          "&LongLeftArrow;": "\u27F5",
          "&LongLeftRightArrow;": "\u27F7",
          "&LongRightArrow;": "\u27F6",
          "&Longleftarrow;": "\u27F8",
          "&Longleftrightarrow;": "\u27FA",
          "&Longrightarrow;": "\u27F9",
          "&Lopf;": "\uD835\uDD43",
          "&LowerLeftArrow;": "\u2199",
          "&LowerRightArrow;": "\u2198",
          "&Lscr;": "\u2112",
          "&Lsh;": "\u21B0",
          "&Lstrok;": "\u0141",
          "&Lt;": "\u226A",
          "&Map;": "\u2905",
          "&Mcy;": "\u041C",
          "&MediumSpace;": "\u205F",
          "&Mellintrf;": "\u2133",
          "&Mfr;": "\uD835\uDD10",
          "&MinusPlus;": "\u2213",
          "&Mopf;": "\uD835\uDD44",
          "&Mscr;": "\u2133",
          "&Mu;": "\u039C",
          "&NJcy;": "\u040A",
          "&Nacute;": "\u0143",
          "&Ncaron;": "\u0147",
          "&Ncedil;": "\u0145",
          "&Ncy;": "\u041D",
          "&NegativeMediumSpace;": "\u200B",
          "&NegativeThickSpace;": "\u200B",
          "&NegativeThinSpace;": "\u200B",
          "&NegativeVeryThinSpace;": "\u200B",
          "&NestedGreaterGreater;": "\u226B",
          "&NestedLessLess;": "\u226A",
          "&NewLine;": "\n",
          "&Nfr;": "\uD835\uDD11",
          "&NoBreak;": "\u2060",
          "&NonBreakingSpace;": "\xA0",
          "&Nopf;": "\u2115",
          "&Not;": "\u2AEC",
          "&NotCongruent;": "\u2262",
          "&NotCupCap;": "\u226D",
          "&NotDoubleVerticalBar;": "\u2226",
          "&NotElement;": "\u2209",
          "&NotEqual;": "\u2260",
          "&NotEqualTilde;": "\u2242\u0338",
          "&NotExists;": "\u2204",
          "&NotGreater;": "\u226F",
          "&NotGreaterEqual;": "\u2271",
          "&NotGreaterFullEqual;": "\u2267\u0338",
          "&NotGreaterGreater;": "\u226B\u0338",
          "&NotGreaterLess;": "\u2279",
          "&NotGreaterSlantEqual;": "\u2A7E\u0338",
          "&NotGreaterTilde;": "\u2275",
          "&NotHumpDownHump;": "\u224E\u0338",
          "&NotHumpEqual;": "\u224F\u0338",
          "&NotLeftTriangle;": "\u22EA",
          "&NotLeftTriangleBar;": "\u29CF\u0338",
          "&NotLeftTriangleEqual;": "\u22EC",
          "&NotLess;": "\u226E",
          "&NotLessEqual;": "\u2270",
          "&NotLessGreater;": "\u2278",
          "&NotLessLess;": "\u226A\u0338",
          "&NotLessSlantEqual;": "\u2A7D\u0338",
          "&NotLessTilde;": "\u2274",
          "&NotNestedGreaterGreater;": "\u2AA2\u0338",
          "&NotNestedLessLess;": "\u2AA1\u0338",
          "&NotPrecedes;": "\u2280",
          "&NotPrecedesEqual;": "\u2AAF\u0338",
          "&NotPrecedesSlantEqual;": "\u22E0",
          "&NotReverseElement;": "\u220C",
          "&NotRightTriangle;": "\u22EB",
          "&NotRightTriangleBar;": "\u29D0\u0338",
          "&NotRightTriangleEqual;": "\u22ED",
          "&NotSquareSubset;": "\u228F\u0338",
          "&NotSquareSubsetEqual;": "\u22E2",
          "&NotSquareSuperset;": "\u2290\u0338",
          "&NotSquareSupersetEqual;": "\u22E3",
          "&NotSubset;": "\u2282\u20D2",
          "&NotSubsetEqual;": "\u2288",
          "&NotSucceeds;": "\u2281",
          "&NotSucceedsEqual;": "\u2AB0\u0338",
          "&NotSucceedsSlantEqual;": "\u22E1",
          "&NotSucceedsTilde;": "\u227F\u0338",
          "&NotSuperset;": "\u2283\u20D2",
          "&NotSupersetEqual;": "\u2289",
          "&NotTilde;": "\u2241",
          "&NotTildeEqual;": "\u2244",
          "&NotTildeFullEqual;": "\u2247",
          "&NotTildeTilde;": "\u2249",
          "&NotVerticalBar;": "\u2224",
          "&Nscr;": "\uD835\uDCA9",
          "&Ntilde": "\xD1",
          "&Ntilde;": "\xD1",
          "&Nu;": "\u039D",
          "&OElig;": "\u0152",
          "&Oacute": "\xD3",
          "&Oacute;": "\xD3",
          "&Ocirc": "\xD4",
          "&Ocirc;": "\xD4",
          "&Ocy;": "\u041E",
          "&Odblac;": "\u0150",
          "&Ofr;": "\uD835\uDD12",
          "&Ograve": "\xD2",
          "&Ograve;": "\xD2",
          "&Omacr;": "\u014C",
          "&Omega;": "\u03A9",
          "&Omicron;": "\u039F",
          "&Oopf;": "\uD835\uDD46",
          "&OpenCurlyDoubleQuote;": "\u201C",
          "&OpenCurlyQuote;": "\u2018",
          "&Or;": "\u2A54",
          "&Oscr;": "\uD835\uDCAA",
          "&Oslash": "\xD8",
          "&Oslash;": "\xD8",
          "&Otilde": "\xD5",
          "&Otilde;": "\xD5",
          "&Otimes;": "\u2A37",
          "&Ouml": "\xD6",
          "&Ouml;": "\xD6",
          "&OverBar;": "\u203E",
          "&OverBrace;": "\u23DE",
          "&OverBracket;": "\u23B4",
          "&OverParenthesis;": "\u23DC",
          "&PartialD;": "\u2202",
          "&Pcy;": "\u041F",
          "&Pfr;": "\uD835\uDD13",
          "&Phi;": "\u03A6",
          "&Pi;": "\u03A0",
          "&PlusMinus;": "\xB1",
          "&Poincareplane;": "\u210C",
          "&Popf;": "\u2119",
          "&Pr;": "\u2ABB",
          "&Precedes;": "\u227A",
          "&PrecedesEqual;": "\u2AAF",
          "&PrecedesSlantEqual;": "\u227C",
          "&PrecedesTilde;": "\u227E",
          "&Prime;": "\u2033",
          "&Product;": "\u220F",
          "&Proportion;": "\u2237",
          "&Proportional;": "\u221D",
          "&Pscr;": "\uD835\uDCAB",
          "&Psi;": "\u03A8",
          "&QUOT": '"',
          "&QUOT;": '"',
          "&Qfr;": "\uD835\uDD14",
          "&Qopf;": "\u211A",
          "&Qscr;": "\uD835\uDCAC",
          "&RBarr;": "\u2910",
          "&REG": "\xAE",
          "&REG;": "\xAE",
          "&Racute;": "\u0154",
          "&Rang;": "\u27EB",
          "&Rarr;": "\u21A0",
          "&Rarrtl;": "\u2916",
          "&Rcaron;": "\u0158",
          "&Rcedil;": "\u0156",
          "&Rcy;": "\u0420",
          "&Re;": "\u211C",
          "&ReverseElement;": "\u220B",
          "&ReverseEquilibrium;": "\u21CB",
          "&ReverseUpEquilibrium;": "\u296F",
          "&Rfr;": "\u211C",
          "&Rho;": "\u03A1",
          "&RightAngleBracket;": "\u27E9",
          "&RightArrow;": "\u2192",
          "&RightArrowBar;": "\u21E5",
          "&RightArrowLeftArrow;": "\u21C4",
          "&RightCeiling;": "\u2309",
          "&RightDoubleBracket;": "\u27E7",
          "&RightDownTeeVector;": "\u295D",
          "&RightDownVector;": "\u21C2",
          "&RightDownVectorBar;": "\u2955",
          "&RightFloor;": "\u230B",
          "&RightTee;": "\u22A2",
          "&RightTeeArrow;": "\u21A6",
          "&RightTeeVector;": "\u295B",
          "&RightTriangle;": "\u22B3",
          "&RightTriangleBar;": "\u29D0",
          "&RightTriangleEqual;": "\u22B5",
          "&RightUpDownVector;": "\u294F",
          "&RightUpTeeVector;": "\u295C",
          "&RightUpVector;": "\u21BE",
          "&RightUpVectorBar;": "\u2954",
          "&RightVector;": "\u21C0",
          "&RightVectorBar;": "\u2953",
          "&Rightarrow;": "\u21D2",
          "&Ropf;": "\u211D",
          "&RoundImplies;": "\u2970",
          "&Rrightarrow;": "\u21DB",
          "&Rscr;": "\u211B",
          "&Rsh;": "\u21B1",
          "&RuleDelayed;": "\u29F4",
          "&SHCHcy;": "\u0429",
          "&SHcy;": "\u0428",
          "&SOFTcy;": "\u042C",
          "&Sacute;": "\u015A",
          "&Sc;": "\u2ABC",
          "&Scaron;": "\u0160",
          "&Scedil;": "\u015E",
          "&Scirc;": "\u015C",
          "&Scy;": "\u0421",
          "&Sfr;": "\uD835\uDD16",
          "&ShortDownArrow;": "\u2193",
          "&ShortLeftArrow;": "\u2190",
          "&ShortRightArrow;": "\u2192",
          "&ShortUpArrow;": "\u2191",
          "&Sigma;": "\u03A3",
          "&SmallCircle;": "\u2218",
          "&Sopf;": "\uD835\uDD4A",
          "&Sqrt;": "\u221A",
          "&Square;": "\u25A1",
          "&SquareIntersection;": "\u2293",
          "&SquareSubset;": "\u228F",
          "&SquareSubsetEqual;": "\u2291",
          "&SquareSuperset;": "\u2290",
          "&SquareSupersetEqual;": "\u2292",
          "&SquareUnion;": "\u2294",
          "&Sscr;": "\uD835\uDCAE",
          "&Star;": "\u22C6",
          "&Sub;": "\u22D0",
          "&Subset;": "\u22D0",
          "&SubsetEqual;": "\u2286",
          "&Succeeds;": "\u227B",
          "&SucceedsEqual;": "\u2AB0",
          "&SucceedsSlantEqual;": "\u227D",
          "&SucceedsTilde;": "\u227F",
          "&SuchThat;": "\u220B",
          "&Sum;": "\u2211",
          "&Sup;": "\u22D1",
          "&Superset;": "\u2283",
          "&SupersetEqual;": "\u2287",
          "&Supset;": "\u22D1",
          "&THORN": "\xDE",
          "&THORN;": "\xDE",
          "&TRADE;": "\u2122",
          "&TSHcy;": "\u040B",
          "&TScy;": "\u0426",
          "&Tab;": "	",
          "&Tau;": "\u03A4",
          "&Tcaron;": "\u0164",
          "&Tcedil;": "\u0162",
          "&Tcy;": "\u0422",
          "&Tfr;": "\uD835\uDD17",
          "&Therefore;": "\u2234",
          "&Theta;": "\u0398",
          "&ThickSpace;": "\u205F\u200A",
          "&ThinSpace;": "\u2009",
          "&Tilde;": "\u223C",
          "&TildeEqual;": "\u2243",
          "&TildeFullEqual;": "\u2245",
          "&TildeTilde;": "\u2248",
          "&Topf;": "\uD835\uDD4B",
          "&TripleDot;": "\u20DB",
          "&Tscr;": "\uD835\uDCAF",
          "&Tstrok;": "\u0166",
          "&Uacute": "\xDA",
          "&Uacute;": "\xDA",
          "&Uarr;": "\u219F",
          "&Uarrocir;": "\u2949",
          "&Ubrcy;": "\u040E",
          "&Ubreve;": "\u016C",
          "&Ucirc": "\xDB",
          "&Ucirc;": "\xDB",
          "&Ucy;": "\u0423",
          "&Udblac;": "\u0170",
          "&Ufr;": "\uD835\uDD18",
          "&Ugrave": "\xD9",
          "&Ugrave;": "\xD9",
          "&Umacr;": "\u016A",
          "&UnderBar;": "_",
          "&UnderBrace;": "\u23DF",
          "&UnderBracket;": "\u23B5",
          "&UnderParenthesis;": "\u23DD",
          "&Union;": "\u22C3",
          "&UnionPlus;": "\u228E",
          "&Uogon;": "\u0172",
          "&Uopf;": "\uD835\uDD4C",
          "&UpArrow;": "\u2191",
          "&UpArrowBar;": "\u2912",
          "&UpArrowDownArrow;": "\u21C5",
          "&UpDownArrow;": "\u2195",
          "&UpEquilibrium;": "\u296E",
          "&UpTee;": "\u22A5",
          "&UpTeeArrow;": "\u21A5",
          "&Uparrow;": "\u21D1",
          "&Updownarrow;": "\u21D5",
          "&UpperLeftArrow;": "\u2196",
          "&UpperRightArrow;": "\u2197",
          "&Upsi;": "\u03D2",
          "&Upsilon;": "\u03A5",
          "&Uring;": "\u016E",
          "&Uscr;": "\uD835\uDCB0",
          "&Utilde;": "\u0168",
          "&Uuml": "\xDC",
          "&Uuml;": "\xDC",
          "&VDash;": "\u22AB",
          "&Vbar;": "\u2AEB",
          "&Vcy;": "\u0412",
          "&Vdash;": "\u22A9",
          "&Vdashl;": "\u2AE6",
          "&Vee;": "\u22C1",
          "&Verbar;": "\u2016",
          "&Vert;": "\u2016",
          "&VerticalBar;": "\u2223",
          "&VerticalLine;": "|",
          "&VerticalSeparator;": "\u2758",
          "&VerticalTilde;": "\u2240",
          "&VeryThinSpace;": "\u200A",
          "&Vfr;": "\uD835\uDD19",
          "&Vopf;": "\uD835\uDD4D",
          "&Vscr;": "\uD835\uDCB1",
          "&Vvdash;": "\u22AA",
          "&Wcirc;": "\u0174",
          "&Wedge;": "\u22C0",
          "&Wfr;": "\uD835\uDD1A",
          "&Wopf;": "\uD835\uDD4E",
          "&Wscr;": "\uD835\uDCB2",
          "&Xfr;": "\uD835\uDD1B",
          "&Xi;": "\u039E",
          "&Xopf;": "\uD835\uDD4F",
          "&Xscr;": "\uD835\uDCB3",
          "&YAcy;": "\u042F",
          "&YIcy;": "\u0407",
          "&YUcy;": "\u042E",
          "&Yacute": "\xDD",
          "&Yacute;": "\xDD",
          "&Ycirc;": "\u0176",
          "&Ycy;": "\u042B",
          "&Yfr;": "\uD835\uDD1C",
          "&Yopf;": "\uD835\uDD50",
          "&Yscr;": "\uD835\uDCB4",
          "&Yuml;": "\u0178",
          "&ZHcy;": "\u0416",
          "&Zacute;": "\u0179",
          "&Zcaron;": "\u017D",
          "&Zcy;": "\u0417",
          "&Zdot;": "\u017B",
          "&ZeroWidthSpace;": "\u200B",
          "&Zeta;": "\u0396",
          "&Zfr;": "\u2128",
          "&Zopf;": "\u2124",
          "&Zscr;": "\uD835\uDCB5",
          "&aacute": "\xE1",
          "&aacute;": "\xE1",
          "&abreve;": "\u0103",
          "&ac;": "\u223E",
          "&acE;": "\u223E\u0333",
          "&acd;": "\u223F",
          "&acirc": "\xE2",
          "&acirc;": "\xE2",
          "&acute": "\xB4",
          "&acute;": "\xB4",
          "&acy;": "\u0430",
          "&aelig": "\xE6",
          "&aelig;": "\xE6",
          "&af;": "\u2061",
          "&afr;": "\uD835\uDD1E",
          "&agrave": "\xE0",
          "&agrave;": "\xE0",
          "&alefsym;": "\u2135",
          "&aleph;": "\u2135",
          "&alpha;": "\u03B1",
          "&amacr;": "\u0101",
          "&amalg;": "\u2A3F",
          "&amp": "&",
          "&amp;": "&",
          "&and;": "\u2227",
          "&andand;": "\u2A55",
          "&andd;": "\u2A5C",
          "&andslope;": "\u2A58",
          "&andv;": "\u2A5A",
          "&ang;": "\u2220",
          "&ange;": "\u29A4",
          "&angle;": "\u2220",
          "&angmsd;": "\u2221",
          "&angmsdaa;": "\u29A8",
          "&angmsdab;": "\u29A9",
          "&angmsdac;": "\u29AA",
          "&angmsdad;": "\u29AB",
          "&angmsdae;": "\u29AC",
          "&angmsdaf;": "\u29AD",
          "&angmsdag;": "\u29AE",
          "&angmsdah;": "\u29AF",
          "&angrt;": "\u221F",
          "&angrtvb;": "\u22BE",
          "&angrtvbd;": "\u299D",
          "&angsph;": "\u2222",
          "&angst;": "\xC5",
          "&angzarr;": "\u237C",
          "&aogon;": "\u0105",
          "&aopf;": "\uD835\uDD52",
          "&ap;": "\u2248",
          "&apE;": "\u2A70",
          "&apacir;": "\u2A6F",
          "&ape;": "\u224A",
          "&apid;": "\u224B",
          "&apos;": "'",
          "&approx;": "\u2248",
          "&approxeq;": "\u224A",
          "&aring": "\xE5",
          "&aring;": "\xE5",
          "&ascr;": "\uD835\uDCB6",
          "&ast;": "*",
          "&asymp;": "\u2248",
          "&asympeq;": "\u224D",
          "&atilde": "\xE3",
          "&atilde;": "\xE3",
          "&auml": "\xE4",
          "&auml;": "\xE4",
          "&awconint;": "\u2233",
          "&awint;": "\u2A11",
          "&bNot;": "\u2AED",
          "&backcong;": "\u224C",
          "&backepsilon;": "\u03F6",
          "&backprime;": "\u2035",
          "&backsim;": "\u223D",
          "&backsimeq;": "\u22CD",
          "&barvee;": "\u22BD",
          "&barwed;": "\u2305",
          "&barwedge;": "\u2305",
          "&bbrk;": "\u23B5",
          "&bbrktbrk;": "\u23B6",
          "&bcong;": "\u224C",
          "&bcy;": "\u0431",
          "&bdquo;": "\u201E",
          "&becaus;": "\u2235",
          "&because;": "\u2235",
          "&bemptyv;": "\u29B0",
          "&bepsi;": "\u03F6",
          "&bernou;": "\u212C",
          "&beta;": "\u03B2",
          "&beth;": "\u2136",
          "&between;": "\u226C",
          "&bfr;": "\uD835\uDD1F",
          "&bigcap;": "\u22C2",
          "&bigcirc;": "\u25EF",
          "&bigcup;": "\u22C3",
          "&bigodot;": "\u2A00",
          "&bigoplus;": "\u2A01",
          "&bigotimes;": "\u2A02",
          "&bigsqcup;": "\u2A06",
          "&bigstar;": "\u2605",
          "&bigtriangledown;": "\u25BD",
          "&bigtriangleup;": "\u25B3",
          "&biguplus;": "\u2A04",
          "&bigvee;": "\u22C1",
          "&bigwedge;": "\u22C0",
          "&bkarow;": "\u290D",
          "&blacklozenge;": "\u29EB",
          "&blacksquare;": "\u25AA",
          "&blacktriangle;": "\u25B4",
          "&blacktriangledown;": "\u25BE",
          "&blacktriangleleft;": "\u25C2",
          "&blacktriangleright;": "\u25B8",
          "&blank;": "\u2423",
          "&blk12;": "\u2592",
          "&blk14;": "\u2591",
          "&blk34;": "\u2593",
          "&block;": "\u2588",
          "&bne;": "=\u20E5",
          "&bnequiv;": "\u2261\u20E5",
          "&bnot;": "\u2310",
          "&bopf;": "\uD835\uDD53",
          "&bot;": "\u22A5",
          "&bottom;": "\u22A5",
          "&bowtie;": "\u22C8",
          "&boxDL;": "\u2557",
          "&boxDR;": "\u2554",
          "&boxDl;": "\u2556",
          "&boxDr;": "\u2553",
          "&boxH;": "\u2550",
          "&boxHD;": "\u2566",
          "&boxHU;": "\u2569",
          "&boxHd;": "\u2564",
          "&boxHu;": "\u2567",
          "&boxUL;": "\u255D",
          "&boxUR;": "\u255A",
          "&boxUl;": "\u255C",
          "&boxUr;": "\u2559",
          "&boxV;": "\u2551",
          "&boxVH;": "\u256C",
          "&boxVL;": "\u2563",
          "&boxVR;": "\u2560",
          "&boxVh;": "\u256B",
          "&boxVl;": "\u2562",
          "&boxVr;": "\u255F",
          "&boxbox;": "\u29C9",
          "&boxdL;": "\u2555",
          "&boxdR;": "\u2552",
          "&boxdl;": "\u2510",
          "&boxdr;": "\u250C",
          "&boxh;": "\u2500",
          "&boxhD;": "\u2565",
          "&boxhU;": "\u2568",
          "&boxhd;": "\u252C",
          "&boxhu;": "\u2534",
          "&boxminus;": "\u229F",
          "&boxplus;": "\u229E",
          "&boxtimes;": "\u22A0",
          "&boxuL;": "\u255B",
          "&boxuR;": "\u2558",
          "&boxul;": "\u2518",
          "&boxur;": "\u2514",
          "&boxv;": "\u2502",
          "&boxvH;": "\u256A",
          "&boxvL;": "\u2561",
          "&boxvR;": "\u255E",
          "&boxvh;": "\u253C",
          "&boxvl;": "\u2524",
          "&boxvr;": "\u251C",
          "&bprime;": "\u2035",
          "&breve;": "\u02D8",
          "&brvbar": "\xA6",
          "&brvbar;": "\xA6",
          "&bscr;": "\uD835\uDCB7",
          "&bsemi;": "\u204F",
          "&bsim;": "\u223D",
          "&bsime;": "\u22CD",
          "&bsol;": "\\",
          "&bsolb;": "\u29C5",
          "&bsolhsub;": "\u27C8",
          "&bull;": "\u2022",
          "&bullet;": "\u2022",
          "&bump;": "\u224E",
          "&bumpE;": "\u2AAE",
          "&bumpe;": "\u224F",
          "&bumpeq;": "\u224F",
          "&cacute;": "\u0107",
          "&cap;": "\u2229",
          "&capand;": "\u2A44",
          "&capbrcup;": "\u2A49",
          "&capcap;": "\u2A4B",
          "&capcup;": "\u2A47",
          "&capdot;": "\u2A40",
          "&caps;": "\u2229\uFE00",
          "&caret;": "\u2041",
          "&caron;": "\u02C7",
          "&ccaps;": "\u2A4D",
          "&ccaron;": "\u010D",
          "&ccedil": "\xE7",
          "&ccedil;": "\xE7",
          "&ccirc;": "\u0109",
          "&ccups;": "\u2A4C",
          "&ccupssm;": "\u2A50",
          "&cdot;": "\u010B",
          "&cedil": "\xB8",
          "&cedil;": "\xB8",
          "&cemptyv;": "\u29B2",
          "&cent": "\xA2",
          "&cent;": "\xA2",
          "&centerdot;": "\xB7",
          "&cfr;": "\uD835\uDD20",
          "&chcy;": "\u0447",
          "&check;": "\u2713",
          "&checkmark;": "\u2713",
          "&chi;": "\u03C7",
          "&cir;": "\u25CB",
          "&cirE;": "\u29C3",
          "&circ;": "\u02C6",
          "&circeq;": "\u2257",
          "&circlearrowleft;": "\u21BA",
          "&circlearrowright;": "\u21BB",
          "&circledR;": "\xAE",
          "&circledS;": "\u24C8",
          "&circledast;": "\u229B",
          "&circledcirc;": "\u229A",
          "&circleddash;": "\u229D",
          "&cire;": "\u2257",
          "&cirfnint;": "\u2A10",
          "&cirmid;": "\u2AEF",
          "&cirscir;": "\u29C2",
          "&clubs;": "\u2663",
          "&clubsuit;": "\u2663",
          "&colon;": ":",
          "&colone;": "\u2254",
          "&coloneq;": "\u2254",
          "&comma;": ",",
          "&commat;": "@",
          "&comp;": "\u2201",
          "&compfn;": "\u2218",
          "&complement;": "\u2201",
          "&complexes;": "\u2102",
          "&cong;": "\u2245",
          "&congdot;": "\u2A6D",
          "&conint;": "\u222E",
          "&copf;": "\uD835\uDD54",
          "&coprod;": "\u2210",
          "&copy": "\xA9",
          "&copy;": "\xA9",
          "&copysr;": "\u2117",
          "&crarr;": "\u21B5",
          "&cross;": "\u2717",
          "&cscr;": "\uD835\uDCB8",
          "&csub;": "\u2ACF",
          "&csube;": "\u2AD1",
          "&csup;": "\u2AD0",
          "&csupe;": "\u2AD2",
          "&ctdot;": "\u22EF",
          "&cudarrl;": "\u2938",
          "&cudarrr;": "\u2935",
          "&cuepr;": "\u22DE",
          "&cuesc;": "\u22DF",
          "&cularr;": "\u21B6",
          "&cularrp;": "\u293D",
          "&cup;": "\u222A",
          "&cupbrcap;": "\u2A48",
          "&cupcap;": "\u2A46",
          "&cupcup;": "\u2A4A",
          "&cupdot;": "\u228D",
          "&cupor;": "\u2A45",
          "&cups;": "\u222A\uFE00",
          "&curarr;": "\u21B7",
          "&curarrm;": "\u293C",
          "&curlyeqprec;": "\u22DE",
          "&curlyeqsucc;": "\u22DF",
          "&curlyvee;": "\u22CE",
          "&curlywedge;": "\u22CF",
          "&curren": "\xA4",
          "&curren;": "\xA4",
          "&curvearrowleft;": "\u21B6",
          "&curvearrowright;": "\u21B7",
          "&cuvee;": "\u22CE",
          "&cuwed;": "\u22CF",
          "&cwconint;": "\u2232",
          "&cwint;": "\u2231",
          "&cylcty;": "\u232D",
          "&dArr;": "\u21D3",
          "&dHar;": "\u2965",
          "&dagger;": "\u2020",
          "&daleth;": "\u2138",
          "&darr;": "\u2193",
          "&dash;": "\u2010",
          "&dashv;": "\u22A3",
          "&dbkarow;": "\u290F",
          "&dblac;": "\u02DD",
          "&dcaron;": "\u010F",
          "&dcy;": "\u0434",
          "&dd;": "\u2146",
          "&ddagger;": "\u2021",
          "&ddarr;": "\u21CA",
          "&ddotseq;": "\u2A77",
          "&deg": "\xB0",
          "&deg;": "\xB0",
          "&delta;": "\u03B4",
          "&demptyv;": "\u29B1",
          "&dfisht;": "\u297F",
          "&dfr;": "\uD835\uDD21",
          "&dharl;": "\u21C3",
          "&dharr;": "\u21C2",
          "&diam;": "\u22C4",
          "&diamond;": "\u22C4",
          "&diamondsuit;": "\u2666",
          "&diams;": "\u2666",
          "&die;": "\xA8",
          "&digamma;": "\u03DD",
          "&disin;": "\u22F2",
          "&div;": "\xF7",
          "&divide": "\xF7",
          "&divide;": "\xF7",
          "&divideontimes;": "\u22C7",
          "&divonx;": "\u22C7",
          "&djcy;": "\u0452",
          "&dlcorn;": "\u231E",
          "&dlcrop;": "\u230D",
          "&dollar;": "$",
          "&dopf;": "\uD835\uDD55",
          "&dot;": "\u02D9",
          "&doteq;": "\u2250",
          "&doteqdot;": "\u2251",
          "&dotminus;": "\u2238",
          "&dotplus;": "\u2214",
          "&dotsquare;": "\u22A1",
          "&doublebarwedge;": "\u2306",
          "&downarrow;": "\u2193",
          "&downdownarrows;": "\u21CA",
          "&downharpoonleft;": "\u21C3",
          "&downharpoonright;": "\u21C2",
          "&drbkarow;": "\u2910",
          "&drcorn;": "\u231F",
          "&drcrop;": "\u230C",
          "&dscr;": "\uD835\uDCB9",
          "&dscy;": "\u0455",
          "&dsol;": "\u29F6",
          "&dstrok;": "\u0111",
          "&dtdot;": "\u22F1",
          "&dtri;": "\u25BF",
          "&dtrif;": "\u25BE",
          "&duarr;": "\u21F5",
          "&duhar;": "\u296F",
          "&dwangle;": "\u29A6",
          "&dzcy;": "\u045F",
          "&dzigrarr;": "\u27FF",
          "&eDDot;": "\u2A77",
          "&eDot;": "\u2251",
          "&eacute": "\xE9",
          "&eacute;": "\xE9",
          "&easter;": "\u2A6E",
          "&ecaron;": "\u011B",
          "&ecir;": "\u2256",
          "&ecirc": "\xEA",
          "&ecirc;": "\xEA",
          "&ecolon;": "\u2255",
          "&ecy;": "\u044D",
          "&edot;": "\u0117",
          "&ee;": "\u2147",
          "&efDot;": "\u2252",
          "&efr;": "\uD835\uDD22",
          "&eg;": "\u2A9A",
          "&egrave": "\xE8",
          "&egrave;": "\xE8",
          "&egs;": "\u2A96",
          "&egsdot;": "\u2A98",
          "&el;": "\u2A99",
          "&elinters;": "\u23E7",
          "&ell;": "\u2113",
          "&els;": "\u2A95",
          "&elsdot;": "\u2A97",
          "&emacr;": "\u0113",
          "&empty;": "\u2205",
          "&emptyset;": "\u2205",
          "&emptyv;": "\u2205",
          "&emsp13;": "\u2004",
          "&emsp14;": "\u2005",
          "&emsp;": "\u2003",
          "&eng;": "\u014B",
          "&ensp;": "\u2002",
          "&eogon;": "\u0119",
          "&eopf;": "\uD835\uDD56",
          "&epar;": "\u22D5",
          "&eparsl;": "\u29E3",
          "&eplus;": "\u2A71",
          "&epsi;": "\u03B5",
          "&epsilon;": "\u03B5",
          "&epsiv;": "\u03F5",
          "&eqcirc;": "\u2256",
          "&eqcolon;": "\u2255",
          "&eqsim;": "\u2242",
          "&eqslantgtr;": "\u2A96",
          "&eqslantless;": "\u2A95",
          "&equals;": "=",
          "&equest;": "\u225F",
          "&equiv;": "\u2261",
          "&equivDD;": "\u2A78",
          "&eqvparsl;": "\u29E5",
          "&erDot;": "\u2253",
          "&erarr;": "\u2971",
          "&escr;": "\u212F",
          "&esdot;": "\u2250",
          "&esim;": "\u2242",
          "&eta;": "\u03B7",
          "&eth": "\xF0",
          "&eth;": "\xF0",
          "&euml": "\xEB",
          "&euml;": "\xEB",
          "&euro;": "\u20AC",
          "&excl;": "!",
          "&exist;": "\u2203",
          "&expectation;": "\u2130",
          "&exponentiale;": "\u2147",
          "&fallingdotseq;": "\u2252",
          "&fcy;": "\u0444",
          "&female;": "\u2640",
          "&ffilig;": "\uFB03",
          "&fflig;": "\uFB00",
          "&ffllig;": "\uFB04",
          "&ffr;": "\uD835\uDD23",
          "&filig;": "\uFB01",
          "&fjlig;": "fj",
          "&flat;": "\u266D",
          "&fllig;": "\uFB02",
          "&fltns;": "\u25B1",
          "&fnof;": "\u0192",
          "&fopf;": "\uD835\uDD57",
          "&forall;": "\u2200",
          "&fork;": "\u22D4",
          "&forkv;": "\u2AD9",
          "&fpartint;": "\u2A0D",
          "&frac12": "\xBD",
          "&frac12;": "\xBD",
          "&frac13;": "\u2153",
          "&frac14": "\xBC",
          "&frac14;": "\xBC",
          "&frac15;": "\u2155",
          "&frac16;": "\u2159",
          "&frac18;": "\u215B",
          "&frac23;": "\u2154",
          "&frac25;": "\u2156",
          "&frac34": "\xBE",
          "&frac34;": "\xBE",
          "&frac35;": "\u2157",
          "&frac38;": "\u215C",
          "&frac45;": "\u2158",
          "&frac56;": "\u215A",
          "&frac58;": "\u215D",
          "&frac78;": "\u215E",
          "&frasl;": "\u2044",
          "&frown;": "\u2322",
          "&fscr;": "\uD835\uDCBB",
          "&gE;": "\u2267",
          "&gEl;": "\u2A8C",
          "&gacute;": "\u01F5",
          "&gamma;": "\u03B3",
          "&gammad;": "\u03DD",
          "&gap;": "\u2A86",
          "&gbreve;": "\u011F",
          "&gcirc;": "\u011D",
          "&gcy;": "\u0433",
          "&gdot;": "\u0121",
          "&ge;": "\u2265",
          "&gel;": "\u22DB",
          "&geq;": "\u2265",
          "&geqq;": "\u2267",
          "&geqslant;": "\u2A7E",
          "&ges;": "\u2A7E",
          "&gescc;": "\u2AA9",
          "&gesdot;": "\u2A80",
          "&gesdoto;": "\u2A82",
          "&gesdotol;": "\u2A84",
          "&gesl;": "\u22DB\uFE00",
          "&gesles;": "\u2A94",
          "&gfr;": "\uD835\uDD24",
          "&gg;": "\u226B",
          "&ggg;": "\u22D9",
          "&gimel;": "\u2137",
          "&gjcy;": "\u0453",
          "&gl;": "\u2277",
          "&glE;": "\u2A92",
          "&gla;": "\u2AA5",
          "&glj;": "\u2AA4",
          "&gnE;": "\u2269",
          "&gnap;": "\u2A8A",
          "&gnapprox;": "\u2A8A",
          "&gne;": "\u2A88",
          "&gneq;": "\u2A88",
          "&gneqq;": "\u2269",
          "&gnsim;": "\u22E7",
          "&gopf;": "\uD835\uDD58",
          "&grave;": "`",
          "&gscr;": "\u210A",
          "&gsim;": "\u2273",
          "&gsime;": "\u2A8E",
          "&gsiml;": "\u2A90",
          "&gt": ">",
          "&gt;": ">",
          "&gtcc;": "\u2AA7",
          "&gtcir;": "\u2A7A",
          "&gtdot;": "\u22D7",
          "&gtlPar;": "\u2995",
          "&gtquest;": "\u2A7C",
          "&gtrapprox;": "\u2A86",
          "&gtrarr;": "\u2978",
          "&gtrdot;": "\u22D7",
          "&gtreqless;": "\u22DB",
          "&gtreqqless;": "\u2A8C",
          "&gtrless;": "\u2277",
          "&gtrsim;": "\u2273",
          "&gvertneqq;": "\u2269\uFE00",
          "&gvnE;": "\u2269\uFE00",
          "&hArr;": "\u21D4",
          "&hairsp;": "\u200A",
          "&half;": "\xBD",
          "&hamilt;": "\u210B",
          "&hardcy;": "\u044A",
          "&harr;": "\u2194",
          "&harrcir;": "\u2948",
          "&harrw;": "\u21AD",
          "&hbar;": "\u210F",
          "&hcirc;": "\u0125",
          "&hearts;": "\u2665",
          "&heartsuit;": "\u2665",
          "&hellip;": "\u2026",
          "&hercon;": "\u22B9",
          "&hfr;": "\uD835\uDD25",
          "&hksearow;": "\u2925",
          "&hkswarow;": "\u2926",
          "&hoarr;": "\u21FF",
          "&homtht;": "\u223B",
          "&hookleftarrow;": "\u21A9",
          "&hookrightarrow;": "\u21AA",
          "&hopf;": "\uD835\uDD59",
          "&horbar;": "\u2015",
          "&hscr;": "\uD835\uDCBD",
          "&hslash;": "\u210F",
          "&hstrok;": "\u0127",
          "&hybull;": "\u2043",
          "&hyphen;": "\u2010",
          "&iacute": "\xED",
          "&iacute;": "\xED",
          "&ic;": "\u2063",
          "&icirc": "\xEE",
          "&icirc;": "\xEE",
          "&icy;": "\u0438",
          "&iecy;": "\u0435",
          "&iexcl": "\xA1",
          "&iexcl;": "\xA1",
          "&iff;": "\u21D4",
          "&ifr;": "\uD835\uDD26",
          "&igrave": "\xEC",
          "&igrave;": "\xEC",
          "&ii;": "\u2148",
          "&iiiint;": "\u2A0C",
          "&iiint;": "\u222D",
          "&iinfin;": "\u29DC",
          "&iiota;": "\u2129",
          "&ijlig;": "\u0133",
          "&imacr;": "\u012B",
          "&image;": "\u2111",
          "&imagline;": "\u2110",
          "&imagpart;": "\u2111",
          "&imath;": "\u0131",
          "&imof;": "\u22B7",
          "&imped;": "\u01B5",
          "&in;": "\u2208",
          "&incare;": "\u2105",
          "&infin;": "\u221E",
          "&infintie;": "\u29DD",
          "&inodot;": "\u0131",
          "&int;": "\u222B",
          "&intcal;": "\u22BA",
          "&integers;": "\u2124",
          "&intercal;": "\u22BA",
          "&intlarhk;": "\u2A17",
          "&intprod;": "\u2A3C",
          "&iocy;": "\u0451",
          "&iogon;": "\u012F",
          "&iopf;": "\uD835\uDD5A",
          "&iota;": "\u03B9",
          "&iprod;": "\u2A3C",
          "&iquest": "\xBF",
          "&iquest;": "\xBF",
          "&iscr;": "\uD835\uDCBE",
          "&isin;": "\u2208",
          "&isinE;": "\u22F9",
          "&isindot;": "\u22F5",
          "&isins;": "\u22F4",
          "&isinsv;": "\u22F3",
          "&isinv;": "\u2208",
          "&it;": "\u2062",
          "&itilde;": "\u0129",
          "&iukcy;": "\u0456",
          "&iuml": "\xEF",
          "&iuml;": "\xEF",
          "&jcirc;": "\u0135",
          "&jcy;": "\u0439",
          "&jfr;": "\uD835\uDD27",
          "&jmath;": "\u0237",
          "&jopf;": "\uD835\uDD5B",
          "&jscr;": "\uD835\uDCBF",
          "&jsercy;": "\u0458",
          "&jukcy;": "\u0454",
          "&kappa;": "\u03BA",
          "&kappav;": "\u03F0",
          "&kcedil;": "\u0137",
          "&kcy;": "\u043A",
          "&kfr;": "\uD835\uDD28",
          "&kgreen;": "\u0138",
          "&khcy;": "\u0445",
          "&kjcy;": "\u045C",
          "&kopf;": "\uD835\uDD5C",
          "&kscr;": "\uD835\uDCC0",
          "&lAarr;": "\u21DA",
          "&lArr;": "\u21D0",
          "&lAtail;": "\u291B",
          "&lBarr;": "\u290E",
          "&lE;": "\u2266",
          "&lEg;": "\u2A8B",
          "&lHar;": "\u2962",
          "&lacute;": "\u013A",
          "&laemptyv;": "\u29B4",
          "&lagran;": "\u2112",
          "&lambda;": "\u03BB",
          "&lang;": "\u27E8",
          "&langd;": "\u2991",
          "&langle;": "\u27E8",
          "&lap;": "\u2A85",
          "&laquo": "\xAB",
          "&laquo;": "\xAB",
          "&larr;": "\u2190",
          "&larrb;": "\u21E4",
          "&larrbfs;": "\u291F",
          "&larrfs;": "\u291D",
          "&larrhk;": "\u21A9",
          "&larrlp;": "\u21AB",
          "&larrpl;": "\u2939",
          "&larrsim;": "\u2973",
          "&larrtl;": "\u21A2",
          "&lat;": "\u2AAB",
          "&latail;": "\u2919",
          "&late;": "\u2AAD",
          "&lates;": "\u2AAD\uFE00",
          "&lbarr;": "\u290C",
          "&lbbrk;": "\u2772",
          "&lbrace;": "{",
          "&lbrack;": "[",
          "&lbrke;": "\u298B",
          "&lbrksld;": "\u298F",
          "&lbrkslu;": "\u298D",
          "&lcaron;": "\u013E",
          "&lcedil;": "\u013C",
          "&lceil;": "\u2308",
          "&lcub;": "{",
          "&lcy;": "\u043B",
          "&ldca;": "\u2936",
          "&ldquo;": "\u201C",
          "&ldquor;": "\u201E",
          "&ldrdhar;": "\u2967",
          "&ldrushar;": "\u294B",
          "&ldsh;": "\u21B2",
          "&le;": "\u2264",
          "&leftarrow;": "\u2190",
          "&leftarrowtail;": "\u21A2",
          "&leftharpoondown;": "\u21BD",
          "&leftharpoonup;": "\u21BC",
          "&leftleftarrows;": "\u21C7",
          "&leftrightarrow;": "\u2194",
          "&leftrightarrows;": "\u21C6",
          "&leftrightharpoons;": "\u21CB",
          "&leftrightsquigarrow;": "\u21AD",
          "&leftthreetimes;": "\u22CB",
          "&leg;": "\u22DA",
          "&leq;": "\u2264",
          "&leqq;": "\u2266",
          "&leqslant;": "\u2A7D",
          "&les;": "\u2A7D",
          "&lescc;": "\u2AA8",
          "&lesdot;": "\u2A7F",
          "&lesdoto;": "\u2A81",
          "&lesdotor;": "\u2A83",
          "&lesg;": "\u22DA\uFE00",
          "&lesges;": "\u2A93",
          "&lessapprox;": "\u2A85",
          "&lessdot;": "\u22D6",
          "&lesseqgtr;": "\u22DA",
          "&lesseqqgtr;": "\u2A8B",
          "&lessgtr;": "\u2276",
          "&lesssim;": "\u2272",
          "&lfisht;": "\u297C",
          "&lfloor;": "\u230A",
          "&lfr;": "\uD835\uDD29",
          "&lg;": "\u2276",
          "&lgE;": "\u2A91",
          "&lhard;": "\u21BD",
          "&lharu;": "\u21BC",
          "&lharul;": "\u296A",
          "&lhblk;": "\u2584",
          "&ljcy;": "\u0459",
          "&ll;": "\u226A",
          "&llarr;": "\u21C7",
          "&llcorner;": "\u231E",
          "&llhard;": "\u296B",
          "&lltri;": "\u25FA",
          "&lmidot;": "\u0140",
          "&lmoust;": "\u23B0",
          "&lmoustache;": "\u23B0",
          "&lnE;": "\u2268",
          "&lnap;": "\u2A89",
          "&lnapprox;": "\u2A89",
          "&lne;": "\u2A87",
          "&lneq;": "\u2A87",
          "&lneqq;": "\u2268",
          "&lnsim;": "\u22E6",
          "&loang;": "\u27EC",
          "&loarr;": "\u21FD",
          "&lobrk;": "\u27E6",
          "&longleftarrow;": "\u27F5",
          "&longleftrightarrow;": "\u27F7",
          "&longmapsto;": "\u27FC",
          "&longrightarrow;": "\u27F6",
          "&looparrowleft;": "\u21AB",
          "&looparrowright;": "\u21AC",
          "&lopar;": "\u2985",
          "&lopf;": "\uD835\uDD5D",
          "&loplus;": "\u2A2D",
          "&lotimes;": "\u2A34",
          "&lowast;": "\u2217",
          "&lowbar;": "_",
          "&loz;": "\u25CA",
          "&lozenge;": "\u25CA",
          "&lozf;": "\u29EB",
          "&lpar;": "(",
          "&lparlt;": "\u2993",
          "&lrarr;": "\u21C6",
          "&lrcorner;": "\u231F",
          "&lrhar;": "\u21CB",
          "&lrhard;": "\u296D",
          "&lrm;": "\u200E",
          "&lrtri;": "\u22BF",
          "&lsaquo;": "\u2039",
          "&lscr;": "\uD835\uDCC1",
          "&lsh;": "\u21B0",
          "&lsim;": "\u2272",
          "&lsime;": "\u2A8D",
          "&lsimg;": "\u2A8F",
          "&lsqb;": "[",
          "&lsquo;": "\u2018",
          "&lsquor;": "\u201A",
          "&lstrok;": "\u0142",
          "&lt": "<",
          "&lt;": "<",
          "&ltcc;": "\u2AA6",
          "&ltcir;": "\u2A79",
          "&ltdot;": "\u22D6",
          "&lthree;": "\u22CB",
          "&ltimes;": "\u22C9",
          "&ltlarr;": "\u2976",
          "&ltquest;": "\u2A7B",
          "&ltrPar;": "\u2996",
          "&ltri;": "\u25C3",
          "&ltrie;": "\u22B4",
          "&ltrif;": "\u25C2",
          "&lurdshar;": "\u294A",
          "&luruhar;": "\u2966",
          "&lvertneqq;": "\u2268\uFE00",
          "&lvnE;": "\u2268\uFE00",
          "&mDDot;": "\u223A",
          "&macr": "\xAF",
          "&macr;": "\xAF",
          "&male;": "\u2642",
          "&malt;": "\u2720",
          "&maltese;": "\u2720",
          "&map;": "\u21A6",
          "&mapsto;": "\u21A6",
          "&mapstodown;": "\u21A7",
          "&mapstoleft;": "\u21A4",
          "&mapstoup;": "\u21A5",
          "&marker;": "\u25AE",
          "&mcomma;": "\u2A29",
          "&mcy;": "\u043C",
          "&mdash;": "\u2014",
          "&measuredangle;": "\u2221",
          "&mfr;": "\uD835\uDD2A",
          "&mho;": "\u2127",
          "&micro": "\xB5",
          "&micro;": "\xB5",
          "&mid;": "\u2223",
          "&midast;": "*",
          "&midcir;": "\u2AF0",
          "&middot": "\xB7",
          "&middot;": "\xB7",
          "&minus;": "\u2212",
          "&minusb;": "\u229F",
          "&minusd;": "\u2238",
          "&minusdu;": "\u2A2A",
          "&mlcp;": "\u2ADB",
          "&mldr;": "\u2026",
          "&mnplus;": "\u2213",
          "&models;": "\u22A7",
          "&mopf;": "\uD835\uDD5E",
          "&mp;": "\u2213",
          "&mscr;": "\uD835\uDCC2",
          "&mstpos;": "\u223E",
          "&mu;": "\u03BC",
          "&multimap;": "\u22B8",
          "&mumap;": "\u22B8",
          "&nGg;": "\u22D9\u0338",
          "&nGt;": "\u226B\u20D2",
          "&nGtv;": "\u226B\u0338",
          "&nLeftarrow;": "\u21CD",
          "&nLeftrightarrow;": "\u21CE",
          "&nLl;": "\u22D8\u0338",
          "&nLt;": "\u226A\u20D2",
          "&nLtv;": "\u226A\u0338",
          "&nRightarrow;": "\u21CF",
          "&nVDash;": "\u22AF",
          "&nVdash;": "\u22AE",
          "&nabla;": "\u2207",
          "&nacute;": "\u0144",
          "&nang;": "\u2220\u20D2",
          "&nap;": "\u2249",
          "&napE;": "\u2A70\u0338",
          "&napid;": "\u224B\u0338",
          "&napos;": "\u0149",
          "&napprox;": "\u2249",
          "&natur;": "\u266E",
          "&natural;": "\u266E",
          "&naturals;": "\u2115",
          "&nbsp": "\xA0",
          "&nbsp;": "\xA0",
          "&nbump;": "\u224E\u0338",
          "&nbumpe;": "\u224F\u0338",
          "&ncap;": "\u2A43",
          "&ncaron;": "\u0148",
          "&ncedil;": "\u0146",
          "&ncong;": "\u2247",
          "&ncongdot;": "\u2A6D\u0338",
          "&ncup;": "\u2A42",
          "&ncy;": "\u043D",
          "&ndash;": "\u2013",
          "&ne;": "\u2260",
          "&neArr;": "\u21D7",
          "&nearhk;": "\u2924",
          "&nearr;": "\u2197",
          "&nearrow;": "\u2197",
          "&nedot;": "\u2250\u0338",
          "&nequiv;": "\u2262",
          "&nesear;": "\u2928",
          "&nesim;": "\u2242\u0338",
          "&nexist;": "\u2204",
          "&nexists;": "\u2204",
          "&nfr;": "\uD835\uDD2B",
          "&ngE;": "\u2267\u0338",
          "&nge;": "\u2271",
          "&ngeq;": "\u2271",
          "&ngeqq;": "\u2267\u0338",
          "&ngeqslant;": "\u2A7E\u0338",
          "&nges;": "\u2A7E\u0338",
          "&ngsim;": "\u2275",
          "&ngt;": "\u226F",
          "&ngtr;": "\u226F",
          "&nhArr;": "\u21CE",
          "&nharr;": "\u21AE",
          "&nhpar;": "\u2AF2",
          "&ni;": "\u220B",
          "&nis;": "\u22FC",
          "&nisd;": "\u22FA",
          "&niv;": "\u220B",
          "&njcy;": "\u045A",
          "&nlArr;": "\u21CD",
          "&nlE;": "\u2266\u0338",
          "&nlarr;": "\u219A",
          "&nldr;": "\u2025",
          "&nle;": "\u2270",
          "&nleftarrow;": "\u219A",
          "&nleftrightarrow;": "\u21AE",
          "&nleq;": "\u2270",
          "&nleqq;": "\u2266\u0338",
          "&nleqslant;": "\u2A7D\u0338",
          "&nles;": "\u2A7D\u0338",
          "&nless;": "\u226E",
          "&nlsim;": "\u2274",
          "&nlt;": "\u226E",
          "&nltri;": "\u22EA",
          "&nltrie;": "\u22EC",
          "&nmid;": "\u2224",
          "&nopf;": "\uD835\uDD5F",
          "&not": "\xAC",
          "&not;": "\xAC",
          "&notin;": "\u2209",
          "&notinE;": "\u22F9\u0338",
          "&notindot;": "\u22F5\u0338",
          "&notinva;": "\u2209",
          "&notinvb;": "\u22F7",
          "&notinvc;": "\u22F6",
          "&notni;": "\u220C",
          "&notniva;": "\u220C",
          "&notnivb;": "\u22FE",
          "&notnivc;": "\u22FD",
          "&npar;": "\u2226",
          "&nparallel;": "\u2226",
          "&nparsl;": "\u2AFD\u20E5",
          "&npart;": "\u2202\u0338",
          "&npolint;": "\u2A14",
          "&npr;": "\u2280",
          "&nprcue;": "\u22E0",
          "&npre;": "\u2AAF\u0338",
          "&nprec;": "\u2280",
          "&npreceq;": "\u2AAF\u0338",
          "&nrArr;": "\u21CF",
          "&nrarr;": "\u219B",
          "&nrarrc;": "\u2933\u0338",
          "&nrarrw;": "\u219D\u0338",
          "&nrightarrow;": "\u219B",
          "&nrtri;": "\u22EB",
          "&nrtrie;": "\u22ED",
          "&nsc;": "\u2281",
          "&nsccue;": "\u22E1",
          "&nsce;": "\u2AB0\u0338",
          "&nscr;": "\uD835\uDCC3",
          "&nshortmid;": "\u2224",
          "&nshortparallel;": "\u2226",
          "&nsim;": "\u2241",
          "&nsime;": "\u2244",
          "&nsimeq;": "\u2244",
          "&nsmid;": "\u2224",
          "&nspar;": "\u2226",
          "&nsqsube;": "\u22E2",
          "&nsqsupe;": "\u22E3",
          "&nsub;": "\u2284",
          "&nsubE;": "\u2AC5\u0338",
          "&nsube;": "\u2288",
          "&nsubset;": "\u2282\u20D2",
          "&nsubseteq;": "\u2288",
          "&nsubseteqq;": "\u2AC5\u0338",
          "&nsucc;": "\u2281",
          "&nsucceq;": "\u2AB0\u0338",
          "&nsup;": "\u2285",
          "&nsupE;": "\u2AC6\u0338",
          "&nsupe;": "\u2289",
          "&nsupset;": "\u2283\u20D2",
          "&nsupseteq;": "\u2289",
          "&nsupseteqq;": "\u2AC6\u0338",
          "&ntgl;": "\u2279",
          "&ntilde": "\xF1",
          "&ntilde;": "\xF1",
          "&ntlg;": "\u2278",
          "&ntriangleleft;": "\u22EA",
          "&ntrianglelefteq;": "\u22EC",
          "&ntriangleright;": "\u22EB",
          "&ntrianglerighteq;": "\u22ED",
          "&nu;": "\u03BD",
          "&num;": "#",
          "&numero;": "\u2116",
          "&numsp;": "\u2007",
          "&nvDash;": "\u22AD",
          "&nvHarr;": "\u2904",
          "&nvap;": "\u224D\u20D2",
          "&nvdash;": "\u22AC",
          "&nvge;": "\u2265\u20D2",
          "&nvgt;": ">\u20D2",
          "&nvinfin;": "\u29DE",
          "&nvlArr;": "\u2902",
          "&nvle;": "\u2264\u20D2",
          "&nvlt;": "<\u20D2",
          "&nvltrie;": "\u22B4\u20D2",
          "&nvrArr;": "\u2903",
          "&nvrtrie;": "\u22B5\u20D2",
          "&nvsim;": "\u223C\u20D2",
          "&nwArr;": "\u21D6",
          "&nwarhk;": "\u2923",
          "&nwarr;": "\u2196",
          "&nwarrow;": "\u2196",
          "&nwnear;": "\u2927",
          "&oS;": "\u24C8",
          "&oacute": "\xF3",
          "&oacute;": "\xF3",
          "&oast;": "\u229B",
          "&ocir;": "\u229A",
          "&ocirc": "\xF4",
          "&ocirc;": "\xF4",
          "&ocy;": "\u043E",
          "&odash;": "\u229D",
          "&odblac;": "\u0151",
          "&odiv;": "\u2A38",
          "&odot;": "\u2299",
          "&odsold;": "\u29BC",
          "&oelig;": "\u0153",
          "&ofcir;": "\u29BF",
          "&ofr;": "\uD835\uDD2C",
          "&ogon;": "\u02DB",
          "&ograve": "\xF2",
          "&ograve;": "\xF2",
          "&ogt;": "\u29C1",
          "&ohbar;": "\u29B5",
          "&ohm;": "\u03A9",
          "&oint;": "\u222E",
          "&olarr;": "\u21BA",
          "&olcir;": "\u29BE",
          "&olcross;": "\u29BB",
          "&oline;": "\u203E",
          "&olt;": "\u29C0",
          "&omacr;": "\u014D",
          "&omega;": "\u03C9",
          "&omicron;": "\u03BF",
          "&omid;": "\u29B6",
          "&ominus;": "\u2296",
          "&oopf;": "\uD835\uDD60",
          "&opar;": "\u29B7",
          "&operp;": "\u29B9",
          "&oplus;": "\u2295",
          "&or;": "\u2228",
          "&orarr;": "\u21BB",
          "&ord;": "\u2A5D",
          "&order;": "\u2134",
          "&orderof;": "\u2134",
          "&ordf": "\xAA",
          "&ordf;": "\xAA",
          "&ordm": "\xBA",
          "&ordm;": "\xBA",
          "&origof;": "\u22B6",
          "&oror;": "\u2A56",
          "&orslope;": "\u2A57",
          "&orv;": "\u2A5B",
          "&oscr;": "\u2134",
          "&oslash": "\xF8",
          "&oslash;": "\xF8",
          "&osol;": "\u2298",
          "&otilde": "\xF5",
          "&otilde;": "\xF5",
          "&otimes;": "\u2297",
          "&otimesas;": "\u2A36",
          "&ouml": "\xF6",
          "&ouml;": "\xF6",
          "&ovbar;": "\u233D",
          "&par;": "\u2225",
          "&para": "\xB6",
          "&para;": "\xB6",
          "&parallel;": "\u2225",
          "&parsim;": "\u2AF3",
          "&parsl;": "\u2AFD",
          "&part;": "\u2202",
          "&pcy;": "\u043F",
          "&percnt;": "%",
          "&period;": ".",
          "&permil;": "\u2030",
          "&perp;": "\u22A5",
          "&pertenk;": "\u2031",
          "&pfr;": "\uD835\uDD2D",
          "&phi;": "\u03C6",
          "&phiv;": "\u03D5",
          "&phmmat;": "\u2133",
          "&phone;": "\u260E",
          "&pi;": "\u03C0",
          "&pitchfork;": "\u22D4",
          "&piv;": "\u03D6",
          "&planck;": "\u210F",
          "&planckh;": "\u210E",
          "&plankv;": "\u210F",
          "&plus;": "+",
          "&plusacir;": "\u2A23",
          "&plusb;": "\u229E",
          "&pluscir;": "\u2A22",
          "&plusdo;": "\u2214",
          "&plusdu;": "\u2A25",
          "&pluse;": "\u2A72",
          "&plusmn": "\xB1",
          "&plusmn;": "\xB1",
          "&plussim;": "\u2A26",
          "&plustwo;": "\u2A27",
          "&pm;": "\xB1",
          "&pointint;": "\u2A15",
          "&popf;": "\uD835\uDD61",
          "&pound": "\xA3",
          "&pound;": "\xA3",
          "&pr;": "\u227A",
          "&prE;": "\u2AB3",
          "&prap;": "\u2AB7",
          "&prcue;": "\u227C",
          "&pre;": "\u2AAF",
          "&prec;": "\u227A",
          "&precapprox;": "\u2AB7",
          "&preccurlyeq;": "\u227C",
          "&preceq;": "\u2AAF",
          "&precnapprox;": "\u2AB9",
          "&precneqq;": "\u2AB5",
          "&precnsim;": "\u22E8",
          "&precsim;": "\u227E",
          "&prime;": "\u2032",
          "&primes;": "\u2119",
          "&prnE;": "\u2AB5",
          "&prnap;": "\u2AB9",
          "&prnsim;": "\u22E8",
          "&prod;": "\u220F",
          "&profalar;": "\u232E",
          "&profline;": "\u2312",
          "&profsurf;": "\u2313",
          "&prop;": "\u221D",
          "&propto;": "\u221D",
          "&prsim;": "\u227E",
          "&prurel;": "\u22B0",
          "&pscr;": "\uD835\uDCC5",
          "&psi;": "\u03C8",
          "&puncsp;": "\u2008",
          "&qfr;": "\uD835\uDD2E",
          "&qint;": "\u2A0C",
          "&qopf;": "\uD835\uDD62",
          "&qprime;": "\u2057",
          "&qscr;": "\uD835\uDCC6",
          "&quaternions;": "\u210D",
          "&quatint;": "\u2A16",
          "&quest;": "?",
          "&questeq;": "\u225F",
          "&quot": '"',
          "&quot;": '"',
          "&rAarr;": "\u21DB",
          "&rArr;": "\u21D2",
          "&rAtail;": "\u291C",
          "&rBarr;": "\u290F",
          "&rHar;": "\u2964",
          "&race;": "\u223D\u0331",
          "&racute;": "\u0155",
          "&radic;": "\u221A",
          "&raemptyv;": "\u29B3",
          "&rang;": "\u27E9",
          "&rangd;": "\u2992",
          "&range;": "\u29A5",
          "&rangle;": "\u27E9",
          "&raquo": "\xBB",
          "&raquo;": "\xBB",
          "&rarr;": "\u2192",
          "&rarrap;": "\u2975",
          "&rarrb;": "\u21E5",
          "&rarrbfs;": "\u2920",
          "&rarrc;": "\u2933",
          "&rarrfs;": "\u291E",
          "&rarrhk;": "\u21AA",
          "&rarrlp;": "\u21AC",
          "&rarrpl;": "\u2945",
          "&rarrsim;": "\u2974",
          "&rarrtl;": "\u21A3",
          "&rarrw;": "\u219D",
          "&ratail;": "\u291A",
          "&ratio;": "\u2236",
          "&rationals;": "\u211A",
          "&rbarr;": "\u290D",
          "&rbbrk;": "\u2773",
          "&rbrace;": "}",
          "&rbrack;": "]",
          "&rbrke;": "\u298C",
          "&rbrksld;": "\u298E",
          "&rbrkslu;": "\u2990",
          "&rcaron;": "\u0159",
          "&rcedil;": "\u0157",
          "&rceil;": "\u2309",
          "&rcub;": "}",
          "&rcy;": "\u0440",
          "&rdca;": "\u2937",
          "&rdldhar;": "\u2969",
          "&rdquo;": "\u201D",
          "&rdquor;": "\u201D",
          "&rdsh;": "\u21B3",
          "&real;": "\u211C",
          "&realine;": "\u211B",
          "&realpart;": "\u211C",
          "&reals;": "\u211D",
          "&rect;": "\u25AD",
          "&reg": "\xAE",
          "&reg;": "\xAE",
          "&rfisht;": "\u297D",
          "&rfloor;": "\u230B",
          "&rfr;": "\uD835\uDD2F",
          "&rhard;": "\u21C1",
          "&rharu;": "\u21C0",
          "&rharul;": "\u296C",
          "&rho;": "\u03C1",
          "&rhov;": "\u03F1",
          "&rightarrow;": "\u2192",
          "&rightarrowtail;": "\u21A3",
          "&rightharpoondown;": "\u21C1",
          "&rightharpoonup;": "\u21C0",
          "&rightleftarrows;": "\u21C4",
          "&rightleftharpoons;": "\u21CC",
          "&rightrightarrows;": "\u21C9",
          "&rightsquigarrow;": "\u219D",
          "&rightthreetimes;": "\u22CC",
          "&ring;": "\u02DA",
          "&risingdotseq;": "\u2253",
          "&rlarr;": "\u21C4",
          "&rlhar;": "\u21CC",
          "&rlm;": "\u200F",
          "&rmoust;": "\u23B1",
          "&rmoustache;": "\u23B1",
          "&rnmid;": "\u2AEE",
          "&roang;": "\u27ED",
          "&roarr;": "\u21FE",
          "&robrk;": "\u27E7",
          "&ropar;": "\u2986",
          "&ropf;": "\uD835\uDD63",
          "&roplus;": "\u2A2E",
          "&rotimes;": "\u2A35",
          "&rpar;": ")",
          "&rpargt;": "\u2994",
          "&rppolint;": "\u2A12",
          "&rrarr;": "\u21C9",
          "&rsaquo;": "\u203A",
          "&rscr;": "\uD835\uDCC7",
          "&rsh;": "\u21B1",
          "&rsqb;": "]",
          "&rsquo;": "\u2019",
          "&rsquor;": "\u2019",
          "&rthree;": "\u22CC",
          "&rtimes;": "\u22CA",
          "&rtri;": "\u25B9",
          "&rtrie;": "\u22B5",
          "&rtrif;": "\u25B8",
          "&rtriltri;": "\u29CE",
          "&ruluhar;": "\u2968",
          "&rx;": "\u211E",
          "&sacute;": "\u015B",
          "&sbquo;": "\u201A",
          "&sc;": "\u227B",
          "&scE;": "\u2AB4",
          "&scap;": "\u2AB8",
          "&scaron;": "\u0161",
          "&sccue;": "\u227D",
          "&sce;": "\u2AB0",
          "&scedil;": "\u015F",
          "&scirc;": "\u015D",
          "&scnE;": "\u2AB6",
          "&scnap;": "\u2ABA",
          "&scnsim;": "\u22E9",
          "&scpolint;": "\u2A13",
          "&scsim;": "\u227F",
          "&scy;": "\u0441",
          "&sdot;": "\u22C5",
          "&sdotb;": "\u22A1",
          "&sdote;": "\u2A66",
          "&seArr;": "\u21D8",
          "&searhk;": "\u2925",
          "&searr;": "\u2198",
          "&searrow;": "\u2198",
          "&sect": "\xA7",
          "&sect;": "\xA7",
          "&semi;": ";",
          "&seswar;": "\u2929",
          "&setminus;": "\u2216",
          "&setmn;": "\u2216",
          "&sext;": "\u2736",
          "&sfr;": "\uD835\uDD30",
          "&sfrown;": "\u2322",
          "&sharp;": "\u266F",
          "&shchcy;": "\u0449",
          "&shcy;": "\u0448",
          "&shortmid;": "\u2223",
          "&shortparallel;": "\u2225",
          "&shy": "\xAD",
          "&shy;": "\xAD",
          "&sigma;": "\u03C3",
          "&sigmaf;": "\u03C2",
          "&sigmav;": "\u03C2",
          "&sim;": "\u223C",
          "&simdot;": "\u2A6A",
          "&sime;": "\u2243",
          "&simeq;": "\u2243",
          "&simg;": "\u2A9E",
          "&simgE;": "\u2AA0",
          "&siml;": "\u2A9D",
          "&simlE;": "\u2A9F",
          "&simne;": "\u2246",
          "&simplus;": "\u2A24",
          "&simrarr;": "\u2972",
          "&slarr;": "\u2190",
          "&smallsetminus;": "\u2216",
          "&smashp;": "\u2A33",
          "&smeparsl;": "\u29E4",
          "&smid;": "\u2223",
          "&smile;": "\u2323",
          "&smt;": "\u2AAA",
          "&smte;": "\u2AAC",
          "&smtes;": "\u2AAC\uFE00",
          "&softcy;": "\u044C",
          "&sol;": "/",
          "&solb;": "\u29C4",
          "&solbar;": "\u233F",
          "&sopf;": "\uD835\uDD64",
          "&spades;": "\u2660",
          "&spadesuit;": "\u2660",
          "&spar;": "\u2225",
          "&sqcap;": "\u2293",
          "&sqcaps;": "\u2293\uFE00",
          "&sqcup;": "\u2294",
          "&sqcups;": "\u2294\uFE00",
          "&sqsub;": "\u228F",
          "&sqsube;": "\u2291",
          "&sqsubset;": "\u228F",
          "&sqsubseteq;": "\u2291",
          "&sqsup;": "\u2290",
          "&sqsupe;": "\u2292",
          "&sqsupset;": "\u2290",
          "&sqsupseteq;": "\u2292",
          "&squ;": "\u25A1",
          "&square;": "\u25A1",
          "&squarf;": "\u25AA",
          "&squf;": "\u25AA",
          "&srarr;": "\u2192",
          "&sscr;": "\uD835\uDCC8",
          "&ssetmn;": "\u2216",
          "&ssmile;": "\u2323",
          "&sstarf;": "\u22C6",
          "&star;": "\u2606",
          "&starf;": "\u2605",
          "&straightepsilon;": "\u03F5",
          "&straightphi;": "\u03D5",
          "&strns;": "\xAF",
          "&sub;": "\u2282",
          "&subE;": "\u2AC5",
          "&subdot;": "\u2ABD",
          "&sube;": "\u2286",
          "&subedot;": "\u2AC3",
          "&submult;": "\u2AC1",
          "&subnE;": "\u2ACB",
          "&subne;": "\u228A",
          "&subplus;": "\u2ABF",
          "&subrarr;": "\u2979",
          "&subset;": "\u2282",
          "&subseteq;": "\u2286",
          "&subseteqq;": "\u2AC5",
          "&subsetneq;": "\u228A",
          "&subsetneqq;": "\u2ACB",
          "&subsim;": "\u2AC7",
          "&subsub;": "\u2AD5",
          "&subsup;": "\u2AD3",
          "&succ;": "\u227B",
          "&succapprox;": "\u2AB8",
          "&succcurlyeq;": "\u227D",
          "&succeq;": "\u2AB0",
          "&succnapprox;": "\u2ABA",
          "&succneqq;": "\u2AB6",
          "&succnsim;": "\u22E9",
          "&succsim;": "\u227F",
          "&sum;": "\u2211",
          "&sung;": "\u266A",
          "&sup1": "\xB9",
          "&sup1;": "\xB9",
          "&sup2": "\xB2",
          "&sup2;": "\xB2",
          "&sup3": "\xB3",
          "&sup3;": "\xB3",
          "&sup;": "\u2283",
          "&supE;": "\u2AC6",
          "&supdot;": "\u2ABE",
          "&supdsub;": "\u2AD8",
          "&supe;": "\u2287",
          "&supedot;": "\u2AC4",
          "&suphsol;": "\u27C9",
          "&suphsub;": "\u2AD7",
          "&suplarr;": "\u297B",
          "&supmult;": "\u2AC2",
          "&supnE;": "\u2ACC",
          "&supne;": "\u228B",
          "&supplus;": "\u2AC0",
          "&supset;": "\u2283",
          "&supseteq;": "\u2287",
          "&supseteqq;": "\u2AC6",
          "&supsetneq;": "\u228B",
          "&supsetneqq;": "\u2ACC",
          "&supsim;": "\u2AC8",
          "&supsub;": "\u2AD4",
          "&supsup;": "\u2AD6",
          "&swArr;": "\u21D9",
          "&swarhk;": "\u2926",
          "&swarr;": "\u2199",
          "&swarrow;": "\u2199",
          "&swnwar;": "\u292A",
          "&szlig": "\xDF",
          "&szlig;": "\xDF",
          "&target;": "\u2316",
          "&tau;": "\u03C4",
          "&tbrk;": "\u23B4",
          "&tcaron;": "\u0165",
          "&tcedil;": "\u0163",
          "&tcy;": "\u0442",
          "&tdot;": "\u20DB",
          "&telrec;": "\u2315",
          "&tfr;": "\uD835\uDD31",
          "&there4;": "\u2234",
          "&therefore;": "\u2234",
          "&theta;": "\u03B8",
          "&thetasym;": "\u03D1",
          "&thetav;": "\u03D1",
          "&thickapprox;": "\u2248",
          "&thicksim;": "\u223C",
          "&thinsp;": "\u2009",
          "&thkap;": "\u2248",
          "&thksim;": "\u223C",
          "&thorn": "\xFE",
          "&thorn;": "\xFE",
          "&tilde;": "\u02DC",
          "&times": "\xD7",
          "&times;": "\xD7",
          "&timesb;": "\u22A0",
          "&timesbar;": "\u2A31",
          "&timesd;": "\u2A30",
          "&tint;": "\u222D",
          "&toea;": "\u2928",
          "&top;": "\u22A4",
          "&topbot;": "\u2336",
          "&topcir;": "\u2AF1",
          "&topf;": "\uD835\uDD65",
          "&topfork;": "\u2ADA",
          "&tosa;": "\u2929",
          "&tprime;": "\u2034",
          "&trade;": "\u2122",
          "&triangle;": "\u25B5",
          "&triangledown;": "\u25BF",
          "&triangleleft;": "\u25C3",
          "&trianglelefteq;": "\u22B4",
          "&triangleq;": "\u225C",
          "&triangleright;": "\u25B9",
          "&trianglerighteq;": "\u22B5",
          "&tridot;": "\u25EC",
          "&trie;": "\u225C",
          "&triminus;": "\u2A3A",
          "&triplus;": "\u2A39",
          "&trisb;": "\u29CD",
          "&tritime;": "\u2A3B",
          "&trpezium;": "\u23E2",
          "&tscr;": "\uD835\uDCC9",
          "&tscy;": "\u0446",
          "&tshcy;": "\u045B",
          "&tstrok;": "\u0167",
          "&twixt;": "\u226C",
          "&twoheadleftarrow;": "\u219E",
          "&twoheadrightarrow;": "\u21A0",
          "&uArr;": "\u21D1",
          "&uHar;": "\u2963",
          "&uacute": "\xFA",
          "&uacute;": "\xFA",
          "&uarr;": "\u2191",
          "&ubrcy;": "\u045E",
          "&ubreve;": "\u016D",
          "&ucirc": "\xFB",
          "&ucirc;": "\xFB",
          "&ucy;": "\u0443",
          "&udarr;": "\u21C5",
          "&udblac;": "\u0171",
          "&udhar;": "\u296E",
          "&ufisht;": "\u297E",
          "&ufr;": "\uD835\uDD32",
          "&ugrave": "\xF9",
          "&ugrave;": "\xF9",
          "&uharl;": "\u21BF",
          "&uharr;": "\u21BE",
          "&uhblk;": "\u2580",
          "&ulcorn;": "\u231C",
          "&ulcorner;": "\u231C",
          "&ulcrop;": "\u230F",
          "&ultri;": "\u25F8",
          "&umacr;": "\u016B",
          "&uml": "\xA8",
          "&uml;": "\xA8",
          "&uogon;": "\u0173",
          "&uopf;": "\uD835\uDD66",
          "&uparrow;": "\u2191",
          "&updownarrow;": "\u2195",
          "&upharpoonleft;": "\u21BF",
          "&upharpoonright;": "\u21BE",
          "&uplus;": "\u228E",
          "&upsi;": "\u03C5",
          "&upsih;": "\u03D2",
          "&upsilon;": "\u03C5",
          "&upuparrows;": "\u21C8",
          "&urcorn;": "\u231D",
          "&urcorner;": "\u231D",
          "&urcrop;": "\u230E",
          "&uring;": "\u016F",
          "&urtri;": "\u25F9",
          "&uscr;": "\uD835\uDCCA",
          "&utdot;": "\u22F0",
          "&utilde;": "\u0169",
          "&utri;": "\u25B5",
          "&utrif;": "\u25B4",
          "&uuarr;": "\u21C8",
          "&uuml": "\xFC",
          "&uuml;": "\xFC",
          "&uwangle;": "\u29A7",
          "&vArr;": "\u21D5",
          "&vBar;": "\u2AE8",
          "&vBarv;": "\u2AE9",
          "&vDash;": "\u22A8",
          "&vangrt;": "\u299C",
          "&varepsilon;": "\u03F5",
          "&varkappa;": "\u03F0",
          "&varnothing;": "\u2205",
          "&varphi;": "\u03D5",
          "&varpi;": "\u03D6",
          "&varpropto;": "\u221D",
          "&varr;": "\u2195",
          "&varrho;": "\u03F1",
          "&varsigma;": "\u03C2",
          "&varsubsetneq;": "\u228A\uFE00",
          "&varsubsetneqq;": "\u2ACB\uFE00",
          "&varsupsetneq;": "\u228B\uFE00",
          "&varsupsetneqq;": "\u2ACC\uFE00",
          "&vartheta;": "\u03D1",
          "&vartriangleleft;": "\u22B2",
          "&vartriangleright;": "\u22B3",
          "&vcy;": "\u0432",
          "&vdash;": "\u22A2",
          "&vee;": "\u2228",
          "&veebar;": "\u22BB",
          "&veeeq;": "\u225A",
          "&vellip;": "\u22EE",
          "&verbar;": "|",
          "&vert;": "|",
          "&vfr;": "\uD835\uDD33",
          "&vltri;": "\u22B2",
          "&vnsub;": "\u2282\u20D2",
          "&vnsup;": "\u2283\u20D2",
          "&vopf;": "\uD835\uDD67",
          "&vprop;": "\u221D",
          "&vrtri;": "\u22B3",
          "&vscr;": "\uD835\uDCCB",
          "&vsubnE;": "\u2ACB\uFE00",
          "&vsubne;": "\u228A\uFE00",
          "&vsupnE;": "\u2ACC\uFE00",
          "&vsupne;": "\u228B\uFE00",
          "&vzigzag;": "\u299A",
          "&wcirc;": "\u0175",
          "&wedbar;": "\u2A5F",
          "&wedge;": "\u2227",
          "&wedgeq;": "\u2259",
          "&weierp;": "\u2118",
          "&wfr;": "\uD835\uDD34",
          "&wopf;": "\uD835\uDD68",
          "&wp;": "\u2118",
          "&wr;": "\u2240",
          "&wreath;": "\u2240",
          "&wscr;": "\uD835\uDCCC",
          "&xcap;": "\u22C2",
          "&xcirc;": "\u25EF",
          "&xcup;": "\u22C3",
          "&xdtri;": "\u25BD",
          "&xfr;": "\uD835\uDD35",
          "&xhArr;": "\u27FA",
          "&xharr;": "\u27F7",
          "&xi;": "\u03BE",
          "&xlArr;": "\u27F8",
          "&xlarr;": "\u27F5",
          "&xmap;": "\u27FC",
          "&xnis;": "\u22FB",
          "&xodot;": "\u2A00",
          "&xopf;": "\uD835\uDD69",
          "&xoplus;": "\u2A01",
          "&xotime;": "\u2A02",
          "&xrArr;": "\u27F9",
          "&xrarr;": "\u27F6",
          "&xscr;": "\uD835\uDCCD",
          "&xsqcup;": "\u2A06",
          "&xuplus;": "\u2A04",
          "&xutri;": "\u25B3",
          "&xvee;": "\u22C1",
          "&xwedge;": "\u22C0",
          "&yacute": "\xFD",
          "&yacute;": "\xFD",
          "&yacy;": "\u044F",
          "&ycirc;": "\u0177",
          "&ycy;": "\u044B",
          "&yen": "\xA5",
          "&yen;": "\xA5",
          "&yfr;": "\uD835\uDD36",
          "&yicy;": "\u0457",
          "&yopf;": "\uD835\uDD6A",
          "&yscr;": "\uD835\uDCCE",
          "&yucy;": "\u044E",
          "&yuml": "\xFF",
          "&yuml;": "\xFF",
          "&zacute;": "\u017A",
          "&zcaron;": "\u017E",
          "&zcy;": "\u0437",
          "&zdot;": "\u017C",
          "&zeetrf;": "\u2128",
          "&zeta;": "\u03B6",
          "&zfr;": "\uD835\uDD37",
          "&zhcy;": "\u0436",
          "&zigrarr;": "\u21DD",
          "&zopf;": "\uD835\uDD6B",
          "&zscr;": "\uD835\uDCCF",
          "&zwj;": "\u200D",
          "&zwnj;": "\u200C"
        },
        characters: {
          \u00C6: "&AElig;",
          "&": "&amp;",
          \u00C1: "&Aacute;",
          \u0102: "&Abreve;",
          \u00C2: "&Acirc;",
          \u0410: "&Acy;",
          "\uD835\uDD04": "&Afr;",
          \u00C0: "&Agrave;",
          \u0391: "&Alpha;",
          \u0100: "&Amacr;",
          "\u2A53": "&And;",
          \u0104: "&Aogon;",
          "\uD835\uDD38": "&Aopf;",
          "\u2061": "&af;",
          \u00C5: "&angst;",
          "\uD835\uDC9C": "&Ascr;",
          "\u2254": "&coloneq;",
          \u00C3: "&Atilde;",
          \u00C4: "&Auml;",
          "\u2216": "&ssetmn;",
          "\u2AE7": "&Barv;",
          "\u2306": "&doublebarwedge;",
          \u0411: "&Bcy;",
          "\u2235": "&because;",
          \u212C: "&bernou;",
          \u0392: "&Beta;",
          "\uD835\uDD05": "&Bfr;",
          "\uD835\uDD39": "&Bopf;",
          "\u02D8": "&breve;",
          "\u224E": "&bump;",
          \u0427: "&CHcy;",
          "\xA9": "&copy;",
          \u0106: "&Cacute;",
          "\u22D2": "&Cap;",
          "\u2145": "&DD;",
          \u212D: "&Cfr;",
          \u010C: "&Ccaron;",
          \u00C7: "&Ccedil;",
          \u0108: "&Ccirc;",
          "\u2230": "&Cconint;",
          \u010A: "&Cdot;",
          "\xB8": "&cedil;",
          "\xB7": "&middot;",
          \u03A7: "&Chi;",
          "\u2299": "&odot;",
          "\u2296": "&ominus;",
          "\u2295": "&oplus;",
          "\u2297": "&otimes;",
          "\u2232": "&cwconint;",
          "\u201D": "&rdquor;",
          "\u2019": "&rsquor;",
          "\u2237": "&Proportion;",
          "\u2A74": "&Colone;",
          "\u2261": "&equiv;",
          "\u222F": "&DoubleContourIntegral;",
          "\u222E": "&oint;",
          \u2102: "&complexes;",
          "\u2210": "&coprod;",
          "\u2233": "&awconint;",
          "\u2A2F": "&Cross;",
          "\uD835\uDC9E": "&Cscr;",
          "\u22D3": "&Cup;",
          "\u224D": "&asympeq;",
          "\u2911": "&DDotrahd;",
          \u0402: "&DJcy;",
          \u0405: "&DScy;",
          \u040F: "&DZcy;",
          "\u2021": "&ddagger;",
          "\u21A1": "&Darr;",
          "\u2AE4": "&DoubleLeftTee;",
          \u010E: "&Dcaron;",
          \u0414: "&Dcy;",
          "\u2207": "&nabla;",
          \u0394: "&Delta;",
          "\uD835\uDD07": "&Dfr;",
          "\xB4": "&acute;",
          "\u02D9": "&dot;",
          "\u02DD": "&dblac;",
          "`": "&grave;",
          "\u02DC": "&tilde;",
          "\u22C4": "&diamond;",
          "\u2146": "&dd;",
          "\uD835\uDD3B": "&Dopf;",
          "\xA8": "&uml;",
          "\u20DC": "&DotDot;",
          "\u2250": "&esdot;",
          "\u21D3": "&dArr;",
          "\u21D0": "&lArr;",
          "\u21D4": "&iff;",
          "\u27F8": "&xlArr;",
          "\u27FA": "&xhArr;",
          "\u27F9": "&xrArr;",
          "\u21D2": "&rArr;",
          "\u22A8": "&vDash;",
          "\u21D1": "&uArr;",
          "\u21D5": "&vArr;",
          "\u2225": "&spar;",
          "\u2193": "&downarrow;",
          "\u2913": "&DownArrowBar;",
          "\u21F5": "&duarr;",
          "\u0311": "&DownBreve;",
          "\u2950": "&DownLeftRightVector;",
          "\u295E": "&DownLeftTeeVector;",
          "\u21BD": "&lhard;",
          "\u2956": "&DownLeftVectorBar;",
          "\u295F": "&DownRightTeeVector;",
          "\u21C1": "&rightharpoondown;",
          "\u2957": "&DownRightVectorBar;",
          "\u22A4": "&top;",
          "\u21A7": "&mapstodown;",
          "\uD835\uDC9F": "&Dscr;",
          \u0110: "&Dstrok;",
          \u014A: "&ENG;",
          \u00D0: "&ETH;",
          \u00C9: "&Eacute;",
          \u011A: "&Ecaron;",
          \u00CA: "&Ecirc;",
          \u042D: "&Ecy;",
          \u0116: "&Edot;",
          "\uD835\uDD08": "&Efr;",
          \u00C8: "&Egrave;",
          "\u2208": "&isinv;",
          \u0112: "&Emacr;",
          "\u25FB": "&EmptySmallSquare;",
          "\u25AB": "&EmptyVerySmallSquare;",
          \u0118: "&Eogon;",
          "\uD835\uDD3C": "&Eopf;",
          \u0395: "&Epsilon;",
          "\u2A75": "&Equal;",
          "\u2242": "&esim;",
          "\u21CC": "&rlhar;",
          \u2130: "&expectation;",
          "\u2A73": "&Esim;",
          \u0397: "&Eta;",
          \u00CB: "&Euml;",
          "\u2203": "&exist;",
          "\u2147": "&exponentiale;",
          \u0424: "&Fcy;",
          "\uD835\uDD09": "&Ffr;",
          "\u25FC": "&FilledSmallSquare;",
          "\u25AA": "&squf;",
          "\uD835\uDD3D": "&Fopf;",
          "\u2200": "&forall;",
          \u2131: "&Fscr;",
          \u0403: "&GJcy;",
          ">": "&gt;",
          \u0393: "&Gamma;",
          \u03DC: "&Gammad;",
          \u011E: "&Gbreve;",
          \u0122: "&Gcedil;",
          \u011C: "&Gcirc;",
          \u0413: "&Gcy;",
          \u0120: "&Gdot;",
          "\uD835\uDD0A": "&Gfr;",
          "\u22D9": "&ggg;",
          "\uD835\uDD3E": "&Gopf;",
          "\u2265": "&geq;",
          "\u22DB": "&gtreqless;",
          "\u2267": "&geqq;",
          "\u2AA2": "&GreaterGreater;",
          "\u2277": "&gtrless;",
          "\u2A7E": "&ges;",
          "\u2273": "&gtrsim;",
          "\uD835\uDCA2": "&Gscr;",
          "\u226B": "&gg;",
          \u042A: "&HARDcy;",
          "\u02C7": "&caron;",
          "^": "&Hat;",
          \u0124: "&Hcirc;",
          \u210C: "&Poincareplane;",
          \u210B: "&hamilt;",
          \u210D: "&quaternions;",
          "\u2500": "&boxh;",
          \u0126: "&Hstrok;",
          "\u224F": "&bumpeq;",
          \u0415: "&IEcy;",
          \u0132: "&IJlig;",
          \u0401: "&IOcy;",
          \u00CD: "&Iacute;",
          \u00CE: "&Icirc;",
          \u0418: "&Icy;",
          \u0130: "&Idot;",
          \u2111: "&imagpart;",
          \u00CC: "&Igrave;",
          \u012A: "&Imacr;",
          "\u2148": "&ii;",
          "\u222C": "&Int;",
          "\u222B": "&int;",
          "\u22C2": "&xcap;",
          "\u2063": "&ic;",
          "\u2062": "&it;",
          \u012E: "&Iogon;",
          "\uD835\uDD40": "&Iopf;",
          \u0399: "&Iota;",
          \u2110: "&imagline;",
          \u0128: "&Itilde;",
          \u0406: "&Iukcy;",
          \u00CF: "&Iuml;",
          \u0134: "&Jcirc;",
          \u0419: "&Jcy;",
          "\uD835\uDD0D": "&Jfr;",
          "\uD835\uDD41": "&Jopf;",
          "\uD835\uDCA5": "&Jscr;",
          \u0408: "&Jsercy;",
          \u0404: "&Jukcy;",
          \u0425: "&KHcy;",
          \u040C: "&KJcy;",
          \u039A: "&Kappa;",
          \u0136: "&Kcedil;",
          \u041A: "&Kcy;",
          "\uD835\uDD0E": "&Kfr;",
          "\uD835\uDD42": "&Kopf;",
          "\uD835\uDCA6": "&Kscr;",
          \u0409: "&LJcy;",
          "<": "&lt;",
          \u0139: "&Lacute;",
          \u039B: "&Lambda;",
          "\u27EA": "&Lang;",
          \u2112: "&lagran;",
          "\u219E": "&twoheadleftarrow;",
          \u013D: "&Lcaron;",
          \u013B: "&Lcedil;",
          \u041B: "&Lcy;",
          "\u27E8": "&langle;",
          "\u2190": "&slarr;",
          "\u21E4": "&larrb;",
          "\u21C6": "&lrarr;",
          "\u2308": "&lceil;",
          "\u27E6": "&lobrk;",
          "\u2961": "&LeftDownTeeVector;",
          "\u21C3": "&downharpoonleft;",
          "\u2959": "&LeftDownVectorBar;",
          "\u230A": "&lfloor;",
          "\u2194": "&leftrightarrow;",
          "\u294E": "&LeftRightVector;",
          "\u22A3": "&dashv;",
          "\u21A4": "&mapstoleft;",
          "\u295A": "&LeftTeeVector;",
          "\u22B2": "&vltri;",
          "\u29CF": "&LeftTriangleBar;",
          "\u22B4": "&trianglelefteq;",
          "\u2951": "&LeftUpDownVector;",
          "\u2960": "&LeftUpTeeVector;",
          "\u21BF": "&upharpoonleft;",
          "\u2958": "&LeftUpVectorBar;",
          "\u21BC": "&lharu;",
          "\u2952": "&LeftVectorBar;",
          "\u22DA": "&lesseqgtr;",
          "\u2266": "&leqq;",
          "\u2276": "&lg;",
          "\u2AA1": "&LessLess;",
          "\u2A7D": "&les;",
          "\u2272": "&lsim;",
          "\uD835\uDD0F": "&Lfr;",
          "\u22D8": "&Ll;",
          "\u21DA": "&lAarr;",
          \u013F: "&Lmidot;",
          "\u27F5": "&xlarr;",
          "\u27F7": "&xharr;",
          "\u27F6": "&xrarr;",
          "\uD835\uDD43": "&Lopf;",
          "\u2199": "&swarrow;",
          "\u2198": "&searrow;",
          "\u21B0": "&lsh;",
          \u0141: "&Lstrok;",
          "\u226A": "&ll;",
          "\u2905": "&Map;",
          \u041C: "&Mcy;",
          "\u205F": "&MediumSpace;",
          \u2133: "&phmmat;",
          "\uD835\uDD10": "&Mfr;",
          "\u2213": "&mp;",
          "\uD835\uDD44": "&Mopf;",
          \u039C: "&Mu;",
          \u040A: "&NJcy;",
          \u0143: "&Nacute;",
          \u0147: "&Ncaron;",
          \u0145: "&Ncedil;",
          \u041D: "&Ncy;",
          "\u200B": "&ZeroWidthSpace;",
          "\n": "&NewLine;",
          "\uD835\uDD11": "&Nfr;",
          "\u2060": "&NoBreak;",
          "\xA0": "&nbsp;",
          \u2115: "&naturals;",
          "\u2AEC": "&Not;",
          "\u2262": "&nequiv;",
          "\u226D": "&NotCupCap;",
          "\u2226": "&nspar;",
          "\u2209": "&notinva;",
          "\u2260": "&ne;",
          "\u2242\u0338": "&nesim;",
          "\u2204": "&nexists;",
          "\u226F": "&ngtr;",
          "\u2271": "&ngeq;",
          "\u2267\u0338": "&ngeqq;",
          "\u226B\u0338": "&nGtv;",
          "\u2279": "&ntgl;",
          "\u2A7E\u0338": "&nges;",
          "\u2275": "&ngsim;",
          "\u224E\u0338": "&nbump;",
          "\u224F\u0338": "&nbumpe;",
          "\u22EA": "&ntriangleleft;",
          "\u29CF\u0338": "&NotLeftTriangleBar;",
          "\u22EC": "&ntrianglelefteq;",
          "\u226E": "&nlt;",
          "\u2270": "&nleq;",
          "\u2278": "&ntlg;",
          "\u226A\u0338": "&nLtv;",
          "\u2A7D\u0338": "&nles;",
          "\u2274": "&nlsim;",
          "\u2AA2\u0338": "&NotNestedGreaterGreater;",
          "\u2AA1\u0338": "&NotNestedLessLess;",
          "\u2280": "&nprec;",
          "\u2AAF\u0338": "&npreceq;",
          "\u22E0": "&nprcue;",
          "\u220C": "&notniva;",
          "\u22EB": "&ntriangleright;",
          "\u29D0\u0338": "&NotRightTriangleBar;",
          "\u22ED": "&ntrianglerighteq;",
          "\u228F\u0338": "&NotSquareSubset;",
          "\u22E2": "&nsqsube;",
          "\u2290\u0338": "&NotSquareSuperset;",
          "\u22E3": "&nsqsupe;",
          "\u2282\u20D2": "&vnsub;",
          "\u2288": "&nsubseteq;",
          "\u2281": "&nsucc;",
          "\u2AB0\u0338": "&nsucceq;",
          "\u22E1": "&nsccue;",
          "\u227F\u0338": "&NotSucceedsTilde;",
          "\u2283\u20D2": "&vnsup;",
          "\u2289": "&nsupseteq;",
          "\u2241": "&nsim;",
          "\u2244": "&nsimeq;",
          "\u2247": "&ncong;",
          "\u2249": "&napprox;",
          "\u2224": "&nsmid;",
          "\uD835\uDCA9": "&Nscr;",
          \u00D1: "&Ntilde;",
          \u039D: "&Nu;",
          \u0152: "&OElig;",
          \u00D3: "&Oacute;",
          \u00D4: "&Ocirc;",
          \u041E: "&Ocy;",
          \u0150: "&Odblac;",
          "\uD835\uDD12": "&Ofr;",
          \u00D2: "&Ograve;",
          \u014C: "&Omacr;",
          \u03A9: "&ohm;",
          \u039F: "&Omicron;",
          "\uD835\uDD46": "&Oopf;",
          "\u201C": "&ldquo;",
          "\u2018": "&lsquo;",
          "\u2A54": "&Or;",
          "\uD835\uDCAA": "&Oscr;",
          \u00D8: "&Oslash;",
          \u00D5: "&Otilde;",
          "\u2A37": "&Otimes;",
          \u00D6: "&Ouml;",
          "\u203E": "&oline;",
          "\u23DE": "&OverBrace;",
          "\u23B4": "&tbrk;",
          "\u23DC": "&OverParenthesis;",
          "\u2202": "&part;",
          \u041F: "&Pcy;",
          "\uD835\uDD13": "&Pfr;",
          \u03A6: "&Phi;",
          \u03A0: "&Pi;",
          "\xB1": "&pm;",
          \u2119: "&primes;",
          "\u2ABB": "&Pr;",
          "\u227A": "&prec;",
          "\u2AAF": "&preceq;",
          "\u227C": "&preccurlyeq;",
          "\u227E": "&prsim;",
          "\u2033": "&Prime;",
          "\u220F": "&prod;",
          "\u221D": "&vprop;",
          "\uD835\uDCAB": "&Pscr;",
          \u03A8: "&Psi;",
          '"': "&quot;",
          "\uD835\uDD14": "&Qfr;",
          \u211A: "&rationals;",
          "\uD835\uDCAC": "&Qscr;",
          "\u2910": "&drbkarow;",
          "\xAE": "&reg;",
          \u0154: "&Racute;",
          "\u27EB": "&Rang;",
          "\u21A0": "&twoheadrightarrow;",
          "\u2916": "&Rarrtl;",
          \u0158: "&Rcaron;",
          \u0156: "&Rcedil;",
          \u0420: "&Rcy;",
          \u211C: "&realpart;",
          "\u220B": "&niv;",
          "\u21CB": "&lrhar;",
          "\u296F": "&duhar;",
          \u03A1: "&Rho;",
          "\u27E9": "&rangle;",
          "\u2192": "&srarr;",
          "\u21E5": "&rarrb;",
          "\u21C4": "&rlarr;",
          "\u2309": "&rceil;",
          "\u27E7": "&robrk;",
          "\u295D": "&RightDownTeeVector;",
          "\u21C2": "&downharpoonright;",
          "\u2955": "&RightDownVectorBar;",
          "\u230B": "&rfloor;",
          "\u22A2": "&vdash;",
          "\u21A6": "&mapsto;",
          "\u295B": "&RightTeeVector;",
          "\u22B3": "&vrtri;",
          "\u29D0": "&RightTriangleBar;",
          "\u22B5": "&trianglerighteq;",
          "\u294F": "&RightUpDownVector;",
          "\u295C": "&RightUpTeeVector;",
          "\u21BE": "&upharpoonright;",
          "\u2954": "&RightUpVectorBar;",
          "\u21C0": "&rightharpoonup;",
          "\u2953": "&RightVectorBar;",
          \u211D: "&reals;",
          "\u2970": "&RoundImplies;",
          "\u21DB": "&rAarr;",
          \u211B: "&realine;",
          "\u21B1": "&rsh;",
          "\u29F4": "&RuleDelayed;",
          \u0429: "&SHCHcy;",
          \u0428: "&SHcy;",
          \u042C: "&SOFTcy;",
          \u015A: "&Sacute;",
          "\u2ABC": "&Sc;",
          \u0160: "&Scaron;",
          \u015E: "&Scedil;",
          \u015C: "&Scirc;",
          \u0421: "&Scy;",
          "\uD835\uDD16": "&Sfr;",
          "\u2191": "&uparrow;",
          \u03A3: "&Sigma;",
          "\u2218": "&compfn;",
          "\uD835\uDD4A": "&Sopf;",
          "\u221A": "&radic;",
          "\u25A1": "&square;",
          "\u2293": "&sqcap;",
          "\u228F": "&sqsubset;",
          "\u2291": "&sqsubseteq;",
          "\u2290": "&sqsupset;",
          "\u2292": "&sqsupseteq;",
          "\u2294": "&sqcup;",
          "\uD835\uDCAE": "&Sscr;",
          "\u22C6": "&sstarf;",
          "\u22D0": "&Subset;",
          "\u2286": "&subseteq;",
          "\u227B": "&succ;",
          "\u2AB0": "&succeq;",
          "\u227D": "&succcurlyeq;",
          "\u227F": "&succsim;",
          "\u2211": "&sum;",
          "\u22D1": "&Supset;",
          "\u2283": "&supset;",
          "\u2287": "&supseteq;",
          \u00DE: "&THORN;",
          "\u2122": "&trade;",
          \u040B: "&TSHcy;",
          \u0426: "&TScy;",
          "	": "&Tab;",
          \u03A4: "&Tau;",
          \u0164: "&Tcaron;",
          \u0162: "&Tcedil;",
          \u0422: "&Tcy;",
          "\uD835\uDD17": "&Tfr;",
          "\u2234": "&therefore;",
          \u0398: "&Theta;",
          "\u205F\u200A": "&ThickSpace;",
          "\u2009": "&thinsp;",
          "\u223C": "&thksim;",
          "\u2243": "&simeq;",
          "\u2245": "&cong;",
          "\u2248": "&thkap;",
          "\uD835\uDD4B": "&Topf;",
          "\u20DB": "&tdot;",
          "\uD835\uDCAF": "&Tscr;",
          \u0166: "&Tstrok;",
          \u00DA: "&Uacute;",
          "\u219F": "&Uarr;",
          "\u2949": "&Uarrocir;",
          \u040E: "&Ubrcy;",
          \u016C: "&Ubreve;",
          \u00DB: "&Ucirc;",
          \u0423: "&Ucy;",
          \u0170: "&Udblac;",
          "\uD835\uDD18": "&Ufr;",
          \u00D9: "&Ugrave;",
          \u016A: "&Umacr;",
          _: "&lowbar;",
          "\u23DF": "&UnderBrace;",
          "\u23B5": "&bbrk;",
          "\u23DD": "&UnderParenthesis;",
          "\u22C3": "&xcup;",
          "\u228E": "&uplus;",
          \u0172: "&Uogon;",
          "\uD835\uDD4C": "&Uopf;",
          "\u2912": "&UpArrowBar;",
          "\u21C5": "&udarr;",
          "\u2195": "&varr;",
          "\u296E": "&udhar;",
          "\u22A5": "&perp;",
          "\u21A5": "&mapstoup;",
          "\u2196": "&nwarrow;",
          "\u2197": "&nearrow;",
          \u03D2: "&upsih;",
          \u03A5: "&Upsilon;",
          \u016E: "&Uring;",
          "\uD835\uDCB0": "&Uscr;",
          \u0168: "&Utilde;",
          \u00DC: "&Uuml;",
          "\u22AB": "&VDash;",
          "\u2AEB": "&Vbar;",
          \u0412: "&Vcy;",
          "\u22A9": "&Vdash;",
          "\u2AE6": "&Vdashl;",
          "\u22C1": "&xvee;",
          "\u2016": "&Vert;",
          "\u2223": "&smid;",
          "|": "&vert;",
          "\u2758": "&VerticalSeparator;",
          "\u2240": "&wreath;",
          "\u200A": "&hairsp;",
          "\uD835\uDD19": "&Vfr;",
          "\uD835\uDD4D": "&Vopf;",
          "\uD835\uDCB1": "&Vscr;",
          "\u22AA": "&Vvdash;",
          \u0174: "&Wcirc;",
          "\u22C0": "&xwedge;",
          "\uD835\uDD1A": "&Wfr;",
          "\uD835\uDD4E": "&Wopf;",
          "\uD835\uDCB2": "&Wscr;",
          "\uD835\uDD1B": "&Xfr;",
          \u039E: "&Xi;",
          "\uD835\uDD4F": "&Xopf;",
          "\uD835\uDCB3": "&Xscr;",
          \u042F: "&YAcy;",
          \u0407: "&YIcy;",
          \u042E: "&YUcy;",
          \u00DD: "&Yacute;",
          \u0176: "&Ycirc;",
          \u042B: "&Ycy;",
          "\uD835\uDD1C": "&Yfr;",
          "\uD835\uDD50": "&Yopf;",
          "\uD835\uDCB4": "&Yscr;",
          \u0178: "&Yuml;",
          \u0416: "&ZHcy;",
          \u0179: "&Zacute;",
          \u017D: "&Zcaron;",
          \u0417: "&Zcy;",
          \u017B: "&Zdot;",
          \u0396: "&Zeta;",
          \u2128: "&zeetrf;",
          \u2124: "&integers;",
          "\uD835\uDCB5": "&Zscr;",
          \u00E1: "&aacute;",
          \u0103: "&abreve;",
          "\u223E": "&mstpos;",
          "\u223E\u0333": "&acE;",
          "\u223F": "&acd;",
          \u00E2: "&acirc;",
          \u0430: "&acy;",
          \u00E6: "&aelig;",
          "\uD835\uDD1E": "&afr;",
          \u00E0: "&agrave;",
          \u2135: "&aleph;",
          \u03B1: "&alpha;",
          \u0101: "&amacr;",
          "\u2A3F": "&amalg;",
          "\u2227": "&wedge;",
          "\u2A55": "&andand;",
          "\u2A5C": "&andd;",
          "\u2A58": "&andslope;",
          "\u2A5A": "&andv;",
          "\u2220": "&angle;",
          "\u29A4": "&ange;",
          "\u2221": "&measuredangle;",
          "\u29A8": "&angmsdaa;",
          "\u29A9": "&angmsdab;",
          "\u29AA": "&angmsdac;",
          "\u29AB": "&angmsdad;",
          "\u29AC": "&angmsdae;",
          "\u29AD": "&angmsdaf;",
          "\u29AE": "&angmsdag;",
          "\u29AF": "&angmsdah;",
          "\u221F": "&angrt;",
          "\u22BE": "&angrtvb;",
          "\u299D": "&angrtvbd;",
          "\u2222": "&angsph;",
          "\u237C": "&angzarr;",
          \u0105: "&aogon;",
          "\uD835\uDD52": "&aopf;",
          "\u2A70": "&apE;",
          "\u2A6F": "&apacir;",
          "\u224A": "&approxeq;",
          "\u224B": "&apid;",
          "'": "&apos;",
          \u00E5: "&aring;",
          "\uD835\uDCB6": "&ascr;",
          "*": "&midast;",
          \u00E3: "&atilde;",
          \u00E4: "&auml;",
          "\u2A11": "&awint;",
          "\u2AED": "&bNot;",
          "\u224C": "&bcong;",
          "\u03F6": "&bepsi;",
          "\u2035": "&bprime;",
          "\u223D": "&bsim;",
          "\u22CD": "&bsime;",
          "\u22BD": "&barvee;",
          "\u2305": "&barwedge;",
          "\u23B6": "&bbrktbrk;",
          \u0431: "&bcy;",
          "\u201E": "&ldquor;",
          "\u29B0": "&bemptyv;",
          \u03B2: "&beta;",
          \u2136: "&beth;",
          "\u226C": "&twixt;",
          "\uD835\uDD1F": "&bfr;",
          "\u25EF": "&xcirc;",
          "\u2A00": "&xodot;",
          "\u2A01": "&xoplus;",
          "\u2A02": "&xotime;",
          "\u2A06": "&xsqcup;",
          "\u2605": "&starf;",
          "\u25BD": "&xdtri;",
          "\u25B3": "&xutri;",
          "\u2A04": "&xuplus;",
          "\u290D": "&rbarr;",
          "\u29EB": "&lozf;",
          "\u25B4": "&utrif;",
          "\u25BE": "&dtrif;",
          "\u25C2": "&ltrif;",
          "\u25B8": "&rtrif;",
          "\u2423": "&blank;",
          "\u2592": "&blk12;",
          "\u2591": "&blk14;",
          "\u2593": "&blk34;",
          "\u2588": "&block;",
          "=\u20E5": "&bne;",
          "\u2261\u20E5": "&bnequiv;",
          "\u2310": "&bnot;",
          "\uD835\uDD53": "&bopf;",
          "\u22C8": "&bowtie;",
          "\u2557": "&boxDL;",
          "\u2554": "&boxDR;",
          "\u2556": "&boxDl;",
          "\u2553": "&boxDr;",
          "\u2550": "&boxH;",
          "\u2566": "&boxHD;",
          "\u2569": "&boxHU;",
          "\u2564": "&boxHd;",
          "\u2567": "&boxHu;",
          "\u255D": "&boxUL;",
          "\u255A": "&boxUR;",
          "\u255C": "&boxUl;",
          "\u2559": "&boxUr;",
          "\u2551": "&boxV;",
          "\u256C": "&boxVH;",
          "\u2563": "&boxVL;",
          "\u2560": "&boxVR;",
          "\u256B": "&boxVh;",
          "\u2562": "&boxVl;",
          "\u255F": "&boxVr;",
          "\u29C9": "&boxbox;",
          "\u2555": "&boxdL;",
          "\u2552": "&boxdR;",
          "\u2510": "&boxdl;",
          "\u250C": "&boxdr;",
          "\u2565": "&boxhD;",
          "\u2568": "&boxhU;",
          "\u252C": "&boxhd;",
          "\u2534": "&boxhu;",
          "\u229F": "&minusb;",
          "\u229E": "&plusb;",
          "\u22A0": "&timesb;",
          "\u255B": "&boxuL;",
          "\u2558": "&boxuR;",
          "\u2518": "&boxul;",
          "\u2514": "&boxur;",
          "\u2502": "&boxv;",
          "\u256A": "&boxvH;",
          "\u2561": "&boxvL;",
          "\u255E": "&boxvR;",
          "\u253C": "&boxvh;",
          "\u2524": "&boxvl;",
          "\u251C": "&boxvr;",
          "\xA6": "&brvbar;",
          "\uD835\uDCB7": "&bscr;",
          "\u204F": "&bsemi;",
          "\\": "&bsol;",
          "\u29C5": "&bsolb;",
          "\u27C8": "&bsolhsub;",
          "\u2022": "&bullet;",
          "\u2AAE": "&bumpE;",
          \u0107: "&cacute;",
          "\u2229": "&cap;",
          "\u2A44": "&capand;",
          "\u2A49": "&capbrcup;",
          "\u2A4B": "&capcap;",
          "\u2A47": "&capcup;",
          "\u2A40": "&capdot;",
          "\u2229\uFE00": "&caps;",
          "\u2041": "&caret;",
          "\u2A4D": "&ccaps;",
          \u010D: "&ccaron;",
          \u00E7: "&ccedil;",
          \u0109: "&ccirc;",
          "\u2A4C": "&ccups;",
          "\u2A50": "&ccupssm;",
          \u010B: "&cdot;",
          "\u29B2": "&cemptyv;",
          "\xA2": "&cent;",
          "\uD835\uDD20": "&cfr;",
          \u0447: "&chcy;",
          "\u2713": "&checkmark;",
          \u03C7: "&chi;",
          "\u25CB": "&cir;",
          "\u29C3": "&cirE;",
          "\u02C6": "&circ;",
          "\u2257": "&cire;",
          "\u21BA": "&olarr;",
          "\u21BB": "&orarr;",
          "\u24C8": "&oS;",
          "\u229B": "&oast;",
          "\u229A": "&ocir;",
          "\u229D": "&odash;",
          "\u2A10": "&cirfnint;",
          "\u2AEF": "&cirmid;",
          "\u29C2": "&cirscir;",
          "\u2663": "&clubsuit;",
          ":": "&colon;",
          ",": "&comma;",
          "@": "&commat;",
          "\u2201": "&complement;",
          "\u2A6D": "&congdot;",
          "\uD835\uDD54": "&copf;",
          "\u2117": "&copysr;",
          "\u21B5": "&crarr;",
          "\u2717": "&cross;",
          "\uD835\uDCB8": "&cscr;",
          "\u2ACF": "&csub;",
          "\u2AD1": "&csube;",
          "\u2AD0": "&csup;",
          "\u2AD2": "&csupe;",
          "\u22EF": "&ctdot;",
          "\u2938": "&cudarrl;",
          "\u2935": "&cudarrr;",
          "\u22DE": "&curlyeqprec;",
          "\u22DF": "&curlyeqsucc;",
          "\u21B6": "&curvearrowleft;",
          "\u293D": "&cularrp;",
          "\u222A": "&cup;",
          "\u2A48": "&cupbrcap;",
          "\u2A46": "&cupcap;",
          "\u2A4A": "&cupcup;",
          "\u228D": "&cupdot;",
          "\u2A45": "&cupor;",
          "\u222A\uFE00": "&cups;",
          "\u21B7": "&curvearrowright;",
          "\u293C": "&curarrm;",
          "\u22CE": "&cuvee;",
          "\u22CF": "&cuwed;",
          "\xA4": "&curren;",
          "\u2231": "&cwint;",
          "\u232D": "&cylcty;",
          "\u2965": "&dHar;",
          "\u2020": "&dagger;",
          \u2138: "&daleth;",
          "\u2010": "&hyphen;",
          "\u290F": "&rBarr;",
          \u010F: "&dcaron;",
          \u0434: "&dcy;",
          "\u21CA": "&downdownarrows;",
          "\u2A77": "&eDDot;",
          "\xB0": "&deg;",
          \u03B4: "&delta;",
          "\u29B1": "&demptyv;",
          "\u297F": "&dfisht;",
          "\uD835\uDD21": "&dfr;",
          "\u2666": "&diams;",
          \u03DD: "&gammad;",
          "\u22F2": "&disin;",
          "\xF7": "&divide;",
          "\u22C7": "&divonx;",
          \u0452: "&djcy;",
          "\u231E": "&llcorner;",
          "\u230D": "&dlcrop;",
          $: "&dollar;",
          "\uD835\uDD55": "&dopf;",
          "\u2251": "&eDot;",
          "\u2238": "&minusd;",
          "\u2214": "&plusdo;",
          "\u22A1": "&sdotb;",
          "\u231F": "&lrcorner;",
          "\u230C": "&drcrop;",
          "\uD835\uDCB9": "&dscr;",
          \u0455: "&dscy;",
          "\u29F6": "&dsol;",
          \u0111: "&dstrok;",
          "\u22F1": "&dtdot;",
          "\u25BF": "&triangledown;",
          "\u29A6": "&dwangle;",
          \u045F: "&dzcy;",
          "\u27FF": "&dzigrarr;",
          \u00E9: "&eacute;",
          "\u2A6E": "&easter;",
          \u011B: "&ecaron;",
          "\u2256": "&eqcirc;",
          \u00EA: "&ecirc;",
          "\u2255": "&eqcolon;",
          \u044D: "&ecy;",
          \u0117: "&edot;",
          "\u2252": "&fallingdotseq;",
          "\uD835\uDD22": "&efr;",
          "\u2A9A": "&eg;",
          \u00E8: "&egrave;",
          "\u2A96": "&eqslantgtr;",
          "\u2A98": "&egsdot;",
          "\u2A99": "&el;",
          "\u23E7": "&elinters;",
          \u2113: "&ell;",
          "\u2A95": "&eqslantless;",
          "\u2A97": "&elsdot;",
          \u0113: "&emacr;",
          "\u2205": "&varnothing;",
          "\u2004": "&emsp13;",
          "\u2005": "&emsp14;",
          "\u2003": "&emsp;",
          \u014B: "&eng;",
          "\u2002": "&ensp;",
          \u0119: "&eogon;",
          "\uD835\uDD56": "&eopf;",
          "\u22D5": "&epar;",
          "\u29E3": "&eparsl;",
          "\u2A71": "&eplus;",
          \u03B5: "&epsilon;",
          "\u03F5": "&varepsilon;",
          "=": "&equals;",
          "\u225F": "&questeq;",
          "\u2A78": "&equivDD;",
          "\u29E5": "&eqvparsl;",
          "\u2253": "&risingdotseq;",
          "\u2971": "&erarr;",
          \u212F: "&escr;",
          \u03B7: "&eta;",
          \u00F0: "&eth;",
          \u00EB: "&euml;",
          "\u20AC": "&euro;",
          "!": "&excl;",
          \u0444: "&fcy;",
          "\u2640": "&female;",
          \uFB03: "&ffilig;",
          \uFB00: "&fflig;",
          \uFB04: "&ffllig;",
          "\uD835\uDD23": "&ffr;",
          \uFB01: "&filig;",
          fj: "&fjlig;",
          "\u266D": "&flat;",
          \uFB02: "&fllig;",
          "\u25B1": "&fltns;",
          \u0192: "&fnof;",
          "\uD835\uDD57": "&fopf;",
          "\u22D4": "&pitchfork;",
          "\u2AD9": "&forkv;",
          "\u2A0D": "&fpartint;",
          "\xBD": "&half;",
          "\u2153": "&frac13;",
          "\xBC": "&frac14;",
          "\u2155": "&frac15;",
          "\u2159": "&frac16;",
          "\u215B": "&frac18;",
          "\u2154": "&frac23;",
          "\u2156": "&frac25;",
          "\xBE": "&frac34;",
          "\u2157": "&frac35;",
          "\u215C": "&frac38;",
          "\u2158": "&frac45;",
          "\u215A": "&frac56;",
          "\u215D": "&frac58;",
          "\u215E": "&frac78;",
          "\u2044": "&frasl;",
          "\u2322": "&sfrown;",
          "\uD835\uDCBB": "&fscr;",
          "\u2A8C": "&gtreqqless;",
          \u01F5: "&gacute;",
          \u03B3: "&gamma;",
          "\u2A86": "&gtrapprox;",
          \u011F: "&gbreve;",
          \u011D: "&gcirc;",
          \u0433: "&gcy;",
          \u0121: "&gdot;",
          "\u2AA9": "&gescc;",
          "\u2A80": "&gesdot;",
          "\u2A82": "&gesdoto;",
          "\u2A84": "&gesdotol;",
          "\u22DB\uFE00": "&gesl;",
          "\u2A94": "&gesles;",
          "\uD835\uDD24": "&gfr;",
          \u2137: "&gimel;",
          \u0453: "&gjcy;",
          "\u2A92": "&glE;",
          "\u2AA5": "&gla;",
          "\u2AA4": "&glj;",
          "\u2269": "&gneqq;",
          "\u2A8A": "&gnapprox;",
          "\u2A88": "&gneq;",
          "\u22E7": "&gnsim;",
          "\uD835\uDD58": "&gopf;",
          \u210A: "&gscr;",
          "\u2A8E": "&gsime;",
          "\u2A90": "&gsiml;",
          "\u2AA7": "&gtcc;",
          "\u2A7A": "&gtcir;",
          "\u22D7": "&gtrdot;",
          "\u2995": "&gtlPar;",
          "\u2A7C": "&gtquest;",
          "\u2978": "&gtrarr;",
          "\u2269\uFE00": "&gvnE;",
          \u044A: "&hardcy;",
          "\u2948": "&harrcir;",
          "\u21AD": "&leftrightsquigarrow;",
          \u210F: "&plankv;",
          \u0125: "&hcirc;",
          "\u2665": "&heartsuit;",
          "\u2026": "&mldr;",
          "\u22B9": "&hercon;",
          "\uD835\uDD25": "&hfr;",
          "\u2925": "&searhk;",
          "\u2926": "&swarhk;",
          "\u21FF": "&hoarr;",
          "\u223B": "&homtht;",
          "\u21A9": "&larrhk;",
          "\u21AA": "&rarrhk;",
          "\uD835\uDD59": "&hopf;",
          "\u2015": "&horbar;",
          "\uD835\uDCBD": "&hscr;",
          \u0127: "&hstrok;",
          "\u2043": "&hybull;",
          \u00ED: "&iacute;",
          \u00EE: "&icirc;",
          \u0438: "&icy;",
          \u0435: "&iecy;",
          "\xA1": "&iexcl;",
          "\uD835\uDD26": "&ifr;",
          \u00EC: "&igrave;",
          "\u2A0C": "&qint;",
          "\u222D": "&tint;",
          "\u29DC": "&iinfin;",
          "\u2129": "&iiota;",
          \u0133: "&ijlig;",
          \u012B: "&imacr;",
          \u0131: "&inodot;",
          "\u22B7": "&imof;",
          \u01B5: "&imped;",
          "\u2105": "&incare;",
          "\u221E": "&infin;",
          "\u29DD": "&infintie;",
          "\u22BA": "&intercal;",
          "\u2A17": "&intlarhk;",
          "\u2A3C": "&iprod;",
          \u0451: "&iocy;",
          \u012F: "&iogon;",
          "\uD835\uDD5A": "&iopf;",
          \u03B9: "&iota;",
          "\xBF": "&iquest;",
          "\uD835\uDCBE": "&iscr;",
          "\u22F9": "&isinE;",
          "\u22F5": "&isindot;",
          "\u22F4": "&isins;",
          "\u22F3": "&isinsv;",
          \u0129: "&itilde;",
          \u0456: "&iukcy;",
          \u00EF: "&iuml;",
          \u0135: "&jcirc;",
          \u0439: "&jcy;",
          "\uD835\uDD27": "&jfr;",
          "\u0237": "&jmath;",
          "\uD835\uDD5B": "&jopf;",
          "\uD835\uDCBF": "&jscr;",
          \u0458: "&jsercy;",
          \u0454: "&jukcy;",
          \u03BA: "&kappa;",
          \u03F0: "&varkappa;",
          \u0137: "&kcedil;",
          \u043A: "&kcy;",
          "\uD835\uDD28": "&kfr;",
          \u0138: "&kgreen;",
          \u0445: "&khcy;",
          \u045C: "&kjcy;",
          "\uD835\uDD5C": "&kopf;",
          "\uD835\uDCC0": "&kscr;",
          "\u291B": "&lAtail;",
          "\u290E": "&lBarr;",
          "\u2A8B": "&lesseqqgtr;",
          "\u2962": "&lHar;",
          \u013A: "&lacute;",
          "\u29B4": "&laemptyv;",
          \u03BB: "&lambda;",
          "\u2991": "&langd;",
          "\u2A85": "&lessapprox;",
          "\xAB": "&laquo;",
          "\u291F": "&larrbfs;",
          "\u291D": "&larrfs;",
          "\u21AB": "&looparrowleft;",
          "\u2939": "&larrpl;",
          "\u2973": "&larrsim;",
          "\u21A2": "&leftarrowtail;",
          "\u2AAB": "&lat;",
          "\u2919": "&latail;",
          "\u2AAD": "&late;",
          "\u2AAD\uFE00": "&lates;",
          "\u290C": "&lbarr;",
          "\u2772": "&lbbrk;",
          "{": "&lcub;",
          "[": "&lsqb;",
          "\u298B": "&lbrke;",
          "\u298F": "&lbrksld;",
          "\u298D": "&lbrkslu;",
          \u013E: "&lcaron;",
          \u013C: "&lcedil;",
          \u043B: "&lcy;",
          "\u2936": "&ldca;",
          "\u2967": "&ldrdhar;",
          "\u294B": "&ldrushar;",
          "\u21B2": "&ldsh;",
          "\u2264": "&leq;",
          "\u21C7": "&llarr;",
          "\u22CB": "&lthree;",
          "\u2AA8": "&lescc;",
          "\u2A7F": "&lesdot;",
          "\u2A81": "&lesdoto;",
          "\u2A83": "&lesdotor;",
          "\u22DA\uFE00": "&lesg;",
          "\u2A93": "&lesges;",
          "\u22D6": "&ltdot;",
          "\u297C": "&lfisht;",
          "\uD835\uDD29": "&lfr;",
          "\u2A91": "&lgE;",
          "\u296A": "&lharul;",
          "\u2584": "&lhblk;",
          \u0459: "&ljcy;",
          "\u296B": "&llhard;",
          "\u25FA": "&lltri;",
          \u0140: "&lmidot;",
          "\u23B0": "&lmoustache;",
          "\u2268": "&lneqq;",
          "\u2A89": "&lnapprox;",
          "\u2A87": "&lneq;",
          "\u22E6": "&lnsim;",
          "\u27EC": "&loang;",
          "\u21FD": "&loarr;",
          "\u27FC": "&xmap;",
          "\u21AC": "&rarrlp;",
          "\u2985": "&lopar;",
          "\uD835\uDD5D": "&lopf;",
          "\u2A2D": "&loplus;",
          "\u2A34": "&lotimes;",
          "\u2217": "&lowast;",
          "\u25CA": "&lozenge;",
          "(": "&lpar;",
          "\u2993": "&lparlt;",
          "\u296D": "&lrhard;",
          "\u200E": "&lrm;",
          "\u22BF": "&lrtri;",
          "\u2039": "&lsaquo;",
          "\uD835\uDCC1": "&lscr;",
          "\u2A8D": "&lsime;",
          "\u2A8F": "&lsimg;",
          "\u201A": "&sbquo;",
          \u0142: "&lstrok;",
          "\u2AA6": "&ltcc;",
          "\u2A79": "&ltcir;",
          "\u22C9": "&ltimes;",
          "\u2976": "&ltlarr;",
          "\u2A7B": "&ltquest;",
          "\u2996": "&ltrPar;",
          "\u25C3": "&triangleleft;",
          "\u294A": "&lurdshar;",
          "\u2966": "&luruhar;",
          "\u2268\uFE00": "&lvnE;",
          "\u223A": "&mDDot;",
          "\xAF": "&strns;",
          "\u2642": "&male;",
          "\u2720": "&maltese;",
          "\u25AE": "&marker;",
          "\u2A29": "&mcomma;",
          \u043C: "&mcy;",
          "\u2014": "&mdash;",
          "\uD835\uDD2A": "&mfr;",
          "\u2127": "&mho;",
          \u00B5: "&micro;",
          "\u2AF0": "&midcir;",
          "\u2212": "&minus;",
          "\u2A2A": "&minusdu;",
          "\u2ADB": "&mlcp;",
          "\u22A7": "&models;",
          "\uD835\uDD5E": "&mopf;",
          "\uD835\uDCC2": "&mscr;",
          \u03BC: "&mu;",
          "\u22B8": "&mumap;",
          "\u22D9\u0338": "&nGg;",
          "\u226B\u20D2": "&nGt;",
          "\u21CD": "&nlArr;",
          "\u21CE": "&nhArr;",
          "\u22D8\u0338": "&nLl;",
          "\u226A\u20D2": "&nLt;",
          "\u21CF": "&nrArr;",
          "\u22AF": "&nVDash;",
          "\u22AE": "&nVdash;",
          \u0144: "&nacute;",
          "\u2220\u20D2": "&nang;",
          "\u2A70\u0338": "&napE;",
          "\u224B\u0338": "&napid;",
          \u0149: "&napos;",
          "\u266E": "&natural;",
          "\u2A43": "&ncap;",
          \u0148: "&ncaron;",
          \u0146: "&ncedil;",
          "\u2A6D\u0338": "&ncongdot;",
          "\u2A42": "&ncup;",
          \u043D: "&ncy;",
          "\u2013": "&ndash;",
          "\u21D7": "&neArr;",
          "\u2924": "&nearhk;",
          "\u2250\u0338": "&nedot;",
          "\u2928": "&toea;",
          "\uD835\uDD2B": "&nfr;",
          "\u21AE": "&nleftrightarrow;",
          "\u2AF2": "&nhpar;",
          "\u22FC": "&nis;",
          "\u22FA": "&nisd;",
          \u045A: "&njcy;",
          "\u2266\u0338": "&nleqq;",
          "\u219A": "&nleftarrow;",
          "\u2025": "&nldr;",
          "\uD835\uDD5F": "&nopf;",
          "\xAC": "&not;",
          "\u22F9\u0338": "&notinE;",
          "\u22F5\u0338": "&notindot;",
          "\u22F7": "&notinvb;",
          "\u22F6": "&notinvc;",
          "\u22FE": "&notnivb;",
          "\u22FD": "&notnivc;",
          "\u2AFD\u20E5": "&nparsl;",
          "\u2202\u0338": "&npart;",
          "\u2A14": "&npolint;",
          "\u219B": "&nrightarrow;",
          "\u2933\u0338": "&nrarrc;",
          "\u219D\u0338": "&nrarrw;",
          "\uD835\uDCC3": "&nscr;",
          "\u2284": "&nsub;",
          "\u2AC5\u0338": "&nsubseteqq;",
          "\u2285": "&nsup;",
          "\u2AC6\u0338": "&nsupseteqq;",
          \u00F1: "&ntilde;",
          \u03BD: "&nu;",
          "#": "&num;",
          "\u2116": "&numero;",
          "\u2007": "&numsp;",
          "\u22AD": "&nvDash;",
          "\u2904": "&nvHarr;",
          "\u224D\u20D2": "&nvap;",
          "\u22AC": "&nvdash;",
          "\u2265\u20D2": "&nvge;",
          ">\u20D2": "&nvgt;",
          "\u29DE": "&nvinfin;",
          "\u2902": "&nvlArr;",
          "\u2264\u20D2": "&nvle;",
          "<\u20D2": "&nvlt;",
          "\u22B4\u20D2": "&nvltrie;",
          "\u2903": "&nvrArr;",
          "\u22B5\u20D2": "&nvrtrie;",
          "\u223C\u20D2": "&nvsim;",
          "\u21D6": "&nwArr;",
          "\u2923": "&nwarhk;",
          "\u2927": "&nwnear;",
          \u00F3: "&oacute;",
          \u00F4: "&ocirc;",
          \u043E: "&ocy;",
          \u0151: "&odblac;",
          "\u2A38": "&odiv;",
          "\u29BC": "&odsold;",
          \u0153: "&oelig;",
          "\u29BF": "&ofcir;",
          "\uD835\uDD2C": "&ofr;",
          "\u02DB": "&ogon;",
          \u00F2: "&ograve;",
          "\u29C1": "&ogt;",
          "\u29B5": "&ohbar;",
          "\u29BE": "&olcir;",
          "\u29BB": "&olcross;",
          "\u29C0": "&olt;",
          \u014D: "&omacr;",
          \u03C9: "&omega;",
          \u03BF: "&omicron;",
          "\u29B6": "&omid;",
          "\uD835\uDD60": "&oopf;",
          "\u29B7": "&opar;",
          "\u29B9": "&operp;",
          "\u2228": "&vee;",
          "\u2A5D": "&ord;",
          \u2134: "&oscr;",
          \u00AA: "&ordf;",
          \u00BA: "&ordm;",
          "\u22B6": "&origof;",
          "\u2A56": "&oror;",
          "\u2A57": "&orslope;",
          "\u2A5B": "&orv;",
          \u00F8: "&oslash;",
          "\u2298": "&osol;",
          \u00F5: "&otilde;",
          "\u2A36": "&otimesas;",
          \u00F6: "&ouml;",
          "\u233D": "&ovbar;",
          "\xB6": "&para;",
          "\u2AF3": "&parsim;",
          "\u2AFD": "&parsl;",
          \u043F: "&pcy;",
          "%": "&percnt;",
          ".": "&period;",
          "\u2030": "&permil;",
          "\u2031": "&pertenk;",
          "\uD835\uDD2D": "&pfr;",
          \u03C6: "&phi;",
          \u03D5: "&varphi;",
          "\u260E": "&phone;",
          \u03C0: "&pi;",
          \u03D6: "&varpi;",
          \u210E: "&planckh;",
          "+": "&plus;",
          "\u2A23": "&plusacir;",
          "\u2A22": "&pluscir;",
          "\u2A25": "&plusdu;",
          "\u2A72": "&pluse;",
          "\u2A26": "&plussim;",
          "\u2A27": "&plustwo;",
          "\u2A15": "&pointint;",
          "\uD835\uDD61": "&popf;",
          "\xA3": "&pound;",
          "\u2AB3": "&prE;",
          "\u2AB7": "&precapprox;",
          "\u2AB9": "&prnap;",
          "\u2AB5": "&prnE;",
          "\u22E8": "&prnsim;",
          "\u2032": "&prime;",
          "\u232E": "&profalar;",
          "\u2312": "&profline;",
          "\u2313": "&profsurf;",
          "\u22B0": "&prurel;",
          "\uD835\uDCC5": "&pscr;",
          \u03C8: "&psi;",
          "\u2008": "&puncsp;",
          "\uD835\uDD2E": "&qfr;",
          "\uD835\uDD62": "&qopf;",
          "\u2057": "&qprime;",
          "\uD835\uDCC6": "&qscr;",
          "\u2A16": "&quatint;",
          "?": "&quest;",
          "\u291C": "&rAtail;",
          "\u2964": "&rHar;",
          "\u223D\u0331": "&race;",
          \u0155: "&racute;",
          "\u29B3": "&raemptyv;",
          "\u2992": "&rangd;",
          "\u29A5": "&range;",
          "\xBB": "&raquo;",
          "\u2975": "&rarrap;",
          "\u2920": "&rarrbfs;",
          "\u2933": "&rarrc;",
          "\u291E": "&rarrfs;",
          "\u2945": "&rarrpl;",
          "\u2974": "&rarrsim;",
          "\u21A3": "&rightarrowtail;",
          "\u219D": "&rightsquigarrow;",
          "\u291A": "&ratail;",
          "\u2236": "&ratio;",
          "\u2773": "&rbbrk;",
          "}": "&rcub;",
          "]": "&rsqb;",
          "\u298C": "&rbrke;",
          "\u298E": "&rbrksld;",
          "\u2990": "&rbrkslu;",
          \u0159: "&rcaron;",
          \u0157: "&rcedil;",
          \u0440: "&rcy;",
          "\u2937": "&rdca;",
          "\u2969": "&rdldhar;",
          "\u21B3": "&rdsh;",
          "\u25AD": "&rect;",
          "\u297D": "&rfisht;",
          "\uD835\uDD2F": "&rfr;",
          "\u296C": "&rharul;",
          \u03C1: "&rho;",
          \u03F1: "&varrho;",
          "\u21C9": "&rrarr;",
          "\u22CC": "&rthree;",
          "\u02DA": "&ring;",
          "\u200F": "&rlm;",
          "\u23B1": "&rmoustache;",
          "\u2AEE": "&rnmid;",
          "\u27ED": "&roang;",
          "\u21FE": "&roarr;",
          "\u2986": "&ropar;",
          "\uD835\uDD63": "&ropf;",
          "\u2A2E": "&roplus;",
          "\u2A35": "&rotimes;",
          ")": "&rpar;",
          "\u2994": "&rpargt;",
          "\u2A12": "&rppolint;",
          "\u203A": "&rsaquo;",
          "\uD835\uDCC7": "&rscr;",
          "\u22CA": "&rtimes;",
          "\u25B9": "&triangleright;",
          "\u29CE": "&rtriltri;",
          "\u2968": "&ruluhar;",
          "\u211E": "&rx;",
          \u015B: "&sacute;",
          "\u2AB4": "&scE;",
          "\u2AB8": "&succapprox;",
          \u0161: "&scaron;",
          \u015F: "&scedil;",
          \u015D: "&scirc;",
          "\u2AB6": "&succneqq;",
          "\u2ABA": "&succnapprox;",
          "\u22E9": "&succnsim;",
          "\u2A13": "&scpolint;",
          \u0441: "&scy;",
          "\u22C5": "&sdot;",
          "\u2A66": "&sdote;",
          "\u21D8": "&seArr;",
          "\xA7": "&sect;",
          ";": "&semi;",
          "\u2929": "&tosa;",
          "\u2736": "&sext;",
          "\uD835\uDD30": "&sfr;",
          "\u266F": "&sharp;",
          \u0449: "&shchcy;",
          \u0448: "&shcy;",
          "\xAD": "&shy;",
          \u03C3: "&sigma;",
          \u03C2: "&varsigma;",
          "\u2A6A": "&simdot;",
          "\u2A9E": "&simg;",
          "\u2AA0": "&simgE;",
          "\u2A9D": "&siml;",
          "\u2A9F": "&simlE;",
          "\u2246": "&simne;",
          "\u2A24": "&simplus;",
          "\u2972": "&simrarr;",
          "\u2A33": "&smashp;",
          "\u29E4": "&smeparsl;",
          "\u2323": "&ssmile;",
          "\u2AAA": "&smt;",
          "\u2AAC": "&smte;",
          "\u2AAC\uFE00": "&smtes;",
          \u044C: "&softcy;",
          "/": "&sol;",
          "\u29C4": "&solb;",
          "\u233F": "&solbar;",
          "\uD835\uDD64": "&sopf;",
          "\u2660": "&spadesuit;",
          "\u2293\uFE00": "&sqcaps;",
          "\u2294\uFE00": "&sqcups;",
          "\uD835\uDCC8": "&sscr;",
          "\u2606": "&star;",
          "\u2282": "&subset;",
          "\u2AC5": "&subseteqq;",
          "\u2ABD": "&subdot;",
          "\u2AC3": "&subedot;",
          "\u2AC1": "&submult;",
          "\u2ACB": "&subsetneqq;",
          "\u228A": "&subsetneq;",
          "\u2ABF": "&subplus;",
          "\u2979": "&subrarr;",
          "\u2AC7": "&subsim;",
          "\u2AD5": "&subsub;",
          "\u2AD3": "&subsup;",
          "\u266A": "&sung;",
          "\xB9": "&sup1;",
          "\xB2": "&sup2;",
          "\xB3": "&sup3;",
          "\u2AC6": "&supseteqq;",
          "\u2ABE": "&supdot;",
          "\u2AD8": "&supdsub;",
          "\u2AC4": "&supedot;",
          "\u27C9": "&suphsol;",
          "\u2AD7": "&suphsub;",
          "\u297B": "&suplarr;",
          "\u2AC2": "&supmult;",
          "\u2ACC": "&supsetneqq;",
          "\u228B": "&supsetneq;",
          "\u2AC0": "&supplus;",
          "\u2AC8": "&supsim;",
          "\u2AD4": "&supsub;",
          "\u2AD6": "&supsup;",
          "\u21D9": "&swArr;",
          "\u292A": "&swnwar;",
          \u00DF: "&szlig;",
          "\u2316": "&target;",
          \u03C4: "&tau;",
          \u0165: "&tcaron;",
          \u0163: "&tcedil;",
          \u0442: "&tcy;",
          "\u2315": "&telrec;",
          "\uD835\uDD31": "&tfr;",
          \u03B8: "&theta;",
          \u03D1: "&vartheta;",
          \u00FE: "&thorn;",
          "\xD7": "&times;",
          "\u2A31": "&timesbar;",
          "\u2A30": "&timesd;",
          "\u2336": "&topbot;",
          "\u2AF1": "&topcir;",
          "\uD835\uDD65": "&topf;",
          "\u2ADA": "&topfork;",
          "\u2034": "&tprime;",
          "\u25B5": "&utri;",
          "\u225C": "&trie;",
          "\u25EC": "&tridot;",
          "\u2A3A": "&triminus;",
          "\u2A39": "&triplus;",
          "\u29CD": "&trisb;",
          "\u2A3B": "&tritime;",
          "\u23E2": "&trpezium;",
          "\uD835\uDCC9": "&tscr;",
          \u0446: "&tscy;",
          \u045B: "&tshcy;",
          \u0167: "&tstrok;",
          "\u2963": "&uHar;",
          \u00FA: "&uacute;",
          \u045E: "&ubrcy;",
          \u016D: "&ubreve;",
          \u00FB: "&ucirc;",
          \u0443: "&ucy;",
          \u0171: "&udblac;",
          "\u297E": "&ufisht;",
          "\uD835\uDD32": "&ufr;",
          \u00F9: "&ugrave;",
          "\u2580": "&uhblk;",
          "\u231C": "&ulcorner;",
          "\u230F": "&ulcrop;",
          "\u25F8": "&ultri;",
          \u016B: "&umacr;",
          \u0173: "&uogon;",
          "\uD835\uDD66": "&uopf;",
          \u03C5: "&upsilon;",
          "\u21C8": "&uuarr;",
          "\u231D": "&urcorner;",
          "\u230E": "&urcrop;",
          \u016F: "&uring;",
          "\u25F9": "&urtri;",
          "\uD835\uDCCA": "&uscr;",
          "\u22F0": "&utdot;",
          \u0169: "&utilde;",
          \u00FC: "&uuml;",
          "\u29A7": "&uwangle;",
          "\u2AE8": "&vBar;",
          "\u2AE9": "&vBarv;",
          "\u299C": "&vangrt;",
          "\u228A\uFE00": "&vsubne;",
          "\u2ACB\uFE00": "&vsubnE;",
          "\u228B\uFE00": "&vsupne;",
          "\u2ACC\uFE00": "&vsupnE;",
          \u0432: "&vcy;",
          "\u22BB": "&veebar;",
          "\u225A": "&veeeq;",
          "\u22EE": "&vellip;",
          "\uD835\uDD33": "&vfr;",
          "\uD835\uDD67": "&vopf;",
          "\uD835\uDCCB": "&vscr;",
          "\u299A": "&vzigzag;",
          \u0175: "&wcirc;",
          "\u2A5F": "&wedbar;",
          "\u2259": "&wedgeq;",
          "\u2118": "&wp;",
          "\uD835\uDD34": "&wfr;",
          "\uD835\uDD68": "&wopf;",
          "\uD835\uDCCC": "&wscr;",
          "\uD835\uDD35": "&xfr;",
          \u03BE: "&xi;",
          "\u22FB": "&xnis;",
          "\uD835\uDD69": "&xopf;",
          "\uD835\uDCCD": "&xscr;",
          \u00FD: "&yacute;",
          \u044F: "&yacy;",
          \u0177: "&ycirc;",
          \u044B: "&ycy;",
          "\xA5": "&yen;",
          "\uD835\uDD36": "&yfr;",
          \u0457: "&yicy;",
          "\uD835\uDD6A": "&yopf;",
          "\uD835\uDCCE": "&yscr;",
          \u044E: "&yucy;",
          \u00FF: "&yuml;",
          \u017A: "&zacute;",
          \u017E: "&zcaron;",
          \u0437: "&zcy;",
          \u017C: "&zdot;",
          \u03B6: "&zeta;",
          "\uD835\uDD37": "&zfr;",
          \u0436: "&zhcy;",
          "\u21DD": "&zigrarr;",
          "\uD835\uDD6B": "&zopf;",
          "\uD835\uDCCF": "&zscr;",
          "\u200D": "&zwj;",
          "\u200C": "&zwnj;"
        }
      }
    };
  }
});

// node_modules/html-entities/lib/numeric-unicode-map.js
var require_numeric_unicode_map = __commonJS({
  "node_modules/html-entities/lib/numeric-unicode-map.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.numericUnicodeMap = {
      0: 65533,
      128: 8364,
      130: 8218,
      131: 402,
      132: 8222,
      133: 8230,
      134: 8224,
      135: 8225,
      136: 710,
      137: 8240,
      138: 352,
      139: 8249,
      140: 338,
      142: 381,
      145: 8216,
      146: 8217,
      147: 8220,
      148: 8221,
      149: 8226,
      150: 8211,
      151: 8212,
      152: 732,
      153: 8482,
      154: 353,
      155: 8250,
      156: 339,
      158: 382,
      159: 376
    };
  }
});

// node_modules/html-entities/lib/surrogate-pairs.js
var require_surrogate_pairs = __commonJS({
  "node_modules/html-entities/lib/surrogate-pairs.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.fromCodePoint = String.fromCodePoint || function(astralCodePoint) {
      return String.fromCharCode(Math.floor((astralCodePoint - 65536) / 1024) + 55296, (astralCodePoint - 65536) % 1024 + 56320);
    };
    exports.getCodePoint = String.prototype.codePointAt ? function(input, position) {
      return input.codePointAt(position);
    } : function(input, position) {
      return (input.charCodeAt(position) - 55296) * 1024 + input.charCodeAt(position + 1) - 56320 + 65536;
    };
    exports.highSurrogateFrom = 55296;
    exports.highSurrogateTo = 56319;
  }
});

// node_modules/html-entities/lib/index.js
var require_lib = __commonJS({
  "node_modules/html-entities/lib/index.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    var __assign = exports && exports.__assign || function() {
      return __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            Object.prototype.hasOwnProperty.call(s, p) && (t[p] = s[p]);
        }
        return t;
      }, __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    var named_references_1 = require_named_references(), numeric_unicode_map_1 = require_numeric_unicode_map(), surrogate_pairs_1 = require_surrogate_pairs(), allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), {
      all: named_references_1.namedReferences.html5
    }), encodeRegExps = {
      specialChars: /[<>'"&]/g,
      nonAscii: /[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      nonAsciiPrintable: /[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      nonAsciiPrintableOnly: /[\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,
      extensive: /[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g
    }, defaultEncodeOptions = {
      mode: "specialChars",
      level: "all",
      numeric: "decimal"
    };
    function encode(text, _a) {
      var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? "specialChars" : _c, _d = _b.numeric, numeric = _d === void 0 ? "decimal" : _d, _e = _b.level, level = _e === void 0 ? "all" : _e;
      if (!text)
        return "";
      var encodeRegExp = encodeRegExps[mode], references = allNamedReferences[level].characters, isHex = numeric === "hexadecimal";
      encodeRegExp.lastIndex = 0;
      var _b = encodeRegExp.exec(text), _c;
      if (_b) {
        _c = "";
        var _d = 0;
        do {
          _d !== _b.index && (_c += text.substring(_d, _b.index));
          var _e = _b[0], result_1 = references[_e];
          if (!result_1) {
            var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);
            result_1 = (isHex ? "&#x" + code_1.toString(16) : "&#" + code_1) + ";";
          }
          _c += result_1, _d = _b.index + _e.length;
        } while (_b = encodeRegExp.exec(text));
        _d !== text.length && (_c += text.substring(_d));
      } else
        _c = text;
      return _c;
    }
    exports.encode = encode;
    var defaultDecodeOptions = {
      scope: "body",
      level: "all"
    }, strict = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g, attribute = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g, baseDecodeRegExps = {
      xml: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.xml
      },
      html4: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html4
      },
      html5: {
        strict: strict,
        attribute: attribute,
        body: named_references_1.bodyRegExps.html5
      }
    }, decodeRegExps = __assign(__assign({}, baseDecodeRegExps), {
      all: baseDecodeRegExps.html5
    }), fromCharCode = String.fromCharCode, outOfBoundsChar = fromCharCode(65533), defaultDecodeEntityOptions = {
      level: "all"
    };
    function decodeEntity(entity, _a) {
      var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? "all" : _b;
      if (!entity)
        return "";
      var _b = entity, decodeEntityLastChar_1 = entity[entity.length - 1], decodeResultByReference_1 = allNamedReferences[level].entities[entity];
      if (decodeResultByReference_1)
        _b = decodeResultByReference_1;
      else if (entity[0] === "&" && entity[1] === "#") {
        var decodeSecondChar_1 = entity[2], decodeCode_1 = decodeSecondChar_1 == "x" || decodeSecondChar_1 == "X" ? parseInt(entity.substr(3), 16) : parseInt(entity.substr(2));
        _b = decodeCode_1 >= 1114111 ? outOfBoundsChar : decodeCode_1 > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode_1) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);
      }
      return _b;
    }
    exports.decodeEntity = decodeEntity;
    function decode(text, _a) {
      var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? "all" : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === "xml" ? "strict" : "body" : _b;
      if (!text)
        return "";
      var decodeRegExp = decodeRegExps[level][scope], references = allNamedReferences[level].entities, isAttribute = scope === "attribute", isStrict = scope === "strict";
      decodeRegExp.lastIndex = 0;
      var replaceMatch_1 = decodeRegExp.exec(text), replaceResult_1;
      if (replaceMatch_1) {
        replaceResult_1 = "";
        var replaceLastIndex_1 = 0;
        do {
          replaceLastIndex_1 !== replaceMatch_1.index && (replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index));
          var replaceInput_1 = replaceMatch_1[0], decodeResult_1 = replaceInput_1, decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];
          if (isAttribute && decodeEntityLastChar_2 === "=")
            decodeResult_1 = replaceInput_1;
          else if (isStrict && decodeEntityLastChar_2 !== ";")
            decodeResult_1 = replaceInput_1;
          else {
            var decodeResultByReference_2 = references[replaceInput_1];
            if (decodeResultByReference_2)
              decodeResult_1 = decodeResultByReference_2;
            else if (replaceInput_1[0] === "&" && replaceInput_1[1] === "#") {
              var decodeSecondChar_2 = replaceInput_1[2], decodeCode_2 = decodeSecondChar_2 == "x" || decodeSecondChar_2 == "X" ? parseInt(replaceInput_1.substr(3), 16) : parseInt(replaceInput_1.substr(2));
              decodeResult_1 = decodeCode_2 >= 1114111 ? outOfBoundsChar : decodeCode_2 > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode_2) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);
            }
          }
          replaceResult_1 += decodeResult_1, replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;
        } while (replaceMatch_1 = decodeRegExp.exec(text));
        replaceLastIndex_1 !== text.length && (replaceResult_1 += text.substring(replaceLastIndex_1));
      } else
        replaceResult_1 = text;
      return replaceResult_1;
    }
    exports.decode = decode;
  }
});

// node_modules/libram/dist/Clan.js
function _toConsumableArray14(arr) {
  return _arrayWithoutHoles14(arr) || _iterableToArray14(arr) || _unsupportedIterableToArray30(arr) || _nonIterableSpread14();
}
function _nonIterableSpread14() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray14(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles14(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray30(arr);
}
function _createForOfIteratorHelper12(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray30(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _slicedToArray16(arr, i) {
  return _arrayWithHoles16(arr) || _iterableToArrayLimit16(arr, i) || _unsupportedIterableToArray30(arr, i) || _nonIterableRest16();
}
function _nonIterableRest16() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray30(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray30(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray30(o, minLen);
  }
}
function _arrayLikeToArray30(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit16(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles16(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck12(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties9(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass9(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties9(Constructor.prototype, protoProps), staticProps && _defineProperties9(Constructor, staticProps), Constructor;
}
function _defineProperty16(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _wrapRegExp() {
  _wrapRegExp = function(re, groups) {
    return new BabelRegExp(re, void 0, groups);
  };
  var _super = RegExp.prototype, _groups = /* @__PURE__ */ new WeakMap();
  function BabelRegExp(re, flags, groups) {
    var _this = new RegExp(re, flags);
    return _groups.set(_this, groups || _groups.get(re)), _setPrototypeOf4(_this, BabelRegExp.prototype);
  }
  _inherits4(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function(str) {
    var result = _super.exec.call(this, str);
    return result && (result.groups = buildGroups(result, this)), result;
  }, BabelRegExp.prototype[Symbol.replace] = function(str, substitution) {
    if (typeof substitution == "string") {
      var groups = _groups.get(this);
      return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function(_, name) {
        return "$" + groups[name];
      }));
    } else if (typeof substitution == "function") {
      var _this = this;
      return _super[Symbol.replace].call(this, str, function() {
        var args2 = arguments;
        return typeof args2[args2.length - 1] != "object" && (args2 = [].slice.call(args2), args2.push(buildGroups(args2, _this))), substitution.apply(this, args2);
      });
    } else
      return _super[Symbol.replace].call(this, str, substitution);
  };
  function buildGroups(result, re) {
    var g = _groups.get(re);
    return Object.keys(g).reduce(function(groups, name) {
      return groups[name] = result[g[name]], groups;
    }, /* @__PURE__ */ Object.create(null));
  }
  return _wrapRegExp.apply(this, arguments);
}
function _inherits4(subClass, superClass) {
  if (typeof superClass != "function" && superClass !== null)
    throw new TypeError("Super expression must either be null or a function");
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf4(subClass, superClass);
}
function _setPrototypeOf4(o, p) {
  return _setPrototypeOf4 = Object.setPrototypeOf || function(o2, p2) {
    return o2.__proto__ = p2, o2;
  }, _setPrototypeOf4(o, p);
}
var import_html_entities, import_kolmafia60, clanIdCache, toPlayerId, LOG_FAX_PATTERN, WHITELIST_DEGREE_PATTERN, Clan, init_Clan = __esm({
  "node_modules/libram/dist/Clan.js": function() {
    init_kolmafia_polyfill();
    import_html_entities = __toESM(require_lib()), import_kolmafia60 = require("kolmafia");
    init_lib();
    init_logger();
    init_utils();
    clanIdCache = {}, toPlayerId = function(player) {
      return typeof player == "string" ? (0, import_kolmafia60.getPlayerId)(player) : player;
    }, LOG_FAX_PATTERN = /* @__PURE__ */ _wrapRegExp(/([0-9]{2}\/[0-9]{2}\/[0-9]{2}, [0-9]{2}:[0-9]{2}(?:AM|PM): )<a (?:(?!>)[\s\S])+>((?:(?!<)[\s\S])+)<\/a>(?: faxed in a (.*?))<br>/, {
      monster: 3
    }), WHITELIST_DEGREE_PATTERN = /* @__PURE__ */ _wrapRegExp(/(.*?) \(\xB0([0-9]+)\)/, {
      name: 1,
      degree: 2
    }), Clan = /* @__PURE__ */ function() {
      function Clan2(id, name) {
        _classCallCheck12(this, Clan2), _defineProperty16(this, "id", void 0), _defineProperty16(this, "name", void 0), this.id = id, this.name = name;
      }
      return _createClass9(Clan2, [{
        key: "_check",
        value: function() {
          if (this.id !== (0, import_kolmafia60.getClanId)())
            throw new Error("You are no longer a member of this clan");
        }
        /**
         * Join clan
         *
         * @returns Joined clan
         */
      }, {
        key: "join",
        value: function() {
          return Clan2.join(this.id);
        }
        /**
         * Check that this clan is the player's current clan
         *
         * @returns Whether this is the current clan
         */
      }, {
        key: "check",
        value: function() {
          return (0, import_kolmafia60.visitUrl)("clan_hall.php").includes("<b>".concat(this.name, "</b>"));
        }
        /**
         * Determine the monster that is currently in the current clan's fax machine if any
         *
         * @returns The current fax monster
         */
      }, {
        key: "getCurrentFax",
        value: function() {
          this._check();
          var logs = (0, import_kolmafia60.visitUrl)("clan_log.php"), lastFax = logs.match(LOG_FAX_PATTERN);
          if (!lastFax)
            return null;
          var _lastFax = _slicedToArray16(lastFax, 4), monsterName = _lastFax[3];
          return monsterName ? import_kolmafia60.Monster.get(monsterName) : null;
        }
        /**
         * List available ranks (name, degree and id) from the current clan
         *
         * @returns List of ranks
         */
      }, {
        key: "getRanks",
        value: function() {
          this._check();
          var page = (0, import_kolmafia60.visitUrl)("clan_whitelist.php");
          return (0, import_kolmafia60.xpath)(page, '//select[@name="level"]//option').map(function(option) {
            var validHtml = "<select>".concat(option, "</select>"), match = (0, import_kolmafia60.xpath)(validHtml, "//text()")[0].match(WHITELIST_DEGREE_PATTERN), id = (0, import_kolmafia60.xpath)(validHtml, "//@value")[0];
            if (!match || !id)
              return null;
            var _match = _slicedToArray16(match, 3), encodedName = _match[1], degree = _match[2];
            return {
              name: (0, import_html_entities.decode)(encodedName),
              degree: Number.parseInt(degree),
              id: Number.parseInt(id)
            };
          }).filter(notNull);
        }
        /**
         * Add a player to the current clan's whitelist.
         * If the player is already in the whitelist this will change their rank or title.
         *
         * @param player Player id or name
         * @param rankName Rank to give the player. If not provided they will be given the lowest rank
         * @param title Title to give the player. If not provided, will be blank
         * @returns Success
         */
      }, {
        key: "addPlayerToWhitelist",
        value: function(player, rankName) {
          var title = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
          this._check();
          var playerId = toPlayerId(player), ranks = this.getRanks(), rank = rankName ? ranks.find(function(r) {
            return r.name === rankName;
          }) : ranks.sort(function(a, b) {
            return a.degree - b.degree;
          })[0];
          if (!rank)
            return !1;
          var result = (0, import_kolmafia60.visitUrl)("clan_whitelist.php?action=add&pwd&addwho=".concat(playerId, "&level=").concat(rank.id, "&title=").concat(title));
          return result.includes("added to whitelist.") || result.includes("That player is already on the whitelist");
        }
        /**
         * Remove a player from the current clan's whitelist
         *
         * @param player Player id or name
         * @returns Success
         */
      }, {
        key: "removePlayerFromWhitelist",
        value: function(player) {
          this._check();
          var playerId = toPlayerId(player), result = (0, import_kolmafia60.visitUrl)("clan_whitelist.php?action=updatewl&pwd&who=".concat(playerId, "&remove=Remove"));
          return result.includes("Whitelist updated.");
        }
        /**
         * Return the amount of meat in the current clan's coffer
         *
         * @returns Amount of meat
         */
      }, {
        key: "getMeatInCoffer",
        value: function() {
          this._check();
          var page = (0, import_kolmafia60.visitUrl)("clan_stash.php"), _ref = page.match(/Your <b>Clan Coffer<\/b> contains ([\d,]+) Meat./) || ["0", "0"], _ref2 = _slicedToArray16(_ref, 2), meat = _ref2[1];
          return parseNumber(meat);
        }
        /**
         * Add the given amount of meat to the current clan's coffer.
         *
         * @param amount Amount of meat to put in coffer
         * @returns Success
         */
      }, {
        key: "putMeatInCoffer",
        value: function(amount) {
          this._check();
          var result = (0, import_kolmafia60.visitUrl)("clan_stash.php?pwd&action=contribute&howmuch=".concat(amount));
          return result.includes("You contributed");
        }
      }, {
        key: "take",
        value: function(items) {
          this._check();
          var map = arrayToCountedMap(items);
          return map.forEach(function(quantity, item10) {
            var needed = Math.max(0, quantity - (0, import_kolmafia60.availableAmount)(item10));
            if (needed === 0)
              return map.set(item10, 0);
            var foldGroup = getFoldGroup(item10), _iterator = _createForOfIteratorHelper12(foldGroup), _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                for (var foldable = _step.value, quantityToFold = Math.min(needed, (0, import_kolmafia60.availableAmount)(foldable)), _i3 = 0; _i3 < quantityToFold; _i3++)
                  (0, import_kolmafia60.cliExecute)("fold ".concat(item10.name)), needed--;
                return map.set(item10, needed);
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            (0, import_kolmafia60.refreshStash)();
            for (var _i2 = 0, _arr2 = [item10].concat(_toConsumableArray14(foldGroup)); _i2 < _arr2.length; _i2++) {
              var matchingItem = _arr2[_i2], quantityToTake = Math.min(needed, (0, import_kolmafia60.stashAmount)(matchingItem));
              if (quantityToTake !== 0) {
                if (!(0, import_kolmafia60.takeStash)(quantityToTake, matchingItem))
                  return;
                if (matchingItem === item10)
                  needed -= quantityToTake;
                else
                  for (var i = 0; i < quantityToTake; i++)
                    (0, import_kolmafia60.cliExecute)("fold ".concat(matchingItem.name)), needed--;
              }
            }
          }), Array.isArray(items) ? countedMapToArray(map) : map;
        }
      }, {
        key: "put",
        value: function(items) {
          this._check();
          var map = arrayToCountedMap(items);
          if (!this.check())
            throw new Error("Wanted to return ".concat(countedMapToString(map), " to ").concat(this.name, " but KoLmafia's clan data is out of sync"));
          return map.forEach(function(quantity, item10) {
            (0, import_kolmafia60.retrieveItem)(quantity, item10);
            var returned = Math.min(quantity, (0, import_kolmafia60.availableAmount)(item10));
            (0, import_kolmafia60.putStash)(returned, item10), map.set(item10, quantity - returned);
          }), Array.isArray(items) ? countedMapToArray(map) : map;
        }
      }, {
        key: "withStash",
        value: function(items, callback) {
          var _this = this;
          this._check();
          var map = arrayToCountedMap(items);
          return Clan2._withStash(function() {
            return _this.take(map);
          }, function(borrowed) {
            return _this.put(borrowed);
          }, callback);
        }
      }], [{
        key: "_join",
        value: function(id) {
          var result = (0, import_kolmafia60.visitUrl)("showclan.php?recruiter=1&whichclan=".concat(id, "&pwd&whichclan=").concat(id, "&action=joinclan&apply=Apply+to+this+Clan&confirm=on"));
          if (!result.includes("clanhalltop.gif"))
            throw new Error("Could not join clan");
          return Clan2.get();
        }
      }, {
        key: "_withStash",
        value: function(borrowFn, returnFn, callback) {
          var borrowed = borrowFn(), map = arrayToCountedMap(borrowed);
          try {
            return callback(borrowed);
          } finally {
            if (map.size > 0) {
              var returned = arrayToCountedMap(returnFn(borrowed));
              map.forEach(function(quantity, item10) {
                var remaining = quantity - (returned.get(item10) || 0);
                remaining > 0 ? map.set(item10, remaining) : map.delete(item10);
              }), map.size > 0 && logger_default.error("Failed to return <b>".concat(countedMapToString(map), "</b> to <b>").concat(this.name, "</b> stash"));
            }
          }
        }
        /**
         * Join a clan
         *
         * @param clanIdOrName Clan id or name
         * @returns Instance of joined clan
         */
      }, {
        key: "join",
        value: function(clanIdOrName) {
          var clanId;
          if (typeof clanIdOrName == "string") {
            var clanName = clanIdOrName.toLowerCase();
            if (clanName === (0, import_kolmafia60.getClanName)().toLowerCase())
              return Clan2.get();
            if (!(clanName in clanIdCache)) {
              var clan = Clan2.getWhitelisted().find(function(c) {
                return c.name.toLowerCase() === clanName;
              });
              if (!clan)
                throw new Error("Player is not whitelisted to clan");
              clanIdCache[clanName] = clan.id;
            }
            clanId = clanIdCache[clanName];
          } else if (clanId = clanIdOrName, clanId === (0, import_kolmafia60.getClanId)())
            return Clan2.get();
          return Clan2._join(clanId);
        }
        /**
         * Execute callback as a member of a clan and then restore prior membership
         *
         * @param clanIdOrName Clan id or name
         * @param callback Actions to carry out while member of specified can
         * @returns Return value from callback
         */
      }, {
        key: "with",
        value: function(clanIdOrName, callback) {
          var startingClan = Clan2.get(), clan = Clan2.join(clanIdOrName);
          try {
            return callback(clan);
          } finally {
            startingClan.join();
          }
        }
      }, {
        key: "withStash",
        value: function(clanIdOrName, items, callback) {
          return Clan2._withStash(function() {
            return Clan2.with(clanIdOrName, function(clan) {
              return clan.take(items);
            });
          }, function(borrowed) {
            return Clan2.with(clanIdOrName, function(clan) {
              return clan.put(borrowed);
            });
          }, callback);
        }
        /**
         * Get the player's current clan
         *
         * @returns Player's clan
         */
      }, {
        key: "get",
        value: function() {
          return new Clan2((0, import_kolmafia60.getClanId)(), (0, import_kolmafia60.getClanName)());
        }
        /**
         * Get list of clans to which the player is whitelisted
         *
         * @returns List of clans
         */
      }, {
        key: "getWhitelisted",
        value: function() {
          var page = (0, import_kolmafia60.visitUrl)("clan_signup.php");
          return (0, import_kolmafia60.xpath)(page, '//select[@name="whichclan"]//option').map(function(option) {
            var validHtml = "<select>".concat(option, "</select>"), id = Number.parseInt((0, import_kolmafia60.xpath)(validHtml, "//@value")[0]), name = (0, import_html_entities.decode)((0, import_kolmafia60.xpath)(validHtml, "//text()")[0]);
            return new Clan2(id, name);
          });
        }
      }]), Clan2;
    }();
  }
});

// node_modules/libram/dist/challengePaths/2014/HeavyRains.js
var HeavyRains_exports = {};
__export(HeavyRains_exports, {
  RAIN_MONSTER_WINDOW_BEGIN: function() {
    return RAIN_MONSTER_WINDOW_BEGIN;
  },
  RAIN_MONSTER_WINDOW_END: function() {
    return RAIN_MONSTER_WINDOW_END;
  },
  canRainMan: function() {
    return canRainMan;
  },
  expectedWanderer: function() {
    return expectedWanderer;
  },
  path: function() {
    return path;
  },
  rainMan: function() {
    return rainMan;
  },
  wanderers: function() {
    return wanderers;
  }
});
function _taggedTemplateLiteral54(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function rainMan(target) {
  canRainMan(target) && withChoice(970, "1&whichmonster=".concat(target.id), function() {
    return (0, import_kolmafia61.useSkill)($skill(_templateObject480 || (_templateObject480 = _taggedTemplateLiteral54(["Rain Man"]))));
  });
}
function canRainMan(target) {
  if (!have($skill(_templateObject2121 || (_templateObject2121 = _taggedTemplateLiteral54(["Rain Man"])))) || // having the skill implies you are in heavy rains path
  (0, import_kolmafia61.myRain)() < 50 || !target.copyable || target.id < 0)
    return !1;
  if ((0, import_kolmafia61.monsterFactoidsAvailable)(target, !1) > 0)
    return !0;
  var page = withChoice(970, 2, function() {
    return (0, import_kolmafia61.visitUrl)("runskillz.php?pwd&action=Skillz&whichskill=".concat($skill(_templateObject3105 || (_templateObject3105 = _taggedTemplateLiteral54(["Rain Man"]))).id, "&quantity=1"));
  });
  return page.indexOf("<option value=".concat(target.id, ">")) > 0;
}
function expectedWanderer(location) {
  var difficultyWaterLevel = location.difficultyLevel === "low" ? 1 : 2, environmentWaterLevel = location.environment === "underground" ? 4 : location.environment === "indoor" ? 2 : 1, waterLevel = (0, import_kolmafia61.numericModifier)(import_kolmafia61.Modifier.get("Water Level")) + difficultyWaterLevel + environmentWaterLevel;
  return waterLevel > 1 && waterLevel < 6 ? wanderers[waterLevel - 1] : waterLevel === 6 && location.environment === "underground" ? $monster(_templateObject481 || (_templateObject481 = _taggedTemplateLiteral54(["giant tardigrade"]))) : waterLevel === 6 && location.environment === "indoor" ? $monster(_templateObject551 || (_templateObject551 = _taggedTemplateLiteral54(["aquaconda"]))) : waterLevel === 6 && location.environment === "outdoor" ? $monster(_templateObject641 || (_templateObject641 = _taggedTemplateLiteral54(["storm cow"]))) : $monster(_templateObject737 || (_templateObject737 = _taggedTemplateLiteral54(["giant isopod"])));
}
var import_kolmafia61, _templateObject480, _templateObject2121, _templateObject3105, _templateObject481, _templateObject551, _templateObject641, _templateObject737, _templateObject830, RAIN_MONSTER_WINDOW_BEGIN, RAIN_MONSTER_WINDOW_END, wanderers, path, init_HeavyRains = __esm({
  "node_modules/libram/dist/challengePaths/2014/HeavyRains.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia61 = require("kolmafia");
    init_lib();
    init_property();
    init_template_string();
    RAIN_MONSTER_WINDOW_BEGIN = "Rain Monster window begin", RAIN_MONSTER_WINDOW_END = "Rain Monster window end", wanderers = Object.freeze(import_kolmafia61.Monster.get(["giant isopod", "gourmet gourami", "freshwater bonefish", "alley catfish", "piranhadon", "giant tardigrade", "aquaconda", "storm cow"]));
    path = $path(_templateObject830 || (_templateObject830 = _taggedTemplateLiteral54(["Heavy Rains"])));
  }
});

// node_modules/libram/dist/challengePaths/2015/CommunityService.js
function _slicedToArray17(arr, i) {
  return _arrayWithHoles17(arr) || _iterableToArrayLimit17(arr, i) || _unsupportedIterableToArray31(arr, i) || _nonIterableRest17();
}
function _nonIterableRest17() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray31(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray31(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray31(o, minLen);
  }
}
function _arrayLikeToArray31(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit17(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles17(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck13(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties10(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass10(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties10(Constructor.prototype, protoProps), staticProps && _defineProperties10(Constructor, staticProps), Constructor;
}
function _defineProperty17(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _taggedTemplateLiteral55(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var import_kolmafia62, _templateObject486, _templateObject2122, _templateObject3106, _templateObject487, _templateObject555, _templateObject644, _templateObject738, _templateObject831, _templateObject926, _templateObject1023, _templateObject1120, _templateObject1220, _templateObject1318, _templateObject1415, _templateObject1513, _templateObject1613, _templateObject1713, _templateObject1813, _templateObject1913, _templateObject2013, _templateObject2123, _templateObject2215, _templateObject2314, _templateObject2412, _templateObject2512, _templateObject2612, _templateObject2712, _templateObject2810, thralls, statCommunityServicePredictor, visitCouncil, baseWeight, CommunityService, init_CommunityService = __esm({
  "node_modules/libram/dist/challengePaths/2015/CommunityService.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia62 = require("kolmafia");
    init_lib();
    init_maximize();
    init_modifier();
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    thralls = /* @__PURE__ */ new Map([[$stat(_templateObject486 || (_templateObject486 = _taggedTemplateLiteral55(["muscle"]))), $thrall(_templateObject2122 || (_templateObject2122 = _taggedTemplateLiteral55(["Elbow Macaroni"])))], [$stat(_templateObject3106 || (_templateObject3106 = _taggedTemplateLiteral55(["moxie"]))), $thrall(_templateObject487 || (_templateObject487 = _taggedTemplateLiteral55(["Penne Dreadful"])))]]), statCommunityServicePredictor = function(stat) {
      return function() {
        return 60 - Math.floor(1 / 30 * ((0, import_kolmafia62.myBuffedstat)(stat) - (0, import_kolmafia62.myBasestat)(thralls.get(stat) === (0, import_kolmafia62.myThrall)() && !have($effect(_templateObject555 || (_templateObject555 = _taggedTemplateLiteral55(["Expert Oiliness"])))) ? $stat(_templateObject644 || (_templateObject644 = _taggedTemplateLiteral55(["mysticality"]))) : stat)));
      };
    }, visitCouncil = function() {
      return (0, import_kolmafia62.visitUrl)("council.php");
    }, baseWeight = function() {
      return have($effect(_templateObject738 || (_templateObject738 = _taggedTemplateLiteral55(["Fidoxene"])))) ? 20 : (0, import_kolmafia62.familiarWeight)((0, import_kolmafia62.myFamiliar)());
    }, CommunityService = /* @__PURE__ */ function() {
      function CommunityService2(id, stat, property, predictor, maximizeRequirements) {
        _classCallCheck13(this, CommunityService2), _defineProperty17(this, "choice", void 0), _defineProperty17(this, "stat", void 0), _defineProperty17(this, "property", void 0), _defineProperty17(this, "predictor", void 0), _defineProperty17(this, "maximizeRequirements", void 0), _defineProperty17(this, "timer", null), this.choice = id, this.stat = stat, this.property = property, this.predictor = predictor, this.maximizeRequirements = maximizeRequirements;
      }
      return _createClass10(CommunityService2, [{
        key: "id",
        get: function() {
          return this.choice;
        }
        /**
         * @returns The primary stat the test measures, used primarily as memorable shorthand in place of test names.
         */
      }, {
        key: "statName",
        get: function() {
          return this.stat;
        }
        /**
         * @returns The name of the test, used primarily as part of the string property "csServicesPerformed"
         */
      }, {
        key: "name",
        get: function() {
          return this.property;
        }
        /**
         *  @returns The predicted number of turns this test will take given your character's current state.
         */
      }, {
        key: "prediction",
        get: function() {
          return this.predictor();
        }
        /**
         * @returns A Requirement object, if applicable, that aligns with the things needed to maximize for this particular test.
         */
      }, {
        key: "requirement",
        get: function() {
          return this.maximizeRequirements;
        }
        /**
         * Start the time & turn counter for the Test in question.
         */
      }, {
        key: "startTimer",
        value: function() {
          var _this$timer;
          (_this$timer = this.timer) !== null && _this$timer !== void 0 || (this.timer = {
            time: Date.now(),
            turns: (0, import_kolmafia62.myTurncount)()
          });
        }
      }, {
        key: "isDone",
        value: (
          /**
           * Checks the "csServicesPerformed" property to see whether mafia currently believes this test is complete.
           *
           * @returns Whether mafia currently believes this test is complete.
           */
          function() {
            return get("csServicesPerformed").includes(this.property);
          }
        )
        /**
         * Maximizes based on the Requirement associated with this particular test.
         */
      }, {
        key: "maximize",
        value: function() {
          this.maximizeRequirements && this.maximizeRequirements.maximize();
        }
        /**
         * Attempts to turn in the test to the Council of Loathing.
         *
         * @returns Whether mafia believes the test is complete at the end of this function.
         */
      }, {
        key: "do",
        value: function() {
          get("csServicesPerformed").trim().length === 0 && visitCouncil(), visitCouncil();
          var councilText = (0, import_kolmafia62.runChoice)(this.choice);
          return this._verifyIsDone(councilText);
        }
        /**
         * Wrapper function that prepares for a test and then completes it, adding time and turn details to the log.
         *
         * @param prepare A function that does all necessary preparations for this CS test, including choosing your outfit. Optionally returns the number of turns you expect to spend preparing for the test.
         * @param maxTurns We will run the test iff the predicted/actual turns is less than or equal to this parameter.
         * @returns "completed", "failed", or "already completed".
         */
      }, {
        key: "run",
        value: function(prepare) {
          var _this$timer2, maxTurns = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1 / 0;
          if (this.isDone())
            return "already completed";
          var _ref = (_this$timer2 = this.timer) !== null && _this$timer2 !== void 0 ? _this$timer2 : {
            time: Date.now(),
            turns: (0, import_kolmafia62.myTurncount)()
          }, time = _ref.time, turns = _ref.turns, additionalTurns;
          try {
            var result = prepare();
            additionalTurns = typeof result == "number" ? result : 0;
          } catch (e) {
            return (0, import_kolmafia62.print)("".concat(e), "red"), "failed";
          }
          var prediction = this.predictor(), council = visitCouncil(), turnCost = this._actualCost(council);
          return turnCost ? turnCost > Math.min(maxTurns, (0, import_kolmafia62.myAdventures)()) || !this.do() ? "failed" : (CommunityService2.log[this.property] = {
            predictedTurns: prediction + additionalTurns,
            turnCost: (0, import_kolmafia62.myTurncount)() - turns,
            seconds: (Date.now() - time) / 1e3,
            type: "test"
          }, "completed") : "already completed";
        }
      }, {
        key: "_verifyIsDone",
        value: function(councilText) {
          return !councilText.includes("<input type=hidden name=option value=".concat(this.choice, ">"));
        }
        /**
         * Checks council.php to verify that a test is complete; more reliable than isDone, but requires an additional pagehit.
         *
         * @returns Whether council.php suggests that the test is complete.
         */
      }, {
        key: "verifyIsDone",
        value: function() {
          return this._verifyIsDone(visitCouncil());
        }
      }, {
        key: "_actualCost",
        value: function(councilText) {
          var match = councilText.match("<input type=hidden name=option value=".concat(this.id, ">.*?Perform Service \\((\\d+) Adventures\\)"));
          return match ? parseInt(match[1]) : 0;
        }
        /**
         * Checks council.php for the number of turns this test will take; more reliable than prediction, but requires an additional pagehit.
         *
         * @returns The number of turns to complete this test according to council.php.
         */
      }, {
        key: "actualCost",
        value: function() {
          return this._actualCost(visitCouncil());
        }
        /**
         * A log of the predicted turns, actual turns, and duration of each CS test performed.
         */
      }], [{
        key: "startTimer",
        value: (
          /**
           * Start the time & turn counter for the given task
           *
           * @param name The name of the task to start the counter of
           */
          function(name) {
            this.taskTimers.has(name) || this.taskTimers.set(name, {
              time: Date.now(),
              turns: (0, import_kolmafia62.myTurncount)()
            });
          }
        )
      }, {
        key: "logTask",
        value: function(name, action) {
          var _this$taskTimers$get, _action, _ref2 = (_this$taskTimers$get = this.taskTimers.get(name)) !== null && _this$taskTimers$get !== void 0 ? _this$taskTimers$get : {
            time: Date.now(),
            turns: (0, import_kolmafia62.myTurncount)()
          }, time = _ref2.time, turns = _ref2.turns, estimatedTurns = (_action = action()) !== null && _action !== void 0 ? _action : 0;
          CommunityService2.log[name] = {
            type: "task",
            turnCost: (0, import_kolmafia62.myTurncount)() - turns,
            predictedTurns: estimatedTurns,
            seconds: (Date.now() - time) / 1e3
          };
        }
      }, {
        key: "printLog",
        value: (
          /**
           * Prints turncount and time details of the test in question.
           *
           * @param colour The colour (or color) you'd like the log to be printed in.
           */
          function() {
            for (var colour = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "blue", logEntries = Object.entries(CommunityService2.log), _i = 0, _logEntries = logEntries; _i < _logEntries.length; _i++) {
              var _logEntries$_i = _slicedToArray17(_logEntries[_i], 2), testName = _logEntries$_i[0], testEntry = _logEntries$_i[1], type = testEntry.type, predictedTurns = testEntry.predictedTurns, turnCost = testEntry.turnCost, seconds = testEntry.seconds;
              type === "test" ? ((0, import_kolmafia62.print)("We predicted the ".concat(testName, " test would take ").concat(predictedTurns, " turns, ").concat(predictedTurns === turnCost ? "and" : "but", " it took ").concat(turnCost, " turns."), colour), (0, import_kolmafia62.print)("".concat(testName, " took ").concat(seconds.toFixed(1), " seconds."), colour)) : (predictedTurns === 0 && turnCost === 0 || (0, import_kolmafia62.print)("We predicted the task ".concat(testName, " would take ").concat(predictedTurns, " turns, ").concat(predictedTurns === turnCost ? "and" : "but", " it took ").concat(turnCost, " turns."), colour), (0, import_kolmafia62.print)("The task ".concat(testName, " took ").concat(seconds.toFixed(1), " seconds."), colour));
            }
            var totalTime = sum(logEntries, function(_ref3) {
              var _ref4 = _slicedToArray17(_ref3, 2), testEntry2 = _ref4[1];
              return testEntry2.seconds;
            });
            (0, import_kolmafia62.print)("All together, you have spent ".concat(totalTime.toFixed(1), " seconds during this Community Service run"), colour);
          }
        )
        // Below, we have the tests themselves.
      }]), CommunityService2;
    }();
    _defineProperty17(CommunityService, "taskTimers", /* @__PURE__ */ new Map());
    _defineProperty17(CommunityService, "log", {});
    _defineProperty17(CommunityService, "HP", new CommunityService(1, "HP", "Donate Blood", function() {
      return 60 - Math.floor(((0, import_kolmafia62.myMaxhp)() - (0, import_kolmafia62.myBuffedstat)($stat(_templateObject831 || (_templateObject831 = _taggedTemplateLiteral55(["muscle"])))) - 3) / 30);
    }, new Requirement(["HP"], {})));
    _defineProperty17(CommunityService, "Muscle", new CommunityService(2, "Muscle", "Feed The Children", statCommunityServicePredictor($stat(_templateObject926 || (_templateObject926 = _taggedTemplateLiteral55(["Muscle"])))), new Requirement(["Muscle"], {})));
    _defineProperty17(CommunityService, "Mysticality", new CommunityService(3, "Mysticality", "Build Playground Mazes", statCommunityServicePredictor($stat(_templateObject1023 || (_templateObject1023 = _taggedTemplateLiteral55(["Mysticality"])))), new Requirement(["Mysticality"], {})));
    _defineProperty17(CommunityService, "Moxie", new CommunityService(4, "Moxie", "Feed Conspirators", statCommunityServicePredictor($stat(_templateObject1120 || (_templateObject1120 = _taggedTemplateLiteral55(["Moxie"])))), new Requirement(["Moxie"], {})));
    _defineProperty17(CommunityService, "FamiliarWeight", new CommunityService(5, "Familiar Weight", "Breed More Collies", function() {
      return 60 - Math.floor((baseWeight() + (0, import_kolmafia62.weightAdjustment)()) / 5);
    }, new Requirement(["Familiar Weight"], {})));
    _defineProperty17(CommunityService, "WeaponDamage", new CommunityService(6, "Weapon Damage", "Reduce Gazelle Population", function() {
      var weaponPower = (0, import_kolmafia62.getPower)((0, import_kolmafia62.equippedItem)($slot(_templateObject1220 || (_templateObject1220 = _taggedTemplateLiteral55(["weapon"]))))), offhandPower = (0, import_kolmafia62.toSlot)((0, import_kolmafia62.equippedItem)($slot(_templateObject1318 || (_templateObject1318 = _taggedTemplateLiteral55(["off-hand"]))))) === $slot(_templateObject1415 || (_templateObject1415 = _taggedTemplateLiteral55(["weapon"]))) ? (0, import_kolmafia62.getPower)((0, import_kolmafia62.equippedItem)($slot(_templateObject1513 || (_templateObject1513 = _taggedTemplateLiteral55(["off-hand"]))))) : 0, familiarPower = (0, import_kolmafia62.toSlot)((0, import_kolmafia62.equippedItem)($slot(_templateObject1613 || (_templateObject1613 = _taggedTemplateLiteral55(["familiar"]))))) === $slot(_templateObject1713 || (_templateObject1713 = _taggedTemplateLiteral55(["weapon"]))) ? (0, import_kolmafia62.getPower)((0, import_kolmafia62.equippedItem)($slot(_templateObject1813 || (_templateObject1813 = _taggedTemplateLiteral55(["familiar"]))))) : 0, multiplier = have($effect(_templateObject1913 || (_templateObject1913 = _taggedTemplateLiteral55(["Bow-Legged Swagger"])))) ? 2 : 1;
      return 60 - Math.floor(multiplier * (get2("Weapon Damage") - 0.15 * (weaponPower + offhandPower + familiarPower)) / 50 + 1e-3) - Math.floor(multiplier * get2("Weapon Damage Percent") / 50 + 1e-3);
    }, new Requirement(["Weapon Damage", "Weapon Damage Percent"], {})));
    _defineProperty17(CommunityService, "SpellDamage", new CommunityService(7, "Spell Damage", "Make Sausage", function() {
      var dragonfishDamage = (0, import_kolmafia62.myFamiliar)() === $familiar(_templateObject2013 || (_templateObject2013 = _taggedTemplateLiteral55(["Magic Dragonfish"]))) ? (0, import_kolmafia62.numericModifier)($familiar(_templateObject2123 || (_templateObject2123 = _taggedTemplateLiteral55(["Magic Dragonfish"]))), "Spell Damage Percent", baseWeight() + (0, import_kolmafia62.weightAdjustment)(), $item.none) : 0;
      return 60 - Math.floor(get2("Spell Damage") / 50 + 1e-3) - Math.floor((get2("Spell Damage Percent") - dragonfishDamage) / 50 + 1e-3);
    }, new Requirement(["Spell Damage", "Spell Damage Percent"], {})));
    _defineProperty17(CommunityService, "Noncombat", new CommunityService(8, "Non-Combat", "Be a Living Statue", function() {
      var noncombatRate = -1 * get2("Combat Rate"), unsoftcappedRate = noncombatRate > 25 ? 25 + (noncombatRate - 25) * 5 : noncombatRate;
      return 60 - 3 * Math.floor(unsoftcappedRate / 5);
    }, new Requirement(["-combat"], {})));
    _defineProperty17(CommunityService, "BoozeDrop", new CommunityService(9, "Item Drop", "Make Margaritas", function() {
      var mummingCostume = MummingTrunk_exports.currentCostumes().get((0, import_kolmafia62.myFamiliar)()), mummingBuff = mummingCostume && mummingCostume[0] === "Item Drop" ? mummingCostume[1] : 0, familiarItemDrop = (0, import_kolmafia62.numericModifier)((0, import_kolmafia62.myFamiliar)(), "Item Drop", baseWeight() + (0, import_kolmafia62.weightAdjustment)(), (0, import_kolmafia62.equippedItem)($slot(_templateObject2215 || (_templateObject2215 = _taggedTemplateLiteral55(["familiar"]))))) + mummingBuff - (0, import_kolmafia62.numericModifier)((0, import_kolmafia62.equippedItem)($slot(_templateObject2314 || (_templateObject2314 = _taggedTemplateLiteral55(["familiar"])))), "Item Drop"), familiarBoozeDrop = (0, import_kolmafia62.numericModifier)((0, import_kolmafia62.myFamiliar)(), "Booze Drop", baseWeight() + (0, import_kolmafia62.weightAdjustment)(), (0, import_kolmafia62.equippedItem)($slot(_templateObject2412 || (_templateObject2412 = _taggedTemplateLiteral55(["familiar"]))))) - (0, import_kolmafia62.numericModifier)((0, import_kolmafia62.equippedItem)($slot(_templateObject2512 || (_templateObject2512 = _taggedTemplateLiteral55(["familiar"])))), "Booze Drop"), multiplier = (0, import_kolmafia62.haveEquipped)($item(_templateObject2612 || (_templateObject2612 = _taggedTemplateLiteral55(["broken champagne bottle"])))) && get("garbageChampagneCharge") > 0 ? 0.5 : 1;
      return 60 - Math.floor(multiplier * (get2("Item Drop") - familiarItemDrop - (0, import_kolmafia62.numericModifier)((0, import_kolmafia62.myThrall)(), "Item Drop")) / 30 + 1e-3) - Math.floor((get2("Booze Drop") - familiarBoozeDrop) / 15 + 1e-3);
    }, new Requirement(["Item Drop", "2 Booze Drop"], {
      preventEquip: $items(_templateObject2712 || (_templateObject2712 = _taggedTemplateLiteral55(["broken champagne bottle"])))
    })));
    _defineProperty17(CommunityService, "HotRes", new CommunityService(10, "Hot Resistance", "Clean Steam Tunnels", function() {
      return 60 - get2("Hot Resistance");
    }, new Requirement(["Hot Resistance"], {})));
    _defineProperty17(CommunityService, "CoilWire", new CommunityService(11, "Coil Wire", "Coil Wire", function() {
      return 60;
    }, new Requirement([], {})));
    _defineProperty17(CommunityService, "donate", function() {
      visitCouncil(), (0, import_kolmafia62.visitUrl)("choice.php?whichchoice=1089&option=30");
    });
    _defineProperty17(CommunityService, "path", $path(_templateObject2810 || (_templateObject2810 = _taggedTemplateLiteral55(["Community Service"]))));
  }
});

// node_modules/libram/dist/challengePaths/2016/NuclearAutumn.js
var NuclearAutumn_exports = {};
__export(NuclearAutumn_exports, {
  chronoLab: function() {
    return chronoLab;
  },
  coolingTank: function() {
    return coolingTank;
  },
  path: function() {
    return path2;
  },
  spa: function() {
    return spa;
  }
});
function _taggedTemplateLiteral56(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function coolingTank() {
  (0, import_kolmafia63.visitUrl)("place.php?whichplace=falloutshelter&action=vault8");
}
function spa() {
  (0, import_kolmafia63.visitUrl)("place.php?whichplace=falloutshelter&action=vault3");
}
function chronoLab() {
  (0, import_kolmafia63.visitUrl)("place.php?whichplace=falloutshelter&action=vault5");
}
var import_kolmafia63, _templateObject488, path2, init_NuclearAutumn = __esm({
  "node_modules/libram/dist/challengePaths/2016/NuclearAutumn.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia63 = require("kolmafia");
    init_template_string();
    path2 = $path(_templateObject488 || (_templateObject488 = _taggedTemplateLiteral56(["Nuclear Autumn"])));
  }
});

// node_modules/libram/dist/challengePaths/index.js
var init_challengePaths = __esm({
  "node_modules/libram/dist/challengePaths/index.js": function() {
    init_kolmafia_polyfill();
    init_HeavyRains();
    init_CommunityService();
    init_NuclearAutumn();
  }
});

// node_modules/libram/dist/diet/knapsack.js
function _toConsumableArray15(arr) {
  return _arrayWithoutHoles15(arr) || _iterableToArray15(arr) || _unsupportedIterableToArray32(arr) || _nonIterableSpread15();
}
function _nonIterableSpread15() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray15(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles15(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray32(arr);
}
function _slicedToArray18(arr, i) {
  return _arrayWithHoles18(arr) || _iterableToArrayLimit18(arr, i) || _unsupportedIterableToArray32(arr, i) || _nonIterableRest18();
}
function _nonIterableRest18() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit18(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles18(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper13(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray32(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray32(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray32(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray32(o, minLen);
  }
}
function _arrayLikeToArray32(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck14(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperty18(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function aggregate(list, isEqual) {
  var aggregatedList = [], _iterator = _createForOfIteratorHelper13(list), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var item10 = _step.value;
      if (aggregatedList.length === 0)
        aggregatedList.push([item10, 1]);
      else {
        var last = aggregatedList[aggregatedList.length - 1], _last = _slicedToArray18(last, 1), lastItem = _last[0];
        (isEqual ? isEqual(item10, lastItem) : item10 === lastItem) ? last[1]++ : aggregatedList.push([item10, 1]);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return aggregatedList;
}
function knapsack(values, capacity) {
  var _ref5;
  if (!Number.isFinite(capacity))
    throw new Error("Invalid capacity.");
  var valuesInverted = values.map(function(_ref) {
    var _ref2 = _slicedToArray18(_ref, 4), thing = _ref2[0], value2 = _ref2[1], weight = _ref2[2], maximum2 = _ref2[3];
    return weight < 0 && maximum2 !== void 0 ? [new Not(thing), -value2, -weight, maximum2] : [thing, value2, weight, maximum2];
  }), capacityAdjustment = sum(values, function(_ref3) {
    var _ref4 = _slicedToArray18(_ref3, 4), weight = _ref4[2], maximum2 = _ref4[3];
    return weight < 0 && maximum2 !== void 0 ? -weight * maximum2 : 0;
  }), adjustedCapacity = capacity + capacityAdjustment;
  if (adjustedCapacity < 0)
    return [-1 / 0, []];
  for (var valuesSorted = _toConsumableArray15(valuesInverted).sort(function(x, y) {
    return x[2] - y[2];
  }), values01 = (_ref5 = []).concat.apply(_ref5, _toConsumableArray15(valuesSorted.map(function(_ref6) {
    var _ref7 = _slicedToArray18(_ref6, 4), thing = _ref7[0], value2 = _ref7[1], weight = _ref7[2], maximum2 = _ref7[3];
    if (!Number.isFinite(weight) || weight < 0)
      throw new Error("Invalid weight ".concat(weight, " for ").concat(thing instanceof Not ? "not ".concat(thing.thing) : thing));
    var maxQuantity = Math.floor(maximum2 != null ? maximum2 : adjustedCapacity / weight);
    if (maxQuantity < 0)
      throw new Error("Invalid max quantity ".concat(maxQuantity, " for ").concat(thing instanceof Not ? "not ".concat(thing.thing) : thing));
    return new Array(maxQuantity).fill([thing, value2, weight]);
  }))), memoizationTable = new Array(values01.length), i = 0; i < values01.length; i++)
    memoizationTable[i] = new Array(adjustedCapacity).fill(null);
  var _bestSolution = bestSolution(memoizationTable, values01, values01.length - 1, adjustedCapacity), _bestSolution2 = _slicedToArray18(_bestSolution, 2), value = _bestSolution2[0], invertedSolution = _bestSolution2[1], aggregatedSolution = aggregate(invertedSolution), countMap = new Map(aggregatedSolution), valueAdjustment = 0, solution = aggregatedSolution.filter(function(_ref8) {
    var _ref9 = _slicedToArray18(_ref8, 1), thingOrNot2 = _ref9[0];
    return !(thingOrNot2 instanceof Not);
  }), _iterator2 = _createForOfIteratorHelper13(valuesSorted), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var _step2$value = _slicedToArray18(_step2.value, 4), thingOrNot = _step2$value[0], _value = _step2$value[1], maximum = _step2$value[3];
      if (thingOrNot instanceof Not) {
        var _countMap$get, notCount = (_countMap$get = countMap.get(thingOrNot)) !== null && _countMap$get !== void 0 ? _countMap$get : 0;
        if (maximum === void 0)
          throw new Error("Cannot find maximum for item ".concat(thingOrNot.thing, "."));
        if (notCount > maximum)
          throw new Error("Somehow picked ".concat(notCount, " more than the maximum ").concat(notCount, " for item ").concat(thingOrNot.thing, "."));
        notCount < maximum && solution.push([thingOrNot.thing, maximum - notCount]), valueAdjustment -= maximum * _value;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return [value + valueAdjustment, solution];
}
function bestSolution(memoizationTable, values, currentIndex, remainingCapacity) {
  if (remainingCapacity < 0)
    return [-1 / 0, []];
  if (remainingCapacity === 0 || currentIndex < 0)
    return [0, []];
  var memoized = memoizationTable[currentIndex][remainingCapacity - 1];
  if (memoized !== null)
    return memoized;
  var _values$currentIndex = _slicedToArray18(values[currentIndex], 3), item10 = _values$currentIndex[0], value = _values$currentIndex[1], weight = _values$currentIndex[2], _bestSolution3 = bestSolution(memoizationTable, values, currentIndex - 1, remainingCapacity - weight), _bestSolution4 = _slicedToArray18(_bestSolution3, 2), valueIncludeRest = _bestSolution4[0], itemsInclude = _bestSolution4[1], valueInclude = valueIncludeRest + value, _bestSolution5 = bestSolution(memoizationTable, values, currentIndex - 1, remainingCapacity), _bestSolution6 = _slicedToArray18(_bestSolution5, 2), valueExclude = _bestSolution6[0], itemsExclude = _bestSolution6[1], result = valueInclude > valueExclude ? [valueInclude, [].concat(_toConsumableArray15(itemsInclude), [item10])] : [valueExclude, itemsExclude];
  return memoizationTable[currentIndex][remainingCapacity - 1] = result, result;
}
var Not, init_knapsack = __esm({
  "node_modules/libram/dist/diet/knapsack.js": function() {
    init_kolmafia_polyfill();
    init_utils();
    Not = function Not2(thing) {
      _classCallCheck14(this, Not2), _defineProperty18(this, "thing", void 0), this.thing = thing;
    };
  }
});

// node_modules/libram/dist/diet/index.js
function _createForOfIteratorHelper14(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray33(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function ownKeys8(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread8(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys8(Object(source), !0).forEach(function(key) {
      _defineProperty19(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys8(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _classCallCheck15(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties11(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass11(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties11(Constructor.prototype, protoProps), staticProps && _defineProperties11(Constructor, staticProps), Constructor;
}
function _defineProperty19(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _toConsumableArray16(arr) {
  return _arrayWithoutHoles16(arr) || _iterableToArray16(arr) || _unsupportedIterableToArray33(arr) || _nonIterableSpread16();
}
function _nonIterableSpread16() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray16(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles16(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray33(arr);
}
function _slicedToArray19(arr, i) {
  return _arrayWithHoles19(arr) || _iterableToArrayLimit19(arr, i) || _unsupportedIterableToArray33(arr, i) || _nonIterableRest19();
}
function _nonIterableRest19() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray33(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray33(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray33(o, minLen);
  }
}
function _arrayLikeToArray33(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit19(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles19(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral57(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function isMonday() {
  return get2("Muscle Percent", $item(_templateObject489 || (_templateObject489 = _taggedTemplateLiteral57(["Tuesday's ruby"])))) > 0;
}
function _expectedAdventures(item10, modifiers) {
  var _item$notes, _item$notes2, _item$notes3, _item$notes4, _item$notes5;
  if (item10.adventures === "")
    return 0;
  var _item$adventures$spli = item10.adventures.split(/[-]/).map(function(s) {
    return parseInt(s);
  }), _item$adventures$spli2 = _slicedToArray19(_item$adventures$spli, 2), min = _item$adventures$spli2[0], recordedMax = _item$adventures$spli2[1], max = recordedMax != null ? recordedMax : min, interpolated = _toConsumableArray16(new Array(max - min + 1).keys()).map(function(n) {
    return n + min;
  }), forkMugMultiplier = (0, import_kolmafia64.itemType)(item10) === "food" && (_item$notes = item10.notes) !== null && _item$notes !== void 0 && _item$notes.includes("SALAD") || (0, import_kolmafia64.itemType)(item10) === "booze" && (_item$notes2 = item10.notes) !== null && _item$notes2 !== void 0 && _item$notes2.includes("BEER") ? 1.5 : 1.3, seasoningAdventures = max - min <= 1 ? 1 : 0.5, garish = modifiers.garish && ((_item$notes3 = item10.notes) === null || _item$notes3 === void 0 ? void 0 : _item$notes3.includes("LASAGNA")) && !isMonday(), refinedPalate = modifiers.refinedPalate && ((_item$notes4 = item10.notes) === null || _item$notes4 === void 0 ? void 0 : _item$notes4.includes("WINE")), pinkyRing = modifiers.pinkyRing && ((_item$notes5 = item10.notes) === null || _item$notes5 === void 0 ? void 0 : _item$notes5.includes("WINE"));
  return sum(interpolated, function(baseAdventures) {
    var _item$notes6, _item$notes7, adventures = baseAdventures;
    return modifiers.forkMug && (adventures = Math.floor(adventures * forkMugMultiplier)), (_item$notes6 = item10.notes) !== null && _item$notes6 !== void 0 && _item$notes6.includes("SAUCY") && modifiers.saucemaven && (adventures += (0, import_kolmafia64.myPrimestat)() === $stat(_templateObject2124 || (_templateObject2124 = _taggedTemplateLiteral57(["Mysticality"]))) ? 5 : 3), garish && (adventures += 5), refinedPalate && (adventures = Math.floor(adventures * 1.25)), pinkyRing && (adventures = Math.round(adventures * 1.125)), (_item$notes7 = item10.notes) !== null && _item$notes7 !== void 0 && _item$notes7.includes("MARTINI") && modifiers.tuxedoShirt && (adventures += 2), (0, import_kolmafia64.itemType)(item10) === "food" && modifiers.mayoflex && adventures++, (0, import_kolmafia64.itemType)(item10) === "food" && modifiers.seasoning && (adventures += seasoningAdventures), adventures;
  }) / interpolated.length;
}
function isOrgan(x) {
  return organs.includes(x);
}
function planDiet(mpa, menu) {
  var organCapacities = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [["food", null], ["booze", null], ["spleen item", null]], resolvedOrganCapacities = organCapacities.map(function(_ref8) {
    var _ref9 = _slicedToArray19(_ref8, 2), organ = _ref9[0], size = _ref9[1];
    return [organ, size != null ? size : organ === "food" ? (0, import_kolmafia64.fullnessLimit)() - (0, import_kolmafia64.myFullness)() : organ === "booze" ? (0, import_kolmafia64.inebrietyLimit)() - (0, import_kolmafia64.myInebriety)() : organ === "spleen item" ? (0, import_kolmafia64.spleenLimit)() - (0, import_kolmafia64.mySpleenUse)() : 0];
  }), includedInteractingItems = menu.map(function(menuItem) {
    var interacting = interactingItems.find(function(_ref10) {
      var _ref11 = _slicedToArray19(_ref10, 1), itemOrEffect = _ref11[0];
      return menuItem.item === itemOrEffect || menuItem.item === $item(_templateObject4710 || (_templateObject4710 = _taggedTemplateLiteral57(["pocket wish"]))) && menuItem.effect === itemOrEffect;
    });
    if (interacting) {
      var _interacting = _slicedToArray19(interacting, 2), organSizes = _interacting[1];
      return [menuItem, organSizes];
    } else
      return null;
  }).filter(function(value) {
    return value !== null;
  }), dietPlanner = new DietPlanner(mpa, menu.filter(function(menuItem) {
    return !includedInteractingItems.some(function(_ref12) {
      var _ref13 = _slicedToArray19(_ref12, 1), interacting = _ref13[0];
      return interacting === menuItem;
    });
  })), _dietPlanner$planOrga = dietPlanner.planOrgansWithTrials(resolvedOrganCapacities.filter(function(_ref14) {
    var _ref15 = _slicedToArray19(_ref14, 2), organ = _ref15[0], capacity = _ref15[1];
    return ["food", "booze"].includes(organ) && capacity >= 0;
  }), includedInteractingItems, {}), _dietPlanner$planOrga2 = _slicedToArray19(_dietPlanner$planOrga, 2), planFoodBooze = _dietPlanner$planOrga2[1], spleenCapacity = resolvedOrganCapacities.find(function(_ref16) {
    var _ref17 = _slicedToArray19(_ref16, 1), organ = _ref17[0];
    return organ === "spleen item";
  });
  if (spleenCapacity) {
    var additionalSpleen = sum(planFoodBooze, function(_ref18) {
      var _ref19 = _slicedToArray19(_ref18, 2), items = _ref19[0], number = _ref19[1];
      return items.some(function(menuItem) {
        return $items(_templateObject4810 || (_templateObject4810 = _taggedTemplateLiteral57(["jar of fermented pickle juice, extra-greasy slider"]))).includes(menuItem.item);
      }) ? 5 * number : 0;
    }), _spleenCapacity = _slicedToArray19(spleenCapacity, 2), availableSpleen = _spleenCapacity[1], _dietPlanner$planOrga3 = dietPlanner.planOrgan("spleen item", availableSpleen + additionalSpleen), _dietPlanner$planOrga4 = _slicedToArray19(_dietPlanner$planOrga3, 2), planSpleen = _dietPlanner$planOrga4[1];
    return [].concat(_toConsumableArray16(planFoodBooze), _toConsumableArray16(planSpleen));
  } else
    return planFoodBooze;
}
var import_kolmafia64, _templateObject489, _templateObject2124, _templateObject3107, _templateObject490, _templateObject556, _templateObject645, _templateObject739, _templateObject834, _templateObject927, _templateObject1024, _templateObject1121, _templateObject1221, _templateObject1319, _templateObject1416, _templateObject1514, _templateObject1614, _templateObject1714, _templateObject1814, _templateObject1914, _templateObject2014, _templateObject2125, _templateObject2216, _templateObject2315, _templateObject2413, _templateObject2513, _templateObject2613, _templateObject2713, _templateObject2811, _templateObject2910, _templateObject3010, _templateObject3114, _templateObject3212, _templateObject3312, _templateObject3410, _templateObject3510, _templateObject3610, _templateObject3710, _templateObject3810, _templateObject3910, _templateObject4010, _templateObject4112, _templateObject4211, _templateObject4311, _templateObject4410, _templateObject4510, _templateObject4610, _templateObject4710, _templateObject4810, _templateObject496, _templateObject506, _templateObject5111, _templateObject5210, _templateObject5310, _templateObject5410, _templateObject557, _templateObject565, _templateObject575, _templateObject585, _templateObject594, _templateObject604, _templateObject6110, _templateObject6210, MenuItem, organs, DietPlanner, interactingItems, DietEntry, Diet, init_diet = __esm({
  "node_modules/libram/dist/diet/index.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia64 = require("kolmafia");
    init_lib();
    init_modifier();
    init_property();
    init_MayoClinic();
    init_template_string();
    init_utils();
    init_knapsack();
    MenuItem = /* @__PURE__ */ function() {
      function MenuItem2(item10) {
        var _MenuItem$defaultOpti, options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        _classCallCheck15(this, MenuItem2), _defineProperty19(this, "item", void 0), _defineProperty19(this, "organ", void 0), _defineProperty19(this, "size", void 0), _defineProperty19(this, "maximum", void 0), _defineProperty19(this, "additionalValue", void 0), _defineProperty19(this, "effect", void 0), _defineProperty19(this, "priceOverride", void 0), _defineProperty19(this, "mayo", void 0), _defineProperty19(this, "data", void 0);
        var _options = _objectSpread8(_objectSpread8({}, options), (_MenuItem$defaultOpti = MenuItem2.defaultOptions().get(item10)) !== null && _MenuItem$defaultOpti !== void 0 ? _MenuItem$defaultOpti : {}), size = _options.size, organ = _options.organ, maximum = _options.maximum, additionalValue = _options.additionalValue, effect2 = _options.effect, priceOverride = _options.priceOverride, mayo = _options.mayo, data = _options.data;
        this.item = item10, this.maximum = maximum === "auto" ? item10.dailyusesleft : maximum, this.additionalValue = additionalValue, this.effect = effect2, this.priceOverride = priceOverride, this.mayo = mayo, this.data = data;
        var typ = (0, import_kolmafia64.itemType)(this.item);
        this.organ = organ != null ? organ : isOrgan(typ) ? typ : void 0, this.size = size != null ? size : this.organ === "food" ? this.item.fullness : this.organ === "booze" ? this.item.inebriety : this.organ === "spleen item" ? this.item.spleen : 0;
      }
      return _createClass11(MenuItem2, [{
        key: "equals",
        value: function(other) {
          return this.item === other.item && this.effect === other.effect;
        }
      }, {
        key: "toString",
        value: function() {
          return this.effect ? "".concat(this.item, ":").concat(this.effect) : this.item.toString();
        }
      }, {
        key: "price",
        value: function() {
          var _this$priceOverride, _MenuItem$defaultPric;
          return (_this$priceOverride = this.priceOverride) !== null && _this$priceOverride !== void 0 ? _this$priceOverride : (_MenuItem$defaultPric = MenuItem2.defaultPriceFunction) === null || _MenuItem$defaultPric === void 0 ? void 0 : _MenuItem$defaultPric.call(MenuItem2, this.item);
        }
      }], [{
        key: "defaultOptions",
        value: function() {
          return /* @__PURE__ */ new Map([[$item(_templateObject3107 || (_templateObject3107 = _taggedTemplateLiteral57(["distention pill"]))), {
            organ: "food",
            maximum: !have($item(_templateObject490 || (_templateObject490 = _taggedTemplateLiteral57(["distention pill"])))) || get("_distentionPillUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject556 || (_templateObject556 = _taggedTemplateLiteral57(["synthetic dog hair pill"]))), {
            organ: "booze",
            maximum: !have($item(_templateObject645 || (_templateObject645 = _taggedTemplateLiteral57(["synthetic dog hair pill"])))) || get("_syntheticDogHairPillUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject739 || (_templateObject739 = _taggedTemplateLiteral57(["cuppa Voraci tea"]))), {
            organ: "food",
            maximum: get("_voraciTeaUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject834 || (_templateObject834 = _taggedTemplateLiteral57(["cuppa Sobrie tea"]))), {
            organ: "booze",
            maximum: get("_sobrieTeaUsed") ? 0 : 1,
            size: -1
          }], [$item(_templateObject927 || (_templateObject927 = _taggedTemplateLiteral57(["mojo filter"]))), {
            organ: "spleen item",
            maximum: 3 - get("currentMojoFilters"),
            size: -1
          }], [$item(_templateObject1024 || (_templateObject1024 = _taggedTemplateLiteral57(["spice melange"]))), {
            maximum: get("spiceMelangeUsed") ? 0 : 1
          }], [$item(_templateObject1121 || (_templateObject1121 = _taggedTemplateLiteral57(["Ultra Mega Sour Ball"]))), {
            maximum: get("_ultraMegaSourBallUsed") ? 0 : 1
          }], [$item(_templateObject1221 || (_templateObject1221 = _taggedTemplateLiteral57(["The Plumber's mushroom stew"]))), {
            maximum: get("_plumbersMushroomStewEaten") ? 0 : 1
          }], [$item(_templateObject1319 || (_templateObject1319 = _taggedTemplateLiteral57(["The Mad Liquor"]))), {
            maximum: get("_madLiquorDrunk") ? 0 : 1
          }], [$item(_templateObject1416 || (_templateObject1416 = _taggedTemplateLiteral57(["Doc Clock's thyme cocktail"]))), {
            maximum: get("_docClocksThymeCocktailDrunk") ? 0 : 1
          }], [$item(_templateObject1514 || (_templateObject1514 = _taggedTemplateLiteral57(["Mr. Burnsger"]))), {
            maximum: get("_mrBurnsgerEaten") ? 0 : 1
          }], [$item(_templateObject1614 || (_templateObject1614 = _taggedTemplateLiteral57(["Calzone of Legend"]))), {
            maximum: get("calzoneOfLegendEaten") ? 0 : 1
          }], [$item(_templateObject1714 || (_templateObject1714 = _taggedTemplateLiteral57(["Deep Dish of Legend"]))), {
            maximum: get("deepDishOfLegendEaten") ? 0 : 1
          }], [$item(_templateObject1814 || (_templateObject1814 = _taggedTemplateLiteral57(["Pizza of Legend"]))), {
            maximum: get("pizzaOfLegendEaten") ? 0 : 1
          }]]);
        }
      }]), MenuItem2;
    }();
    _defineProperty19(MenuItem, "defaultPriceFunction", function(item10) {
      return (0, import_kolmafia64.npcPrice)(item10) > 0 ? (0, import_kolmafia64.npcPrice)(item10) : (0, import_kolmafia64.mallPrice)(item10);
    });
    organs = ["food", "booze", "spleen item"];
    DietPlanner = /* @__PURE__ */ function() {
      function DietPlanner2(mpa, menu) {
        var _this2 = this;
        var _this = this;
        if (_classCallCheck15(this, DietPlanner2), _defineProperty19(this, "mpa", void 0), _defineProperty19(this, "menu", void 0), _defineProperty19(this, "mayoLookup", void 0), _defineProperty19(this, "fork", void 0), _defineProperty19(this, "mug", void 0), _defineProperty19(this, "seasoning", void 0), _defineProperty19(this, "spleenValue", 0), this.mpa = mpa, this.fork = menu.find(function(item10) {
          return item10.item === $item(_templateObject1914 || (_templateObject1914 = _taggedTemplateLiteral57(["Ol' Scratch's salad fork"])));
        }), this.mug = menu.find(function(item10) {
          return item10.item === $item(_templateObject2014 || (_templateObject2014 = _taggedTemplateLiteral57(["Frosty's frosty mug"])));
        }), this.seasoning = menu.find(function(item10) {
          return item10.item === $item(_templateObject2125 || (_templateObject2125 = _taggedTemplateLiteral57(["Special Seasoning"])));
        }), this.mayoLookup = /* @__PURE__ */ new Map(), installed3())
          for (var _loop = function() {
            var mayo = _arr2[_i2], menuItem = menu.find(function(item10) {
              return item10.item === mayo;
            });
            menuItem && _this.mayoLookup.set(mayo, menuItem);
          }, _i2 = 0, _arr2 = [Mayo.flex, Mayo.zapine]; _i2 < _arr2.length; _i2++)
            _loop();
        this.menu = menu.filter(function(item10) {
          return item10.organ;
        }), menu.filter(function(item10) {
          return (0, import_kolmafia64.historicalPrice)(item10.item) === 0 || (0, import_kolmafia64.historicalAge)(item10.item) >= 1;
        }).length > 100 && ((0, import_kolmafia64.mallPrices)("food"), (0, import_kolmafia64.mallPrices)("booze"));
        var spleenItems = menu.filter(function(item10) {
          return (0, import_kolmafia64.itemType)(item10.item) === "spleen item";
        });
        if (spleenItems.sort(function(x, y) {
          return -(_this2.consumptionValue(x) / x.item.spleen - _this2.consumptionValue(y) / y.item.spleen);
        }), spleenItems.length > 0) {
          var bestMarginalSpleenItem = spleenItems.find(function(spleenItem) {
            return spleenItem.maximum === void 0 || spleenItem.maximum * spleenItem.size >= (0, import_kolmafia64.spleenLimit)() - (0, import_kolmafia64.mySpleenUse)();
          });
          bestMarginalSpleenItem && (this.spleenValue = Math.max(0, this.consumptionValue(bestMarginalSpleenItem) / bestMarginalSpleenItem.size));
        }
      }
      return _createClass11(DietPlanner2, [{
        key: "consumptionValue",
        value: function(menuItem) {
          return this.consumptionHelpersAndValue(menuItem, {})[1];
        }
        /**
         * Determine which helpers will be used with a menu item and its resulting value.
         *
         * @param menuItem Menu item to check.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair [array of helpers and base menu item, value].
         */
      }, {
        key: "consumptionHelpersAndValue",
        value: function(menuItem, overrideModifiers) {
          var _menuItem$additionalV, _menuItem$additionalV2, helpers = [];
          if ((0, import_kolmafia64.itemType)(menuItem.item) === "food" && this.mayoLookup.size) {
            var mayo = menuItem.mayo ? this.mayoLookup.get(menuItem.mayo) : this.mayoLookup.get(Mayo.flex);
            mayo && helpers.push(mayo);
          }
          var defaultModifiers = _objectSpread8({
            forkMug: !1,
            seasoning: this.seasoning ? helpers.includes(this.seasoning) : !1,
            mayoflex: this.mayoLookup.size ? helpers.some(function(item10) {
              return item10.item === Mayo.flex;
            }) : !1,
            refinedPalate: have($effect(_templateObject2216 || (_templateObject2216 = _taggedTemplateLiteral57(["Refined Palate"])))),
            garish: have($effect(_templateObject2315 || (_templateObject2315 = _taggedTemplateLiteral57(["Gar-ish"])))),
            saucemaven: have($skill(_templateObject2413 || (_templateObject2413 = _taggedTemplateLiteral57(["Saucemaven"])))),
            pinkyRing: have($item(_templateObject2513 || (_templateObject2513 = _taggedTemplateLiteral57(["mafia pinky ring"])))) && (0, import_kolmafia64.canEquip)($item(_templateObject2613 || (_templateObject2613 = _taggedTemplateLiteral57(["mafia pinky ring"])))),
            tuxedoShirt: have($item(_templateObject2713 || (_templateObject2713 = _taggedTemplateLiteral57(["tuxedo shirt"])))) && (0, import_kolmafia64.canEquip)($item(_templateObject2811 || (_templateObject2811 = _taggedTemplateLiteral57(["tuxedo shirt"]))))
          }, overrideModifiers);
          this.seasoning && (0, import_kolmafia64.itemType)(menuItem.item) === "food" && this.mpa * (_expectedAdventures(menuItem.item, _objectSpread8(_objectSpread8({}, defaultModifiers), {}, {
            seasoning: !0
          })) - _expectedAdventures(menuItem.item, _objectSpread8(_objectSpread8({}, defaultModifiers), {}, {
            seasoning: !1
          }))) > (0, import_kolmafia64.mallPrice)($item(_templateObject2910 || (_templateObject2910 = _taggedTemplateLiteral57(["Special Seasoning"])))) && helpers.push(this.seasoning);
          var forkMug = (0, import_kolmafia64.itemType)(menuItem.item) === "food" ? this.fork : (0, import_kolmafia64.itemType)(menuItem.item) === "booze" ? this.mug : null, forkMugPrice = forkMug ? forkMug.price() : 1 / 0, baseCost = menuItem.price() + sum(helpers, function(item10) {
            return item10.price();
          }), valueRaw = _expectedAdventures(menuItem.item, defaultModifiers) * this.mpa - baseCost + ((_menuItem$additionalV = menuItem.additionalValue) !== null && _menuItem$additionalV !== void 0 ? _menuItem$additionalV : 0), valueForkMug = _expectedAdventures(menuItem.item, _objectSpread8(_objectSpread8({}, defaultModifiers), {}, {
            forkMug: !0
          })) * this.mpa - baseCost - forkMugPrice + ((_menuItem$additionalV2 = menuItem.additionalValue) !== null && _menuItem$additionalV2 !== void 0 ? _menuItem$additionalV2 : 0), valueSpleen = $items(_templateObject3010 || (_templateObject3010 = _taggedTemplateLiteral57(["jar of fermented pickle juice, extra-greasy slider"]))).includes(menuItem.item) ? 5 * this.spleenValue : 0;
          return forkMug && valueForkMug > valueRaw ? [[].concat(helpers, [forkMug, menuItem]), valueForkMug + valueSpleen] : [[].concat(helpers, [menuItem]), valueRaw + valueSpleen];
        }
        /**
         * Plan an individual organ.
         *
         * @param organ Organ to plan
         * @param capacity Organ capacity.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgan",
        value: function(organ, capacity) {
          var _this = this;
          var overrideModifiers = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, submenu = this.menu.filter(function(menuItem) {
            return menuItem.organ === organ && (0, import_kolmafia64.myLevel)() >= menuItem.item.levelreq;
          }), knapsackValues = submenu.map(function(menuItem) {
            return [].concat(_toConsumableArray16(_this.consumptionHelpersAndValue(menuItem, overrideModifiers)), [menuItem.size, menuItem.maximum]);
          });
          return knapsack(knapsackValues, capacity);
        }
        /**
         * Plan organs.
         *
         * @param organCapacities Organ capacities.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgans",
        value: function(organCapacities) {
          var _this = this;
          var _ref5, overrideModifiers = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, valuePlans = organCapacities.map(function(_ref) {
            var _ref2 = _slicedToArray19(_ref, 2), organ = _ref2[0], capacity = _ref2[1];
            return _this.planOrgan(organ, capacity, overrideModifiers);
          });
          return [sum(valuePlans, function(_ref3) {
            var _ref4 = _slicedToArray19(_ref3, 1), value = _ref4[0];
            return value;
          }), (_ref5 = []).concat.apply(_ref5, _toConsumableArray16(valuePlans.map(function(_ref6) {
            var _ref7 = _slicedToArray19(_ref6, 2), plan = _ref7[1];
            return plan;
          })))];
        }
        /**
         * Plan organs, retrying with and without each trial item. Runtime is
         * proportional to 2 ^ trialItems.length.
         *
         * @param organCapacities Organ capacities.
         * @param trialItems Items to rerun solver with and without.
         * @param overrideModifiers Overrides for consumption modifiers, if any.
         * @returns Pair of [value, menu items and quantities].
         */
      }, {
        key: "planOrgansWithTrials",
        value: function(organCapacities, trialItems, overrideModifiers) {
          if (trialItems.length === 0)
            return this.planOrgans(organCapacities, overrideModifiers);
          var _trialItems$ = _slicedToArray19(trialItems[0], 2), trialItem = _trialItems$[0], organSizes = _trialItems$[1];
          if (trialItem.maximum !== void 0 && trialItem.maximum <= 0)
            return this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers);
          var organCapacitiesWithMap = new Map(organCapacities), _iterator = _createForOfIteratorHelper14(organSizes), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _step$value = _slicedToArray19(_step.value, 2), organ = _step$value[0], size = _step$value[1], current2 = organCapacitiesWithMap.get(organ);
              if (current2 === void 0)
                return this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers);
              organCapacitiesWithMap.set(organ, current2 - size);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          var organCapacitiesWith = _toConsumableArray16(organCapacitiesWithMap), isRefinedPalate = trialItem.item === $item(_templateObject3114 || (_templateObject3114 = _taggedTemplateLiteral57(["pocket wish"]))) && trialItem.effect === $effect(_templateObject3212 || (_templateObject3212 = _taggedTemplateLiteral57(["Refined Palate"]))) || trialItem.item === $item(_templateObject3312 || (_templateObject3312 = _taggedTemplateLiteral57(["toasted brie"]))), isGarish = trialItem.item === $item(_templateObject3410 || (_templateObject3410 = _taggedTemplateLiteral57(["pocket wish"]))) && trialItem.effect === $effect(_templateObject3510 || (_templateObject3510 = _taggedTemplateLiteral57(["Gar-ish"]))) || trialItem.item === $item(_templateObject3610 || (_templateObject3610 = _taggedTemplateLiteral57(["potion of the field gar"]))), _this$planOrgansWithT = this.planOrgansWithTrials(organCapacities, trialItems.slice(1), overrideModifiers), _this$planOrgansWithT2 = _slicedToArray19(_this$planOrgansWithT, 2), valueWithout = _this$planOrgansWithT2[0], planWithout = _this$planOrgansWithT2[1], _this$planOrgansWithT3 = this.planOrgansWithTrials(organCapacitiesWith, trialItems.slice(1), _objectSpread8(_objectSpread8(_objectSpread8({}, overrideModifiers), isRefinedPalate ? {
            refinedPalate: !0
          } : {}), isGarish ? {
            garish: !0
          } : {})), _this$planOrgansWithT4 = _slicedToArray19(_this$planOrgansWithT3, 2), valueWith = _this$planOrgansWithT4[0], planWith = _this$planOrgansWithT4[1], _this$consumptionHelp = this.consumptionHelpersAndValue(trialItem, {}), _this$consumptionHelp2 = _slicedToArray19(_this$consumptionHelp, 2), helpersAndItem = _this$consumptionHelp2[0], value = _this$consumptionHelp2[1];
          return valueWithout > valueWith + value ? [valueWithout, planWithout] : [valueWith + value, [].concat(_toConsumableArray16(planWith), [[helpersAndItem, 1]])];
        }
      }]), DietPlanner2;
    }(), interactingItems = [[$item(_templateObject3710 || (_templateObject3710 = _taggedTemplateLiteral57(["spice melange"]))), [["food", -3], ["booze", -3]]], [$item(_templateObject3810 || (_templateObject3810 = _taggedTemplateLiteral57(["Ultra Mega Sour Ball"]))), [["food", -3], ["booze", -3]]], [$item(_templateObject3910 || (_templateObject3910 = _taggedTemplateLiteral57(["The Plumber's mushroom stew"]))), [["food", 3], ["booze", -1]]], [$item(_templateObject4010 || (_templateObject4010 = _taggedTemplateLiteral57(["The Mad Liquor"]))), [["food", -1], ["booze", 3]]], [$item(_templateObject4112 || (_templateObject4112 = _taggedTemplateLiteral57(["Doc Clock's thyme cocktail"]))), [["food", -2], ["booze", 4]]], [$item(_templateObject4211 || (_templateObject4211 = _taggedTemplateLiteral57(["Mr. Burnsger"]))), [["food", 4], ["booze", -2]]], [$effect(_templateObject4311 || (_templateObject4311 = _taggedTemplateLiteral57(["Refined Palate"]))), []], [$item(_templateObject4410 || (_templateObject4410 = _taggedTemplateLiteral57(["toasted brie"]))), [["food", 2]]], [$effect(_templateObject4510 || (_templateObject4510 = _taggedTemplateLiteral57(["Gar-ish"]))), []], [$item(_templateObject4610 || (_templateObject4610 = _taggedTemplateLiteral57(["potion of the field gar"]))), []]];
    DietEntry = /* @__PURE__ */ function() {
      function DietEntry2(menuItems, quantity) {
        _classCallCheck15(this, DietEntry2), _defineProperty19(this, "menuItems", void 0), _defineProperty19(this, "quantity", void 0), this.menuItems = menuItems, this.quantity = quantity;
      }
      return _createClass11(DietEntry2, [{
        key: "target",
        value: function() {
          return this.menuItems[this.menuItems.length - 1];
        }
      }, {
        key: "helpers",
        value: function() {
          return this.menuItems.length > 1 ? this.menuItems.slice(0, -1) : [];
        }
      }, {
        key: "expectedAdventures",
        value: function(diet) {
          {
            if (this.menuItems.length === 0 || this.quantity === 0)
              return 0;
            var items = this.menuItems.map(function(m) {
              return m.item;
            }), targetItem = this.menuItems[this.menuItems.length - 1].item, fork = (0, import_kolmafia64.itemType)(targetItem) === "food" && items.includes($item(_templateObject496 || (_templateObject496 = _taggedTemplateLiteral57(["Ol' Scratch's salad fork"])))), mug = (0, import_kolmafia64.itemType)(targetItem) === "booze" && items.includes($item(_templateObject506 || (_templateObject506 = _taggedTemplateLiteral57(["Frosty's frosty mug"]))));
            return this.quantity * _expectedAdventures(this.menuItems[this.menuItems.length - 1].item, {
              forkMug: fork || mug,
              seasoning: items.includes($item(_templateObject5111 || (_templateObject5111 = _taggedTemplateLiteral57(["Special Seasoning"])))),
              mayoflex: items.includes(Mayo.flex),
              refinedPalate: diet.refinedPalate,
              garish: diet.garish,
              saucemaven: diet.saucemaven,
              pinkyRing: diet.pinkyRing,
              tuxedoShirt: diet.tuxedoShirt
            });
          }
        }
      }, {
        key: "expectedValue",
        value: function(mpa, diet) {
          var method = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "gross", gross = mpa * this.expectedAdventures(diet) + this.quantity * sum(this.menuItems, function(menuItem) {
            var _menuItem$additionalV3;
            return (_menuItem$additionalV3 = menuItem.additionalValue) !== null && _menuItem$additionalV3 !== void 0 ? _menuItem$additionalV3 : 0;
          });
          return method === "gross" ? gross : gross - this.expectedPrice();
        }
      }, {
        key: "expectedPrice",
        value: function() {
          return this.quantity * sum(this.menuItems, function(menuItem) {
            return menuItem.price();
          });
        }
      }]), DietEntry2;
    }(), Diet = /* @__PURE__ */ function() {
      function Diet2() {
        var entries = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        _classCallCheck15(this, Diet2), _defineProperty19(this, "entries", void 0), this.entries = entries;
      }
      return _createClass11(Diet2, [{
        key: "refinedPalate",
        get: function() {
          return this.entries.some(function(dietEntry) {
            return dietEntry.menuItems.some(function(trialItem) {
              return trialItem.item === $item(_templateObject5210 || (_templateObject5210 = _taggedTemplateLiteral57(["pocket wish"]))) && trialItem.effect === $effect(_templateObject5310 || (_templateObject5310 = _taggedTemplateLiteral57(["Refined Palate"]))) || trialItem.item === $item(_templateObject5410 || (_templateObject5410 = _taggedTemplateLiteral57(["toasted brie"])));
            });
          });
        }
      }, {
        key: "garish",
        get: function() {
          return this.entries.some(function(dietEntry) {
            return dietEntry.menuItems.some(function(trialItem) {
              return trialItem.item === $item(_templateObject557 || (_templateObject557 = _taggedTemplateLiteral57(["pocket wish"]))) && trialItem.effect === $effect(_templateObject565 || (_templateObject565 = _taggedTemplateLiteral57(["Gar-ish"]))) || trialItem.item === $item(_templateObject575 || (_templateObject575 = _taggedTemplateLiteral57(["potion of the field gar"])));
            });
          });
        }
      }, {
        key: "saucemaven",
        get: function() {
          return have($skill(_templateObject585 || (_templateObject585 = _taggedTemplateLiteral57(["Saucemaven"]))));
        }
      }, {
        key: "tuxedoShirt",
        get: function() {
          return have($item(_templateObject594 || (_templateObject594 = _taggedTemplateLiteral57(["tuxedo shirt"])))) && (0, import_kolmafia64.canEquip)($item(_templateObject604 || (_templateObject604 = _taggedTemplateLiteral57(["tuxedo shirt"]))));
        }
      }, {
        key: "pinkyRing",
        get: function() {
          return have($item(_templateObject6110 || (_templateObject6110 = _taggedTemplateLiteral57(["mafia pinky ring"])))) && (0, import_kolmafia64.canEquip)($item(_templateObject6210 || (_templateObject6210 = _taggedTemplateLiteral57(["mafia pinky ring"]))));
        }
      }, {
        key: "expectedAdventures",
        value: function() {
          var _this = this;
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedAdventures(_this);
          });
        }
      }, {
        key: "expectedValue",
        value: function(mpa) {
          var _this = this;
          var method = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "gross";
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedValue(mpa, _this, method);
          });
        }
      }, {
        key: "expectedPrice",
        value: function() {
          return sum(this.entries, function(dietEntry) {
            return dietEntry.expectedPrice();
          });
        }
      }, {
        key: "copy",
        value: function() {
          return new Diet2(_toConsumableArray16(this.entries));
        }
      }], [{
        key: "from",
        value: function(rawDiet) {
          var diet = rawDiet.map(function(item10) {
            var _item = _slicedToArray19(item10, 2), menuItems = _item[0], quantity = _item[1];
            return new DietEntry(menuItems, quantity);
          });
          return new Diet2(diet);
        }
      }, {
        key: "plan",
        value: function(mpa, menu) {
          var organCapacities = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
            food: "auto",
            booze: "auto",
            spleen: "auto"
          }, food = organCapacities.food, booze = organCapacities.booze, spleen = organCapacities.spleen, plannerCapacity = [];
          return food && plannerCapacity.push(["food", food === "auto" ? null : food]), booze && plannerCapacity.push(["booze", booze === "auto" ? null : booze]), spleen && plannerCapacity.push(["spleen item", spleen === "auto" ? null : spleen]), Diet2.from(planDiet(mpa, menu, plannerCapacity));
        }
      }]), Diet2;
    }();
  }
});

// node_modules/libram/dist/Dungeon.js
function _taggedTemplateLiteral58(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _createForOfIteratorHelper15(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray34(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _toConsumableArray17(arr) {
  return _arrayWithoutHoles17(arr) || _iterableToArray17(arr) || _unsupportedIterableToArray34(arr) || _nonIterableSpread17();
}
function _nonIterableSpread17() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray34(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray34(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray34(o, minLen);
  }
}
function _iterableToArray17(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles17(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray34(arr);
}
function _arrayLikeToArray34(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck16(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties12(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass12(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties12(Constructor.prototype, protoProps), staticProps && _defineProperties12(Constructor, staticProps), Constructor;
}
function _defineProperty20(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
var import_kolmafia65, _templateObject491, _templateObject2126, _templateObject3108, Dungeon, Dreadsylvania, Hobopolis, SlimeTube, init_Dungeon = __esm({
  "node_modules/libram/dist/Dungeon.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia65 = require("kolmafia");
    init_Clan();
    init_lib();
    init_template_string();
    init_utils();
    Dungeon = /* @__PURE__ */ function() {
      function Dungeon2(name_, loot, openAction, closeAction, openCost, openImage, closedImage) {
        _classCallCheck16(this, Dungeon2), _defineProperty20(this, "name_", void 0), _defineProperty20(this, "loot", void 0), _defineProperty20(this, "openAction", void 0), _defineProperty20(this, "closeAction", void 0), _defineProperty20(this, "openCost", void 0), _defineProperty20(this, "openImage", void 0), _defineProperty20(this, "closedImage", void 0), this.name_ = name_, this.loot = loot, this.openAction = openAction, this.closeAction = closeAction, this.openCost = openCost, this.openImage = openImage, this.closedImage = closedImage;
      }
      return _createClass12(Dungeon2, [{
        key: "possibleLoot",
        get: function() {
          return _toConsumableArray17(this.loot);
        }
      }, {
        key: "name",
        get: function() {
          return this.name_;
        }
      }, {
        key: "distribute",
        value: function(idOrname_) {
          var _this = this;
          var loot = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.loot, distributeAllOfAGivenItem = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !(loot instanceof Map), player = getPlayerFromIdOrName(idOrname_), lootList = loot instanceof Map ? countedMapToArray(loot) : Array.isArray(loot) ? loot : [loot], badLoot = lootList.find(function(lootItem) {
            return !_this.loot.includes(lootItem);
          });
          if (badLoot)
            throw new Error("".concat(badLoot, " is not a valid piece of dungeon loot"));
          var pageText = (0, import_kolmafia65.visitUrl)("clan_basement.php");
          if (!pageText.match(new RegExp(player.name, "i")))
            throw new Error("".concat(player.name, " cannot be distributed loot from ").concat((0, import_kolmafia65.getClanName)()));
          var itemname_s = (0, import_kolmafia65.xpath)(pageText, "//tr/td[2]/b/text()"), whichLoots = (0, import_kolmafia65.xpath)(pageText, '//form[@action="clan_basement.php"]//input[@type="hidden"][@name_="whichloot"]/@value');
          itemname_s.forEach(function(itemname_, index) {
            lootList.includes((0, import_kolmafia65.toItem)(itemname_)) && ((0, import_kolmafia65.visitUrl)("clan_basement.php?whichloot=".concat(whichLoots[index], "&recipient=").concat(player.id)), distributeAllOfAGivenItem || lootList.splice(lootList.indexOf((0, import_kolmafia65.toItem)(itemname_))));
          });
        }
        /**
         * Close this dungeon
         *
         * @returns Whether the dungeon is now closed
         */
      }, {
        key: "close",
        value: function() {
          (0, import_kolmafia65.visitUrl)("clan_basement.php?action=".concat(this.closeAction, "&confirm=true"), !0);
          var pageText = (0, import_kolmafia65.visitUrl)("clan_basement.php");
          return pageText.includes(this.closedImage);
        }
        /**
         * Open an instance of this dungeon
         *
         * @param paymentPolicy How much meat should we put into the clan stash to open this dungeon?
         * @returns Whether the dungeon is now open
         */
      }, {
        key: "open",
        value: function() {
          var paymentPolicy = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Difference", pageText = (0, import_kolmafia65.visitUrl)("clan_basement.php");
          if (pageText.includes(this.openImage))
            return !0;
          var clan = Clan.get();
          if (paymentPolicy === "All")
            clan.putMeatInCoffer(this.openCost);
          else {
            var stashMeat = clan.getMeatInCoffer(), payDifference = this.openCost - stashMeat;
            if (payDifference > 0) {
              if (paymentPolicy === "None")
                return !1;
              clan.putMeatInCoffer(payDifference);
            }
          }
          return (0, import_kolmafia65.visitUrl)("clan_basement.php?action=".concat(this.openAction), !0), (0, import_kolmafia65.visitUrl)("clan_basement.php").includes(this.openImage);
        }
        /**
         * @returns A counted map of all loot from this dungeon eligible for distribution
         */
      }, {
        key: "findLoot",
        value: function() {
          var result = /* @__PURE__ */ new Map(), pageText = (0, import_kolmafia65.visitUrl)("clan_basement.php"), _iterator = _createForOfIteratorHelper15(this.loot), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _pageText$match$lengt, _pageText$match, lootItem = _step.value;
              result.set(lootItem, (_pageText$match$lengt = (_pageText$match = pageText.match(new RegExp(lootItem.name, "g"))) === null || _pageText$match === void 0 ? void 0 : _pageText$match.length) !== null && _pageText$match$lengt !== void 0 ? _pageText$match$lengt : 0);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return result;
        }
      }]), Dungeon2;
    }(), Dreadsylvania = new Dungeon("Dreadsylvania", $items(_templateObject491 || (_templateObject491 = _taggedTemplateLiteral58(["Great Wolf's headband, Great Wolf's right paw, Great Wolf's left paw, Great Wolf's lice, Great Wolf's rocket launcher, Great Wolf's beastly trousers, Drapes-You-Regally, Warms-Your-Tush, Covers-Your-Head, Protects-Your-Junk, Quiets-Your-Steps, Helps-You-Sleep, Mayor Ghost's khakis, Mayor Ghost's cloak, Mayor Ghost's toupee, Mayor Ghost's scissors, Mayor Ghost's sash, Mayor Ghost's gavel, zombie mariachi hat, zombie accordion, zombie mariachi pants, HOA regulation book, HOA zombie eyes, HOA citation pad, Unkillable Skeleton's skullcap, Unkillable Skeleton's shinguards, Unkillable Skeleton's breastplate, Unkillable Skeleton's shield, Unkillable Skeleton's sawsword, Unkillable Skeleton's restless leg, skull capacitor, Thunkula's drinking cap, Drunkula's silky pants, Drunkula's cape, Drunkula's ring of haze, Drunkula's wineglass, Drunkula's bell, bottle of Bloodweiser, bottle of Bloodweiser, bottle of Bloodweiser, bottle of Bloodweiser, electric Kool-Aid, electric Kool-Aid, electric Kool-Aid, electric Kool-Aid, ghost pepper, ghost pepper, ghost pepper, ghost pepper, Gets-You-Drunk, Gets-You-Drunk, Gets-You-Drunk, Gets-You-Drunk, wriggling severed nose, wriggling severed nose, wriggling severed nose, wriggling severed nose, Hunger\u2122 Sauce, Hunger\u2122 Sauce, Hunger\u2122 Sauce, Hunger\u2122 Sauce"]))), "translatemap", "foldmap", 1e6, "dvmap.gif", "foldmap.gif"), Hobopolis = new Dungeon("Hobopolis", $items(_templateObject2126 || (_templateObject2126 = _taggedTemplateLiteral58(["Ol' Scratch's ash can, Ol' Scratch's ol' britches, Ol' Scratch's stovepipe hat, Ol' Scratch's infernal pitchfork, Ol' Scratch's manacles, Ol' Scratch's stove door, Frosty's carrot, Frosty's nailbat, Frosty's old silk hat, Frosty's arm, Frosty's iceball, Frosty's snowball sack, Oscus's dumpster waders, Oscus's pelt, Wand of Oscus, Oscus's flypaper pants, Oscus's garbage can lid, Oscus's neverending soda, Zombo's grievous greaves, Zombo's shield, Zombo's skullcap, Zombo's empty eye, Zombo's shoulder blade, Zombo's skull ring, Chester's bag of candy, Chester's cutoffs, Chester's moustache, Chester's Aquarius medallion, Chester's muscle shirt, Chester's sunglasses, Hodgman's bow tie, Hodgman's porkpie hat, Hodgman's lobsterskin pants, Hodgman's almanac, Hodgman's lucky sock, Hodgman's metal detector, Hodgman's varcolac paw, Hodgman's harmonica, Hodgman's garbage sticker, Hodgman's cane, Hodgman's whackin' stick, Hodgman's disgusting technicolor overcoat, Hodgman's imaginary hamster"]))), "cleansewer", "floodsewer", 1e6, "opengrate.gif", "sewergrate.gif"), SlimeTube = new Dungeon("The Slime Tube", $items(_templateObject3108 || (_templateObject3108 = _taggedTemplateLiteral58(["slime-soaked brain, slime-soaked hypophysis, slime-soaked sweat gland, squirming Slime larva, caustic slime nodule, caustic slime nodule, hardened slime belt, hardened slime hat, hardened slime pants"]))), "cleanspot", "sealtube", 25e4, "slimehole.gif", "greasespot.gif");
  }
});

// node_modules/libram/dist/mood.js
function ownKeys9(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread9(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys9(Object(source), !0).forEach(function(key) {
      _defineProperty21(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys9(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _createForOfIteratorHelper16(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray35(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray35(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray35(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray35(o, minLen);
  }
}
function _arrayLikeToArray35(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral59(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _inherits5(subClass, superClass) {
  if (typeof superClass != "function" && superClass !== null)
    throw new TypeError("Super expression must either be null or a function");
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf5(subClass, superClass);
}
function _setPrototypeOf5(o, p) {
  return _setPrototypeOf5 = Object.setPrototypeOf || function(o2, p2) {
    return o2.__proto__ = p2, o2;
  }, _setPrototypeOf5(o, p);
}
function _createSuper4(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct4();
  return function() {
    var Super = _getPrototypeOf4(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf4(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else
      result = Super.apply(this, arguments);
    return _possibleConstructorReturn4(this, result);
  };
}
function _possibleConstructorReturn4(self, call) {
  if (call && (typeof call == "object" || typeof call == "function"))
    return call;
  if (call !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized4(self);
}
function _assertThisInitialized4(self) {
  if (self === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return self;
}
function _isNativeReflectConstruct4() {
  if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch (e) {
    return !1;
  }
}
function _getPrototypeOf4(o) {
  return _getPrototypeOf4 = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  }, _getPrototypeOf4(o);
}
function _defineProperty21(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _classCallCheck17(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties13(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass13(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties13(Constructor.prototype, protoProps), staticProps && _defineProperties13(Constructor, staticProps), Constructor;
}
var import_kolmafia66, _templateObject497, _templateObject2127, _templateObject3109, _templateObject498, _templateObject558, _templateObject646, _templateObject740, _templateObject835, _templateObject928, _templateObject1025, MpSource, OscusSoda, MagicalSausages, MoodElement, SkillMoodElement, PotionMoodElement, GenieMoodElement, CustomMoodElement, AsdonMoodElement, Mood, init_mood = __esm({
  "node_modules/libram/dist/mood.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia66 = require("kolmafia");
    init_lib();
    init_property();
    init_resources();
    init_template_string();
    init_utils();
    MpSource = /* @__PURE__ */ function() {
      function MpSource2() {
        _classCallCheck17(this, MpSource2);
      }
      return _createClass13(MpSource2, [{
        key: "usesRemaining",
        value: function() {
          return 0;
        }
      }, {
        key: "availableMpMax",
        value: function() {
          return this.availableMpMin();
        }
      }]), MpSource2;
    }(), OscusSoda = /* @__PURE__ */ function(_MpSource) {
      _inherits5(OscusSoda2, _MpSource);
      var _super = _createSuper4(OscusSoda2);
      function OscusSoda2() {
        return _classCallCheck17(this, OscusSoda2), _super.apply(this, arguments);
      }
      return _createClass13(OscusSoda2, [{
        key: "available",
        value: function() {
          return have($item(_templateObject497 || (_templateObject497 = _taggedTemplateLiteral59(["Oscus's neverending soda"]))));
        }
      }, {
        key: "usesRemaining",
        value: function() {
          return get("oscusSodaUsed") ? 0 : 1;
        }
      }, {
        key: "availableMpMin",
        value: function() {
          return this.available() && this.usesRemaining() > 0 ? 200 : 0;
        }
      }, {
        key: "availableMpMax",
        value: function() {
          return this.available() && this.usesRemaining() > 0 ? 300 : 0;
        }
      }, {
        key: "execute",
        value: function() {
          (0, import_kolmafia66.use)($item(_templateObject2127 || (_templateObject2127 = _taggedTemplateLiteral59(["Oscus's neverending soda"]))));
        }
      }]), OscusSoda2;
    }(MpSource);
    _defineProperty21(OscusSoda, "instance", new OscusSoda());
    MagicalSausages = /* @__PURE__ */ function(_MpSource2) {
      _inherits5(MagicalSausages2, _MpSource2);
      var _super2 = _createSuper4(MagicalSausages2);
      function MagicalSausages2() {
        return _classCallCheck17(this, MagicalSausages2), _super2.apply(this, arguments);
      }
      return _createClass13(MagicalSausages2, [{
        key: "available",
        value: function() {
          return have($item(_templateObject3109 || (_templateObject3109 = _taggedTemplateLiteral59(["Kramco Sausage-o-Matic\u2122"]))));
        }
      }, {
        key: "usesRemaining",
        value: function() {
          var maxSausages = (0, import_kolmafia66.availableAmount)($item(_templateObject498 || (_templateObject498 = _taggedTemplateLiteral59(["magical sausage"])))) + (0, import_kolmafia66.availableAmount)($item(_templateObject558 || (_templateObject558 = _taggedTemplateLiteral59(["magical sausage casing"]))));
          return this.available() ? clamp(23 - get("_sausagesEaten"), 0, maxSausages) : 0;
        }
      }, {
        key: "availableMpMin",
        value: function() {
          return this.available() ? Math.min((0, import_kolmafia66.myMaxmp)(), 999) * this.usesRemaining() : 0;
        }
      }, {
        key: "execute",
        value: function() {
          var mpSpaceAvailable = (0, import_kolmafia66.myMaxmp)() - (0, import_kolmafia66.myMp)();
          if (!(mpSpaceAvailable < 700)) {
            var maxSausages = Math.min(this.usesRemaining(), Math.floor(((0, import_kolmafia66.myMaxmp)() - (0, import_kolmafia66.myMp)()) / Math.min((0, import_kolmafia66.myMaxmp)() - (0, import_kolmafia66.myMp)(), 999)));
            (0, import_kolmafia66.retrieveItem)(maxSausages, $item(_templateObject646 || (_templateObject646 = _taggedTemplateLiteral59(["magical sausage"])))), (0, import_kolmafia66.eat)(maxSausages, $item(_templateObject740 || (_templateObject740 = _taggedTemplateLiteral59(["magical sausage"]))));
          }
        }
      }]), MagicalSausages2;
    }(MpSource);
    _defineProperty21(MagicalSausages, "instance", new MagicalSausages());
    MoodElement = /* @__PURE__ */ function() {
      function MoodElement2() {
        _classCallCheck17(this, MoodElement2);
      }
      return _createClass13(MoodElement2, [{
        key: "mpCostPerTurn",
        value: function() {
          return 0;
        }
      }, {
        key: "turnIncrement",
        value: function() {
          return 1;
        }
      }]), MoodElement2;
    }(), SkillMoodElement = /* @__PURE__ */ function(_MoodElement) {
      _inherits5(SkillMoodElement2, _MoodElement);
      var _super3 = _createSuper4(SkillMoodElement2);
      function SkillMoodElement2(skill) {
        var _this;
        return _classCallCheck17(this, SkillMoodElement2), _this = _super3.call(this), _defineProperty21(_assertThisInitialized4(_this), "skill", void 0), _this.skill = skill, _this;
      }
      return _createClass13(SkillMoodElement2, [{
        key: "mpCostPerTurn",
        value: function() {
          var turns = (0, import_kolmafia66.turnsPerCast)(this.skill);
          return turns > 0 ? (0, import_kolmafia66.mpCost)(this.skill) / turns : 0;
        }
      }, {
        key: "turnIncrement",
        value: function() {
          return (0, import_kolmafia66.turnsPerCast)(this.skill);
        }
      }, {
        key: "execute",
        value: function(mood, ensureTurns) {
          var effect2 = (0, import_kolmafia66.toEffect)(this.skill), initialTurns = (0, import_kolmafia66.haveEffect)(effect2);
          if (!(0, import_kolmafia66.haveSkill)(this.skill))
            return !1;
          if (initialTurns >= ensureTurns)
            return !0;
          if (mood.options.songSlots.length > 0 && isSong(this.skill) && !have(effect2)) {
            var activeSongs = getActiveSongs(), _iterator = _createForOfIteratorHelper16(activeSongs), _step;
            try {
              var _loop = function() {
                var song2 = _step.value, slot = mood.options.songSlots.find(function(slot2) {
                  return slot2.includes(song2);
                });
                if (!slot || slot.includes(effect2))
                  return (0, import_kolmafia66.cliExecute)("shrug ".concat(song2)), "break";
              };
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var _ret = _loop();
                if (_ret === "break")
                  break;
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
          for (var oldRemainingCasts = -1, remainingCasts = Math.ceil((ensureTurns - (0, import_kolmafia66.haveEffect)(effect2)) / (0, import_kolmafia66.turnsPerCast)(this.skill)); remainingCasts > 0 && oldRemainingCasts !== remainingCasts; ) {
            var maxCasts = void 0;
            if ((0, import_kolmafia66.hpCost)(this.skill) > 0)
              maxCasts = Math.max(0, Math.floor(((0, import_kolmafia66.myHp)() - 1) / (0, import_kolmafia66.hpCost)(this.skill)));
            else {
              var cost = (0, import_kolmafia66.mpCost)(this.skill);
              if (maxCasts = Math.floor(Math.min(mood.availableMp(), (0, import_kolmafia66.myMp)()) / cost), maxCasts < remainingCasts) {
                var bestMp = Math.min(remainingCasts * (0, import_kolmafia66.mpCost)(this.skill), (0, import_kolmafia66.myMaxmp)());
                mood.moreMp(bestMp), maxCasts = Math.floor(Math.min(mood.availableMp(), (0, import_kolmafia66.myMp)()) / cost);
              }
            }
            var casts = clamp(remainingCasts, 0, Math.min(100, maxCasts));
            (0, import_kolmafia66.useSkill)(casts, this.skill), oldRemainingCasts = remainingCasts, remainingCasts = Math.ceil((ensureTurns - (0, import_kolmafia66.haveEffect)(effect2)) / (0, import_kolmafia66.turnsPerCast)(this.skill));
          }
          return (0, import_kolmafia66.haveEffect)(effect2) > ensureTurns;
        }
      }]), SkillMoodElement2;
    }(MoodElement), PotionMoodElement = /* @__PURE__ */ function(_MoodElement2) {
      _inherits5(PotionMoodElement2, _MoodElement2);
      var _super4 = _createSuper4(PotionMoodElement2);
      function PotionMoodElement2(potion, maxPricePerTurn) {
        var _this2;
        return _classCallCheck17(this, PotionMoodElement2), _this2 = _super4.call(this), _defineProperty21(_assertThisInitialized4(_this2), "potion", void 0), _defineProperty21(_assertThisInitialized4(_this2), "maxPricePerTurn", void 0), _this2.potion = potion, _this2.maxPricePerTurn = maxPricePerTurn, _this2;
      }
      return _createClass13(PotionMoodElement2, [{
        key: "execute",
        value: function(mood, ensureTurns) {
          var effect2 = (0, import_kolmafia66.effectModifier)(this.potion, "Effect"), effectTurns = (0, import_kolmafia66.haveEffect)(effect2), turnsPerUse = (0, import_kolmafia66.numericModifier)(this.potion, "Effect Duration");
          if ((0, import_kolmafia66.mallPrice)(this.potion) > this.maxPricePerTurn * turnsPerUse)
            return !1;
          if (effectTurns < ensureTurns) {
            var uses = Math.floor((ensureTurns - effectTurns) / turnsPerUse), quantityToBuy = clamp(uses - (0, import_kolmafia66.availableAmount)(this.potion), 0, 100);
            (0, import_kolmafia66.buy)(quantityToBuy, this.potion, Math.floor(this.maxPricePerTurn * turnsPerUse));
            var quantityToUse = clamp(uses, 0, (0, import_kolmafia66.availableAmount)(this.potion));
            (0, import_kolmafia66.use)(quantityToUse, this.potion);
          }
          var remainingDifference = ensureTurns - (0, import_kolmafia66.haveEffect)(effect2);
          if (remainingDifference > 0) {
            var maxPrice = Math.floor(this.maxPricePerTurn * remainingDifference);
            (0, import_kolmafia66.mallPrice)(this.potion) <= maxPrice && ((0, import_kolmafia66.availableAmount)(this.potion) || (0, import_kolmafia66.buy)(1, this.potion, maxPrice)) && (0, import_kolmafia66.use)(1, this.potion);
          }
          return (0, import_kolmafia66.haveEffect)(effect2) >= ensureTurns;
        }
      }]), PotionMoodElement2;
    }(MoodElement), GenieMoodElement = /* @__PURE__ */ function(_MoodElement3) {
      _inherits5(GenieMoodElement2, _MoodElement3);
      var _super5 = _createSuper4(GenieMoodElement2);
      function GenieMoodElement2(effect2) {
        var _this3;
        return _classCallCheck17(this, GenieMoodElement2), _this3 = _super5.call(this), _defineProperty21(_assertThisInitialized4(_this3), "effect", void 0), _this3.effect = effect2, _this3;
      }
      return _createClass13(GenieMoodElement2, [{
        key: "execute",
        value: function(mood, ensureTurns) {
          if ((0, import_kolmafia66.haveEffect)(this.effect) >= ensureTurns)
            return !0;
          var neededWishes = Math.ceil(((0, import_kolmafia66.haveEffect)(this.effect) - ensureTurns) / 20), wishesToBuy = clamp(neededWishes - (0, import_kolmafia66.availableAmount)($item(_templateObject835 || (_templateObject835 = _taggedTemplateLiteral59(["pocket wish"])))), 0, 20);
          (0, import_kolmafia66.buy)(wishesToBuy, $item(_templateObject928 || (_templateObject928 = _taggedTemplateLiteral59(["pocket wish"]))), 5e4);
          for (var wishesToUse = clamp(neededWishes, 0, (0, import_kolmafia66.availableAmount)($item(_templateObject1025 || (_templateObject1025 = _taggedTemplateLiteral59(["pocket wish"]))))); wishesToUse > 0; wishesToUse--)
            (0, import_kolmafia66.cliExecute)("genie effect ".concat(this.effect.name));
          return (0, import_kolmafia66.haveEffect)(this.effect) >= ensureTurns;
        }
      }]), GenieMoodElement2;
    }(MoodElement), CustomMoodElement = /* @__PURE__ */ function(_MoodElement4) {
      _inherits5(CustomMoodElement2, _MoodElement4);
      var _super6 = _createSuper4(CustomMoodElement2);
      function CustomMoodElement2(effect2, gainEffect) {
        var _this4;
        return _classCallCheck17(this, CustomMoodElement2), _this4 = _super6.call(this), _defineProperty21(_assertThisInitialized4(_this4), "effect", void 0), _defineProperty21(_assertThisInitialized4(_this4), "gainEffect", void 0), _this4.effect = effect2, _this4.gainEffect = gainEffect != null ? gainEffect : function() {
          return (0, import_kolmafia66.cliExecute)(effect2.default);
        }, _this4;
      }
      return _createClass13(CustomMoodElement2, [{
        key: "execute",
        value: function(mood, ensureTurns) {
          for (var currentTurns = (0, import_kolmafia66.haveEffect)(this.effect), lastCurrentTurns = -1; currentTurns < ensureTurns && currentTurns !== lastCurrentTurns; )
            this.gainEffect(), lastCurrentTurns = currentTurns, currentTurns = (0, import_kolmafia66.haveEffect)(this.effect);
          return (0, import_kolmafia66.haveEffect)(this.effect) > ensureTurns;
        }
      }]), CustomMoodElement2;
    }(MoodElement), AsdonMoodElement = /* @__PURE__ */ function(_MoodElement5) {
      _inherits5(AsdonMoodElement2, _MoodElement5);
      var _super7 = _createSuper4(AsdonMoodElement2);
      function AsdonMoodElement2(effect2) {
        var _this5, preferInventory = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        return _classCallCheck17(this, AsdonMoodElement2), _this5 = _super7.call(this), _defineProperty21(_assertThisInitialized4(_this5), "effect", void 0), _defineProperty21(_assertThisInitialized4(_this5), "preferInventory", void 0), _this5.effect = effect2, _this5.preferInventory = preferInventory, _this5;
      }
      return _createClass13(AsdonMoodElement2, [{
        key: "execute",
        value: function(mood, ensureTurns) {
          return AsdonMartin_exports.drive(this.effect, ensureTurns, this.preferInventory);
        }
      }]), AsdonMoodElement2;
    }(MoodElement), Mood = /* @__PURE__ */ function() {
      function Mood2() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        _classCallCheck17(this, Mood2), _defineProperty21(this, "options", void 0), _defineProperty21(this, "elements", []), this.options = _objectSpread9(_objectSpread9({}, Mood2.defaultOptions), options);
      }
      return _createClass13(Mood2, [{
        key: "availableMp",
        value: function() {
          return this.options.useNativeRestores ? 1 / 0 : sum(this.options.mpSources, function(mpSource) {
            return mpSource.availableMpMin();
          }) + Math.max((0, import_kolmafia66.myMp)() - this.options.reserveMp, 0);
        }
      }, {
        key: "moreMp",
        value: function(minimumTarget) {
          if (!((0, import_kolmafia66.myMp)() >= minimumTarget)) {
            var _iterator2 = _createForOfIteratorHelper16(this.options.mpSources), _step2;
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                var mpSource = _step2.value;
                if (mpSource.usesRemaining() > 0 && (mpSource.execute(), (0, import_kolmafia66.myMp)() >= minimumTarget))
                  break;
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
            this.options.useNativeRestores && (0, import_kolmafia66.restoreMp)(minimumTarget);
          }
        }
        /**
         * Add a skill to the mood.
         *
         * @param skill Skill to add.
         * @returns This mood to enable chaining
         */
      }, {
        key: "skill",
        value: function(_skill) {
          return this.elements.push(new SkillMoodElement(_skill)), this;
        }
        /**
         * Add an effect to the mood, with casting based on {effect.default}.
         *
         * @param effect Effect to add.
         * @param gainEffect How to gain the effect. Only runs if we don't have the effect.
         * @returns This mood to enable chaining
         */
      }, {
        key: "effect",
        value: function(_effect, gainEffect) {
          var skill = (0, import_kolmafia66.toSkill)(_effect);
          return !gainEffect && skill !== $skill.none ? this.skill(skill) : this.elements.push(new CustomMoodElement(_effect, gainEffect)), this;
        }
        /**
         * Add a potion to the mood.
         *
         * @param potion Potion to add.
         * @param maxPricePerTurn Maximum price to pay per turn of the effect.
         * @returns This mood to enable chaining
         */
      }, {
        key: "potion",
        value: function(_potion, maxPricePerTurn) {
          return this.elements.push(new PotionMoodElement(_potion, maxPricePerTurn)), this;
        }
        /**
         * Add an effect to acquire via pocket wishes to the mood.
         *
         * @param effect Effect to wish for in the mood.
         * @returns This mood to enable chaining
         */
      }, {
        key: "genie",
        value: function(effect2) {
          return this.elements.push(new GenieMoodElement(effect2)), this;
        }
        /**
         * Add an Asdon Martin driving style to the mood.
         *
         * @param effect Driving style to add to the mood.
         * @returns This mood to enable chaining
         */
      }, {
        key: "drive",
        value: function(effect2) {
          return Object.values(AsdonMartin_exports.Driving).includes(effect2) && AsdonMartin_exports.installed() && this.elements.push(new AsdonMoodElement(effect2)), this;
        }
        /**
         * Execute the mood, trying to ensure {ensureTurns} of each effect.
         *
         * @param ensureTurns Turns of each effect to try and achieve.
         * @returns Whether or not we successfully got this many turns of every effect in the mood.
         */
      }, {
        key: "execute",
        value: function() {
          var ensureTurns = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, availableMp = this.availableMp(), totalMpPerTurn = sum(this.elements, function(element2) {
            return element2.mpCostPerTurn();
          }), potentialTurns = Math.floor(availableMp / totalMpPerTurn), completeSuccess = !0, _iterator3 = _createForOfIteratorHelper16(this.elements), _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var element = _step3.value, elementTurns = ensureTurns;
              if (element.mpCostPerTurn() > 0) {
                var elementPotentialTurns = Math.floor(potentialTurns / element.turnIncrement()) * element.turnIncrement();
                elementTurns = Math.min(ensureTurns, elementPotentialTurns);
              }
              completeSuccess = element.execute(this, elementTurns) && completeSuccess;
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
          return this.moreMp(this.options.reserveMp), completeSuccess;
        }
      }], [{
        key: "setDefaultOptions",
        value: (
          /**
           * Set default options for new Mood instances.
           *
           * @param options Default options for new Mood instances.
           */
          function(options) {
            Mood2.defaultOptions = _objectSpread9(_objectSpread9({}, Mood2.defaultOptions), options);
          }
        )
      }]), Mood2;
    }();
    _defineProperty21(Mood, "defaultOptions", {
      songSlots: [],
      mpSources: [MagicalSausages.instance, OscusSoda.instance],
      reserveMp: 0,
      useNativeRestores: !1
    });
  }
});

// node_modules/libram/dist/since.js
function _classCallCheck18(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _inherits6(subClass, superClass) {
  if (typeof superClass != "function" && superClass !== null)
    throw new TypeError("Super expression must either be null or a function");
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf6(subClass, superClass);
}
function _createSuper5(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct5();
  return function() {
    var Super = _getPrototypeOf5(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf5(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else
      result = Super.apply(this, arguments);
    return _possibleConstructorReturn5(this, result);
  };
}
function _possibleConstructorReturn5(self, call) {
  if (call && (typeof call == "object" || typeof call == "function"))
    return call;
  if (call !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized5(self);
}
function _assertThisInitialized5(self) {
  if (self === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return self;
}
function _wrapNativeSuper4(Class6) {
  var _cache = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
  return _wrapNativeSuper4 = function(Class7) {
    if (Class7 === null || !_isNativeFunction4(Class7))
      return Class7;
    if (typeof Class7 != "function")
      throw new TypeError("Super expression must either be null or a function");
    if (typeof _cache != "undefined") {
      if (_cache.has(Class7))
        return _cache.get(Class7);
      _cache.set(Class7, Wrapper);
    }
    function Wrapper() {
      return _construct4(Class7, arguments, _getPrototypeOf5(this).constructor);
    }
    return Wrapper.prototype = Object.create(Class7.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf6(Wrapper, Class7);
  }, _wrapNativeSuper4(Class6);
}
function _construct4(Parent, args2, Class6) {
  return _isNativeReflectConstruct5() ? _construct4 = Reflect.construct : _construct4 = function(Parent2, args3, Class7) {
    var a = [null];
    a.push.apply(a, args3);
    var Constructor = Function.bind.apply(Parent2, a), instance = new Constructor();
    return Class7 && _setPrototypeOf6(instance, Class7.prototype), instance;
  }, _construct4.apply(null, arguments);
}
function _isNativeReflectConstruct5() {
  if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch (e) {
    return !1;
  }
}
function _isNativeFunction4(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _setPrototypeOf6(o, p) {
  return _setPrototypeOf6 = Object.setPrototypeOf || function(o2, p2) {
    return o2.__proto__ = p2, o2;
  }, _setPrototypeOf6(o, p);
}
function _getPrototypeOf5(o) {
  return _getPrototypeOf5 = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  }, _getPrototypeOf5(o);
}
function getScriptName() {
  var _require$main, scriptName = (_require$main = require.main) === null || _require$main === void 0 ? void 0 : _require$main.id;
  return scriptName ? "'".concat(scriptName, "'") : "This script";
}
function sinceKolmafiaRevision(revision) {
  if (!Number.isInteger(revision))
    throw new TypeError("Invalid revision number ".concat(revision, " (must be an integer)"));
  var currentRevision = (0, import_kolmafia67.getRevision)();
  if (currentRevision > 0 && currentRevision < revision)
    throw new KolmafiaVersionError("".concat(getScriptName(), " requires revision r").concat(revision, " of kolmafia or higher (current: ").concat((0, import_kolmafia67.getRevision)(), "). Up-to-date builds can be found at https://ci.kolmafia.us/."));
}
function sinceKolmafiaVersion(majorVersion, minorVersion) {
  if (!((0, import_kolmafia67.getRevision)() >= 25720)) {
    if (!Number.isInteger(majorVersion))
      throw new TypeError("Invalid major version number ".concat(majorVersion, " (must be an integer)"));
    if (!Number.isInteger(minorVersion))
      throw new TypeError("Invalid minor version number ".concat(minorVersion, " (must be an integer)"));
    if (majorVersion > 21 || majorVersion === 20 && minorVersion > 9)
      throw new Error("There were no versions released after 21.09. This command will always fail");
    var versionStr = (0, import_kolmafia67.getVersion)(), versionStrMatch = /v(\d+)\.(\d+)/.exec(versionStr);
    if (!versionStrMatch)
      throw new Error('Unexpected KoLmafia version string: "'.concat(versionStr, '". You may need to update the script.'));
    var currentMajorVersion = Number(versionStrMatch[1]), currentMinorVersion = Number(versionStrMatch[2]);
    if (currentMajorVersion < majorVersion || currentMajorVersion === majorVersion && currentMinorVersion < minorVersion)
      throw new KolmafiaVersionError("".concat(getScriptName(), " requires version ").concat(majorVersion, ".").concat(minorVersion, " of kolmafia or higher (current: ").concat(currentMajorVersion, ".").concat(currentMinorVersion, "). Up-to-date builds can be found at https://ci.kolmafia.us/."));
  }
}
var import_kolmafia67, KolmafiaVersionError, init_since = __esm({
  "node_modules/libram/dist/since.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia67 = require("kolmafia");
    KolmafiaVersionError = /* @__PURE__ */ function(_Error) {
      _inherits6(KolmafiaVersionError2, _Error);
      var _super = _createSuper5(KolmafiaVersionError2);
      function KolmafiaVersionError2(message) {
        var _this;
        return _classCallCheck18(this, KolmafiaVersionError2), _this = _super.call(this, message), Object.setPrototypeOf(_assertThisInitialized5(_this), KolmafiaVersionError2.prototype), _this;
      }
      return KolmafiaVersionError2;
    }(/* @__PURE__ */ _wrapNativeSuper4(Error));
    KolmafiaVersionError.prototype.name = "KolmafiaVersionError";
  }
});

// node_modules/libram/dist/Kmail.js
function _createForOfIteratorHelper17(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray36(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _toConsumableArray18(arr) {
  return _arrayWithoutHoles18(arr) || _iterableToArray18(arr) || _unsupportedIterableToArray36(arr) || _nonIterableSpread18();
}
function _nonIterableSpread18() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray18(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles18(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray36(arr);
}
function _slicedToArray20(arr, i) {
  return _arrayWithHoles20(arr) || _iterableToArrayLimit20(arr, i) || _unsupportedIterableToArray36(arr, i) || _nonIterableRest20();
}
function _nonIterableRest20() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray36(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray36(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray36(o, minLen);
  }
}
function _arrayLikeToArray36(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit20(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles20(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck19(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties14(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass14(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties14(Constructor.prototype, protoProps), staticProps && _defineProperties14(Constructor, staticProps), Constructor;
}
function _defineProperty22(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
var import_kolmafia68, Kmail, init_Kmail = __esm({
  "node_modules/libram/dist/Kmail.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia68 = require("kolmafia");
    init_utils();
    Kmail = /* @__PURE__ */ function() {
      function Kmail2(rawKmail) {
        _classCallCheck19(this, Kmail2), _defineProperty22(this, "id", void 0), _defineProperty22(this, "date", void 0), _defineProperty22(this, "type", void 0), _defineProperty22(this, "senderId", void 0), _defineProperty22(this, "senderName", void 0), _defineProperty22(this, "rawMessage", void 0);
        var date = new Date(rawKmail.localtime);
        date.setFullYear(date.getFullYear() + 100), this.id = Number(rawKmail.id), this.date = date, this.type = rawKmail.type, this.senderId = Number(rawKmail.fromid), this.senderName = rawKmail.fromname, this.rawMessage = rawKmail.message;
      }
      return _createClass14(Kmail2, [{
        key: "delete",
        value: function() {
          return Kmail2.delete([this]) === 1;
        }
        /**
         * Get message contents without any HTML from items or meat
         *
         * @returns Cleaned message contents
         */
      }, {
        key: "message",
        get: function() {
          var match = this.rawMessage.match(/^([\s\S]*?)</);
          return match ? match[1] : this.rawMessage;
        }
        /**
         * Get items attached to the kmail
         *
         * @returns Map of items attached to the kmail and their quantities
         */
      }, {
        key: "items",
        value: function() {
          return new Map(Object.entries((0, import_kolmafia68.extractItems)(this.rawMessage)).map(function(_ref) {
            var _ref2 = _slicedToArray20(_ref, 2), itemName = _ref2[0], quantity = _ref2[1];
            return [import_kolmafia68.Item.get(itemName), quantity];
          }));
        }
        /**
         * Get meat attached to the kmail
         *
         * @returns Meat attached to the kmail
         */
      }, {
        key: "meat",
        value: function() {
          return (0, import_kolmafia68.extractMeat)(this.rawMessage);
        }
        /**
         * Reply to kmail
         *
         * @param message Message with which to reply
         * @param items Items to send
         * @param meat Meat to send
         * @see Kmail.send
         * @returns True if the kmail was successfully sent
         */
      }, {
        key: "reply",
        value: function() {
          var message = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", items = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], meat = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          return Kmail2.send(this.senderId, message, items, meat);
        }
      }], [{
        key: "parse",
        value: (
          /**
           * Parses a kmail from KoL's native format
           *
           * @param rawKmail Kmail in the format supplies by api.php
           * @returns Parsed kmail
           */
          function(rawKmail) {
            return new Kmail2(rawKmail);
          }
        )
        /**
         * Returns all of the player's kmails
         *
         * @param count Number of kmails to fetch
         * @returns Parsed kmails
         */
      }, {
        key: "inbox",
        value: function() {
          var count = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;
          return JSON.parse((0, import_kolmafia68.visitUrl)("api.php?what=kmail&for=libram&count=".concat(count))).map(Kmail2.parse);
        }
        /**
         * Bulk delete kmails
         *
         * @param kmails Kmails to delete
         * @returns Number of kmails deleted
         */
      }, {
        key: "delete",
        value: function(kmails) {
          var _results$match$, _results$match, results = (0, import_kolmafia68.visitUrl)("messages.php?the_action=delete&box=Inbox&pwd&".concat(kmails.map(function(k) {
            return "sel".concat(k.id, "=on");
          }).join("&")));
          return Number((_results$match$ = (_results$match = results.match(/<td>(\d) messages? deleted.<\/td>/)) === null || _results$match === void 0 ? void 0 : _results$match[1]) !== null && _results$match$ !== void 0 ? _results$match$ : 0);
        }
      }, {
        key: "_genericSend",
        value: function(to, message, items, meat, chunkSize, constructUrl, successString) {
          var m = meat, sendableItems = _toConsumableArray18(arrayToCountedMap(items).entries()).filter(function(_ref3) {
            var _ref4 = _slicedToArray20(_ref3, 1), item10 = _ref4[0];
            return (0, import_kolmafia68.isGiftable)(item10);
          }), result = !0, chunks = chunk(sendableItems, chunkSize), _iterator = _createForOfIteratorHelper17(chunks.length > 0 ? chunks : [null]), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var c = _step.value, itemsQuery = c === null ? [] : c.map(function(_ref5, index) {
                var _ref6 = _slicedToArray20(_ref5, 2), item10 = _ref6[0], quantity = _ref6[1];
                return "whichitem".concat(index + 1, "=").concat(item10.id, "&howmany").concat(index + 1, "=").concat(quantity);
              }), r = (0, import_kolmafia68.visitUrl)(constructUrl(m, itemsQuery.join("&"), itemsQuery.length));
              if (r.includes("That player cannot receive Meat or items"))
                return Kmail2.gift(to, message, items, meat);
              m = 0, result && (result = r.includes(successString));
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return result;
        }
        /**
         * Sends a kmail to a player
         *
         * Sends multiple kmails if more than 11 unique item types are attached.
         * Ignores any ungiftable items.
         * Sends a gift package to players in run
         *
         * @param to The player name or id to receive the kmail
         * @param message The text contents of the message
         * @param items The items to be attached
         * @param meat The quantity of meat to be attached
         * @returns True if the kmail was successfully sent
         */
      }, {
        key: "send",
        value: function(to) {
          var message = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", items = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], meat = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
          return Kmail2._genericSend(to, message, items, meat, 11, function(meat2, itemsQuery) {
            return "sendmessage.php?action=send&pwd&towho=".concat(to, "&message=").concat(message).concat(itemsQuery ? "&".concat(itemsQuery) : "", "&sendmeat=").concat(meat2);
          }, ">Message sent.</");
        }
        /**
         * Sends a gift to a player
         *
         * Sends multiple kmails if more than 3 unique item types are attached.
         * Ignores any ungiftable items.
         *
         * @param to The player name or id to receive the gift
         * @param message Message to send
         * @param items The items to be attached
         * @param meat The quantity of meat to be attached
         * @param insideNote The note on the inside of the gift
         * @returns True if the gift was successfully sent
         */
      }, {
        key: "gift",
        value: function(to) {
          var message = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", items = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], meat = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, insideNote = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "", baseUrl = "town_sendgift.php?action=Yep.&pwd&fromwhere=0&note=".concat(message, "&insidenote=").concat(insideNote, "&towho=").concat(to);
          return Kmail2._genericSend(to, message, items, meat, 3, function(m, itemsQuery, chunkSize) {
            return "".concat(baseUrl, "&whichpackage=").concat(chunkSize).concat(itemsQuery ? "&".concat(itemsQuery) : "", "&sendmeat=").concat(m);
          }, ">Package sent.</");
        }
      }]), Kmail2;
    }();
  }
});

// node_modules/libram/dist/Path.js
function _taggedTemplateLiteral60(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck20(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperty23(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
var _templateObject499, _templateObject2128, _templateObject3115, _templateObject4100, _templateObject559, _templateObject647, _templateObject741, _templateObject836, _templateObject929, _templateObject1026, _templateObject1122, Path6, Paths, init_Path = __esm({
  "node_modules/libram/dist/Path.js": function() {
    init_kolmafia_polyfill();
    init_template_string();
    Path6 = /**
     *
     * @param name Name of path
     * @param id Path ID
     * @param hasAllPerms Does the player have immediate access to all permed skills>
     * @param canUseSkillbooks Does the player have ability to learn skills from skillbooks>
     * @param hasCampground Does the player have access to the campground?
     * @param hasTerrarium Does the player have access to terrarium.php
     * @param stomachSize Maximum fullness achievable at turn 0
     * @param liverSize The lowest inebriety that makes you unable to drink more
     * @param spleenSize Maximum spleen achievable at turn 0
     * @param classes Classes available in this path
     */
    function Path7(name, id) {
      var hasAllPerms = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0, canUseSkillbooks = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !0, hasCampground = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !0, hasTerrarium = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : !0, stomachSize = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 15, liverSize = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : 15, spleenSize = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : 15, classes = arguments.length > 9 && arguments[9] !== void 0 ? arguments[9] : $classes(_templateObject499 || (_templateObject499 = _taggedTemplateLiteral60(["Seal Clubber, Turtle Tamer, Sauceror, Pastamancer, Disco Bandit, Accordion Thief"])));
      _classCallCheck20(this, Path7), _defineProperty23(this, "name", void 0), _defineProperty23(this, "id", void 0), _defineProperty23(this, "hasAllPerms", void 0), _defineProperty23(this, "canUseSkillbooks", void 0), _defineProperty23(this, "hasCampground", void 0), _defineProperty23(this, "hasTerrarium", void 0), _defineProperty23(this, "stomachSize", void 0), _defineProperty23(this, "liverSize", void 0), _defineProperty23(this, "spleenSize", void 0), _defineProperty23(this, "classes", void 0), this.name = name, this.id = id, this.hasAllPerms = hasAllPerms, this.canUseSkillbooks = canUseSkillbooks, this.hasCampground = hasCampground, this.hasTerrarium = hasTerrarium, this.stomachSize = stomachSize, this.liverSize = liverSize, this.spleenSize = spleenSize, this.classes = classes;
    }, Paths = {
      Unrestricted: new Path6("Unrestricted", 0),
      Boozetafarian: new Path6("Boozetafarian", 1, !0, !0, !0, !0, 0),
      Teetotaler: new Path6("Teetotaler", 2, !0, !0, !0, !0, 15, 0),
      Oxygenarian: new Path6("Oxygenarian", 3, !0, !0, !0, !0, 0, 0),
      BeesHateYou: new Path6("Bees Hate You", 4),
      WayOfTheSurprisingFist: new Path6("Way of the Surprising Fist", 6),
      Trendy: new Path6("Trendy", 7),
      AvatarOfBoris: new Path6("Avatar of Boris", 8, !1, !1, !0, !1, 20, 5, 15, $classes(_templateObject2128 || (_templateObject2128 = _taggedTemplateLiteral60(["Avatar of Boris"])))),
      BugbearInvasion: new Path6("Bugbear Invasion", 9),
      ZombieSlayer: new Path6("Zombie Slayer", 10, !1, !1, !0, !0, 15, 5, 15, $classes(_templateObject3115 || (_templateObject3115 = _taggedTemplateLiteral60(["Zombie Master"])))),
      ClassAct: new Path6("Class Act", 11, !1, !1),
      AvatarofJarlsberg: new Path6("Avatar of Jarlsberg", 12, !1, !1, !0, !1, 10, 10, 15, $classes(_templateObject4100 || (_templateObject4100 = _taggedTemplateLiteral60(["Avatar of Jarlsberg"])))),
      Big: new Path6("BIG!", 14),
      KolHs: new Path6("KOLHS", 15),
      ClassAct2: new Path6("Class Act II: A Class For Pigs", 16, !1),
      AvatarofSneakyPete: new Path6("Avatar of Sneaky Pete", 17, !1, !1, !0, !1, 5, 20, 15, $classes(_templateObject559 || (_templateObject559 = _taggedTemplateLiteral60(["Avatar of Sneaky Pete"])))),
      SlowAndSteady: new Path6("Slow and Steady", 18),
      HeavyRains: new Path6("Heavy Rains", 19),
      Picky: new Path6("Picky", 21, !1, !1),
      Standard: new Path6("Standard", 22),
      ActuallyEdTheUndying: new Path6("Actually Ed the Undying", 23, !1, !1, !1, !1, 0, 0, 5, $classes(_templateObject647 || (_templateObject647 = _taggedTemplateLiteral60(["Ed the Undying"])))),
      OneCrazyRandomSummer: new Path6("One Crazy Random Summer", 24),
      CommunityService: new Path6("Community Service", 25),
      AvatarOfWestOfLoathing: new Path6("Avatar of West of Loathing", 26, !1, !1, !0, !0, 10, 10, 10, $classes(_templateObject741 || (_templateObject741 = _taggedTemplateLiteral60(["Cow Puncher, Snake Oiler, Beanslinger"])))),
      TheSource: new Path6("The Source", 27),
      NuclearAutumn: new Path6("Nuclear Autumn", 28, !1, !1, !1, !0, 3, 3, 3),
      GelatinousNoob: new Path6("Gelatinous Noob", 29, !1, !1, !0, !0, 0, 0, 0, $classes(_templateObject836 || (_templateObject836 = _taggedTemplateLiteral60(["Gelatinous Noob"])))),
      LicenseToAdventure: new Path6("License to Adventure", 30, !0, !0, !0, !1, 0, 2, 15),
      LiveAscendRepeat: new Path6("Live. Ascend. Repeat.", 31),
      PocketFamiliars: new Path6("Pocket Familiars", 32, !1, !1, !0, !1),
      GLover: new Path6("G-Lover", 33),
      DisguisesDelimit: new Path6("Disguises Delimit", 34),
      DarkGyffte: new Path6("Dark Gyffte", 35, !1, !1, !0, !1, 5, 5, 15, $classes(_templateObject929 || (_templateObject929 = _taggedTemplateLiteral60(["Vampyre"])))),
      TwoCrazyRandomSummer: new Path6("Two Crazy Random Summer", 36),
      KingdomOfExploathing: new Path6("Kingdom of Exploathing", 37),
      PathOfThePlumber: new Path6("Path of the Plumber", 38, !1, !1, !0, !0, 20, 0, 5, $classes(_templateObject1026 || (_templateObject1026 = _taggedTemplateLiteral60(["Plumber"])))),
      LowKeySummer: new Path6("Low Key Summer", 39),
      GreyGoo: new Path6("Grey Goo", 40),
      YouRobot: new Path6("You, Robot", 41, !1, !1, !1, !0, 0, 0, 0),
      QuantumTerrarium: new Path6("Quantum Terrarium", 42, !0, !0, !0, !1),
      Wildfire: new Path6("Wildfire", 43),
      GreyYou: new Path6(
        "Grey You",
        44,
        !1,
        !1,
        !0,
        !0,
        0,
        0,
        0,
        // eslint-disable-next-line libram/verify-constants
        $classes(_templateObject1122 || (_templateObject1122 = _taggedTemplateLiteral60(["Grey Goo"])))
      ),
      Journeyman: new Path6("Journeyman", 45, !1, !1)
    };
  }
});

// node_modules/libram/dist/console.js
var console_exports = {};
__export(console_exports, {
  error: function() {
    return error;
  },
  info: function() {
    return info;
  },
  log: function() {
    return log;
  },
  warn: function() {
    return warn;
  }
});
var import_kolmafia69, logColor, log, info, warn, error, init_console = __esm({
  "node_modules/libram/dist/console.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia69 = require("kolmafia"), logColor = function(color) {
      return function() {
        for (var _len = arguments.length, args2 = new Array(_len), _key = 0; _key < _len; _key++)
          args2[_key] = arguments[_key];
        var output = args2.map(function(x) {
          return x.toString();
        }).join(" ");
        color ? (0, import_kolmafia69.print)(output, color) : (0, import_kolmafia69.print)(output);
      };
    }, log = logColor(), info = logColor("blue"), warn = logColor("red"), error = logColor("red");
  }
});

// node_modules/libram/dist/session.js
function _classCallCheck21(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties15(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass15(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties15(Constructor.prototype, protoProps), staticProps && _defineProperties15(Constructor, staticProps), Constructor;
}
function _defineProperty24(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _createForOfIteratorHelper18(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray37(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _slicedToArray21(arr, i) {
  return _arrayWithHoles21(arr) || _iterableToArrayLimit21(arr, i) || _unsupportedIterableToArray37(arr, i) || _nonIterableRest21();
}
function _nonIterableRest21() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit21(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles21(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral61(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray19(arr) {
  return _arrayWithoutHoles19(arr) || _iterableToArray19(arr) || _unsupportedIterableToArray37(arr) || _nonIterableSpread19();
}
function _nonIterableSpread19() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray37(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray37(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray37(o, minLen);
  }
}
function _iterableToArray19(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles19(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray37(arr);
}
function _arrayLikeToArray37(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function mySessionItemsWrapper() {
  for (var sessionOnly = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, manyToOne = function(primary, mapped) {
    return mapped.map(function(target) {
      return [target, primary];
    });
  }, foldable = function(item11) {
    return manyToOne(item11, getFoldGroup(item11));
  }, itemMappings = new Map([].concat(_toConsumableArray19(foldable($item(_templateObject500 || (_templateObject500 = _taggedTemplateLiteral61(["liar's pants"]))))), _toConsumableArray19(foldable($item(_templateObject2129 || (_templateObject2129 = _taggedTemplateLiteral61(["ice pick"]))))), _toConsumableArray19(manyToOne($item(_templateObject3116 || (_templateObject3116 = _taggedTemplateLiteral61(["Spooky Putty sheet"]))), [$item(_templateObject4101 || (_templateObject4101 = _taggedTemplateLiteral61(["Spooky Putty monster"])))].concat(_toConsumableArray19(getFoldGroup($item(_templateObject560 || (_templateObject560 = _taggedTemplateLiteral61(["Spooky Putty sheet"])))))))), _toConsumableArray19(foldable($item(_templateObject648 || (_templateObject648 = _taggedTemplateLiteral61(["stinky cheese sword"]))))), _toConsumableArray19(foldable($item(_templateObject744 || (_templateObject744 = _taggedTemplateLiteral61(["naughty paper shuriken"]))))), _toConsumableArray19(foldable($item(_templateObject837 || (_templateObject837 = _taggedTemplateLiteral61(["Loathing Legion knife"]))))), _toConsumableArray19(foldable($item(_templateObject930 || (_templateObject930 = _taggedTemplateLiteral61(["deceased crimbo tree"]))))), _toConsumableArray19(foldable($item(_templateObject1027 || (_templateObject1027 = _taggedTemplateLiteral61(["makeshift turban"]))))), _toConsumableArray19(foldable($item(_templateObject1123 || (_templateObject1123 = _taggedTemplateLiteral61(["turtle wax shield"]))))), _toConsumableArray19(foldable($item(_templateObject1222 || (_templateObject1222 = _taggedTemplateLiteral61(["metallic foil bow"]))))), _toConsumableArray19(foldable($item(_templateObject1320 || (_templateObject1320 = _taggedTemplateLiteral61(["ironic moustache"]))))), _toConsumableArray19(foldable($item(_templateObject1417 || (_templateObject1417 = _taggedTemplateLiteral61(["bugged balaclava"]))))), _toConsumableArray19(foldable($item(_templateObject1515 || (_templateObject1515 = _taggedTemplateLiteral61(["toggle switch (Bartend)"]))))), _toConsumableArray19(foldable($item(_templateObject1615 || (_templateObject1615 = _taggedTemplateLiteral61(["mushroom cap"]))))), _toConsumableArray19(manyToOne($item(_templateObject1715 || (_templateObject1715 = _taggedTemplateLiteral61(["can of Rain-Doh"]))), $items(_templateObject1815 || (_templateObject1815 = _taggedTemplateLiteral61(["empty Rain-Doh can"]))))), _toConsumableArray19(manyToOne($item(_templateObject1915 || (_templateObject1915 = _taggedTemplateLiteral61(["meteorite fragment"]))), $items(_templateObject2015 || (_templateObject2015 = _taggedTemplateLiteral61(["meteorite earring, meteorite necklace, meteorite ring"]))))), _toConsumableArray19(manyToOne($item(_templateObject2130 || (_templateObject2130 = _taggedTemplateLiteral61(["Sneaky Pete's leather jacket"]))), $items(_templateObject2217 || (_templateObject2217 = _taggedTemplateLiteral61(["Sneaky Pete's leather jacket (collar popped)"]))))), _toConsumableArray19(manyToOne($item(_templateObject2316 || (_templateObject2316 = _taggedTemplateLiteral61(["Boris's Helm"]))), $items(_templateObject2414 || (_templateObject2414 = _taggedTemplateLiteral61(["Boris's Helm (askew)"]))))), _toConsumableArray19(manyToOne($item(_templateObject2514 || (_templateObject2514 = _taggedTemplateLiteral61(["Jarlsberg's pan"]))), $items(_templateObject2614 || (_templateObject2614 = _taggedTemplateLiteral61(["Jarlsberg's pan (Cosmic portal mode)"]))))), _toConsumableArray19(manyToOne($item(_templateObject2714 || (_templateObject2714 = _taggedTemplateLiteral61(["tiny plastic sword"]))), $items(_templateObject2812 || (_templateObject2812 = _taggedTemplateLiteral61(["grogtini, bodyslam, dirty martini, vesper, cherry bomb, sangria del diablo"]))))), _toConsumableArray19(manyToOne($item(_templateObject2911 || (_templateObject2911 = _taggedTemplateLiteral61(["earthenware muffin tin"]))), $items(_templateObject3011 || (_templateObject3011 = _taggedTemplateLiteral61(["blueberry muffin, bran muffin, chocolate chip muffin"]))))), _toConsumableArray19(manyToOne($item(_templateObject3117 || (_templateObject3117 = _taggedTemplateLiteral61(["ChibiBuddy\u2122 (on)"]))), $items(_templateObject3213 || (_templateObject3213 = _taggedTemplateLiteral61(["ChibiBuddy\u2122 (off)"]))))))), inventory = /* @__PURE__ */ new Map(), invLocations = sessionOnly ? [import_kolmafia70.mySessionItems] : [import_kolmafia70.mySessionItems, import_kolmafia70.getCloset, import_kolmafia70.getDisplay, import_kolmafia70.getStorage], _i = 0, _invLocations = invLocations; _i < _invLocations.length; _i++)
    for (var inventoryFunc = _invLocations[_i], _i2 = 0, _Object$entries = Object.entries(inventoryFunc()); _i2 < _Object$entries.length; _i2++) {
      var _itemMappings$get, _inventory$get, _Object$entries$_i = _slicedToArray21(_Object$entries[_i2], 2), itemStr = _Object$entries$_i[0], quantity = _Object$entries$_i[1], item10 = (0, import_kolmafia70.toItem)(itemStr), mappedItem = (_itemMappings$get = itemMappings.get(item10)) !== null && _itemMappings$get !== void 0 ? _itemMappings$get : item10;
      inventory.set(mappedItem, quantity + ((_inventory$get = inventory.get(mappedItem)) !== null && _inventory$get !== void 0 ? _inventory$get : 0));
    }
  for (var _i3 = 0, _Object$entries2 = Object.entries((0, import_kolmafia70.getCampground)()); _i3 < _Object$entries2.length; _i3++) {
    var _itemMappings$get2, _inventory$get2, _Object$entries2$_i = _slicedToArray21(_Object$entries2[_i3], 2), _itemStr = _Object$entries2$_i[0], _quantity = _Object$entries2$_i[1], _item = (0, import_kolmafia70.toItem)(_itemStr);
    if (_item !== $item(_templateObject3313 || (_templateObject3313 = _taggedTemplateLiteral61(["big rock"])))) {
      var _mappedItem = (_itemMappings$get2 = itemMappings.get(_item)) !== null && _itemMappings$get2 !== void 0 ? _itemMappings$get2 : _item;
      inventory.set(_mappedItem, _quantity + ((_inventory$get2 = inventory.get(_mappedItem)) !== null && _inventory$get2 !== void 0 ? _inventory$get2 : 0));
    }
  }
  return inventory;
}
function inventoryOperation(a, b, op) {
  var difference = /* @__PURE__ */ new Map(), _iterator = _createForOfIteratorHelper18(new Set([].concat(_toConsumableArray19(a.keys()), _toConsumableArray19(b.keys())))), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _a$get, _b$get, item10 = _step.value;
      difference.set(item10, op((_a$get = a.get(item10)) !== null && _a$get !== void 0 ? _a$get : 0, (_b$get = b.get(item10)) !== null && _b$get !== void 0 ? _b$get : 0));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var diffEntries = _toConsumableArray19(difference.entries());
  return new Map(diffEntries.filter(function(value) {
    return value[1] !== 0;
  }));
}
var import_kolmafia70, _templateObject500, _templateObject2129, _templateObject3116, _templateObject4101, _templateObject560, _templateObject648, _templateObject744, _templateObject837, _templateObject930, _templateObject1027, _templateObject1123, _templateObject1222, _templateObject1320, _templateObject1417, _templateObject1515, _templateObject1615, _templateObject1715, _templateObject1815, _templateObject1915, _templateObject2015, _templateObject2130, _templateObject2217, _templateObject2316, _templateObject2414, _templateObject2514, _templateObject2614, _templateObject2714, _templateObject2812, _templateObject2911, _templateObject3011, _templateObject3117, _templateObject3213, _templateObject3313, Session, init_session = __esm({
  "node_modules/libram/dist/session.js": function() {
    init_kolmafia_polyfill();
    import_kolmafia70 = require("kolmafia");
    init_lib();
    init_template_string();
    init_utils();
    Session = /* @__PURE__ */ function() {
      function Session2(meat, items, totalTurns) {
        _classCallCheck21(this, Session2), _defineProperty24(this, "meat", void 0), _defineProperty24(this, "items", void 0), _defineProperty24(this, "totalTurns", void 0), this.meat = meat, this.items = items, this.totalTurns = totalTurns;
      }
      return _createClass15(Session2, [{
        key: "register",
        value: function(target, quantity) {
          if (target === "meat")
            this.meat += quantity;
          else {
            var _this$items$get;
            this.items.set(target, ((_this$items$get = this.items.get(target)) !== null && _this$items$get !== void 0 ? _this$items$get : 0) + quantity);
          }
        }
        /**
         * Value this session
         *
         * @param itemValue a function that, when given an item, will give a meat value of the item
         * @returns ItemResult with the full value of this session given the input function
         */
      }, {
        key: "value",
        value: function(itemValue) {
          var turns = this.totalTurns, meat = Math.floor(this.meat), itemDetails = _toConsumableArray19(this.items.entries()).map(function(_ref) {
            var _ref2 = _slicedToArray21(_ref, 2), item10 = _ref2[0], quantity = _ref2[1];
            return {
              item: item10,
              quantity: quantity,
              value: itemValue(item10) * quantity
            };
          }), items = Math.floor(sum(itemDetails, "value"));
          return {
            meat: meat,
            items: items,
            total: meat + items,
            itemDetails: itemDetails,
            turns: turns
          };
        }
        /**
         * Subtract the contents of another session from this one, removing any items that have a resulting quantity of 0
         *  (this will ignore elements in b but not in a)
         *
         * @param other the session from which to pull values to remove from this session
         * @returns a new session representing the difference between this session and the other session
         */
      }, {
        key: "diff",
        value: function(other) {
          return new Session2(this.meat - other.meat, inventoryOperation(this.items, other.items, function(a, b) {
            return a - b;
          }), this.totalTurns - other.totalTurns);
        }
        /**
         * Subtract the contents of snasphot b from session a, removing any items that have a resulting quantity of 0
         *  (this will ignore elements in b but not in a)
         *
         * @param a the session from which to subtract elements
         * @param b the session from which to add elements
         * @returns a new session representing the difference between a and b
         */
      }, {
        key: "add",
        value: (
          /**
           * Generate a new session combining multiple sessions together
           *
           * @param other the session from which to add elements to this set
           * @returns a new session representing the addition of other to this
           */
          function(other) {
            return new Session2(this.meat + other.meat, inventoryOperation(this.items, other.items, function(a, b) {
              return a + b;
            }), this.totalTurns + other.totalTurns);
          }
        )
        /**
         * Combine the contents of sessions
         *
         * @param sessions the set of sessions to combine together
         * @returns a new session representing the difference between a and b
         */
      }, {
        key: "toFile",
        value: (
          /**
           * Export this session to a file in the data/ directory. Conventionally this file should end in ".json"
           *
           * @param filename The file into which to export
           */
          function(filename) {
            var val = {
              meat: this.meat,
              items: Object.fromEntries(this.items),
              totalTurns: this.totalTurns
            };
            (0, import_kolmafia70.bufferToFile)(JSON.stringify(val), Session2.getFilepath(filename));
          }
        )
        /**
         * Import a session from a file in the data/ directory. Conventionally the file should end in ".json"
         *
         * @param filename The file from which to import
         * @returns the session represented by the file
         */
      }, {
        key: "computeMPA",
        value: (
          /**
           * @param other the session to diff against this session when computing MPA
           * @param options options for computing MPA
           * @param options.value a function to compute the meat value of a given item
           * @param options.isOutlier a function to compute if an item is considered an outlier. By default, no items are outliers
           * @param options.excludeValue meat values to exclude when calculating specific portions of the MPA
           * @param options.excludeValue.meat how much meat to exclude when calculating the meat portion of MPA
           * @param options.excludeValue.item how much meat to exclude when calculating hte item portion of MPA
           * @returns an analysis of the effective MPA for the given session
           */
          function(other, options) {
            return Session2.computeMPA(this, other, options);
          }
        )
      }], [{
        key: "diff",
        value: function(a, b) {
          return a.diff(b);
        }
      }, {
        key: "add",
        value: function() {
          for (var _len = arguments.length, sessions = new Array(_len), _key = 0; _key < _len; _key++)
            sessions[_key] = arguments[_key];
          return sessions.reduce(function(previousSession, currentSession) {
            return previousSession.add(currentSession);
          });
        }
      }, {
        key: "getFilepath",
        value: function(filename) {
          return filename.endsWith(".json") ? filename : "snapshots/".concat((0, import_kolmafia70.myName)(), "/").concat((0, import_kolmafia70.todayToString)(), "_").concat(filename, ".json");
        }
      }, {
        key: "fromFile",
        value: function(filename) {
          var fileValue = (0, import_kolmafia70.fileToBuffer)(Session2.getFilepath(filename));
          if (fileValue.length > 0) {
            var _val$totalTurns, val = JSON.parse(fileValue), parsedItems = Object.entries(val.items).map(function(_ref3) {
              var _ref4 = _slicedToArray21(_ref3, 2), itemStr = _ref4[0], quantity = _ref4[1];
              return [(0, import_kolmafia70.toItem)(itemStr), quantity];
            });
            return new Session2(val.meat, new Map(parsedItems), (_val$totalTurns = val.totalTurns) !== null && _val$totalTurns !== void 0 ? _val$totalTurns : 0);
          } else
            return new Session2(0, /* @__PURE__ */ new Map(), 0);
        }
        /**
         * Return the meat and items for the current session
         *
         * @param sessionOnly should closet, DC, and storage be ignored for the session calculation
         * @returns current session
         */
      }, {
        key: "current",
        value: function() {
          var sessionOnly = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, meat = sessionOnly ? [import_kolmafia70.mySessionMeat] : [import_kolmafia70.mySessionMeat, import_kolmafia70.myClosetMeat, import_kolmafia70.myStorageMeat];
          return new Session2(sum(meat, function(f) {
            return f();
          }), mySessionItemsWrapper(sessionOnly), (0, import_kolmafia70.totalTurnsPlayed)());
        }
        /**
         * @param baseline the base session to use when computing MPA
         * @param full the full session to use when computing MPA
         * @param options options for computing MPA
         * @param options.value a function to compute the meat value of a given item
         * @param options.isOutlier a function to compute if an item is considered an outlier. By default, no items are outliers
         * @param options.excludeValue meat values to exclude when calculating specific portions of the MPA
         * @param options.excludeValue.meat how much meat to exclude when calculating the meat portion of MPA
         * @param options.excludeValue.item how much meat to exclude when calculating hte item portion of MPA
         * @returns an analysis of the effective MPA for the given session
         */
      }, {
        key: "computeMPA",
        value: function(baseline, full, options) {
          var _options$excludeValue, _excludeValue$meat, _excludeValue$item, value = options.value, excludeValue = (_options$excludeValue = options.excludeValue) !== null && _options$excludeValue !== void 0 ? _options$excludeValue : {
            meat: 0,
            item: 0
          }, isOutlier = options.isOutlier, result = full.diff(baseline).value(value), meatValue = result.meat - ((_excludeValue$meat = excludeValue.meat) !== null && _excludeValue$meat !== void 0 ? _excludeValue$meat : 0), outlierItems = isOutlier ? result.itemDetails.filter(isOutlier) : [], outliersValue = sum(outlierItems, function(detail) {
            return detail.value;
          }), itemValue = result.items - outliersValue - ((_excludeValue$item = excludeValue.item) !== null && _excludeValue$item !== void 0 ? _excludeValue$item : 0), turns = result.turns;
          return {
            mpa: {
              effective: (meatValue + itemValue) / turns,
              total: (meatValue + itemValue + outliersValue) / turns,
              meat: meatValue / turns,
              items: itemValue / turns
            },
            values: {
              effective: meatValue + itemValue,
              total: meatValue + itemValue + outliersValue,
              meat: meatValue,
              items: itemValue
            },
            outlierItems: outlierItems,
            turns: turns
          };
        }
      }]), Session2;
    }();
  }
});

// node_modules/libram/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  $bounties: function() {
    return $bounties;
  },
  $bounty: function() {
    return $bounty;
  },
  $class: function() {
    return $class;
  },
  $classes: function() {
    return $classes;
  },
  $coinmaster: function() {
    return $coinmaster;
  },
  $coinmasters: function() {
    return $coinmasters;
  },
  $effect: function() {
    return $effect;
  },
  $effects: function() {
    return $effects;
  },
  $element: function() {
    return $element;
  },
  $elements: function() {
    return $elements;
  },
  $familiar: function() {
    return $familiar;
  },
  $familiars: function() {
    return $familiars;
  },
  $item: function() {
    return $item;
  },
  $items: function() {
    return $items;
  },
  $location: function() {
    return $location;
  },
  $locations: function() {
    return $locations;
  },
  $modifier: function() {
    return $modifier;
  },
  $modifiers: function() {
    return $modifiers;
  },
  $monster: function() {
    return $monster;
  },
  $monsters: function() {
    return $monsters;
  },
  $path: function() {
    return $path;
  },
  $paths: function() {
    return $paths;
  },
  $phyla: function() {
    return $phyla;
  },
  $phylum: function() {
    return $phylum;
  },
  $servant: function() {
    return $servant;
  },
  $servants: function() {
    return $servants;
  },
  $skill: function() {
    return $skill;
  },
  $skills: function() {
    return $skills;
  },
  $slot: function() {
    return $slot;
  },
  $slots: function() {
    return $slots;
  },
  $stat: function() {
    return $stat;
  },
  $stats: function() {
    return $stats;
  },
  $thrall: function() {
    return $thrall;
  },
  $thralls: function() {
    return $thralls;
  },
  ActionSource: function() {
    return ActionSource;
  },
  AscendError: function() {
    return AscendError;
  },
  AscensionPrepError: function() {
    return AscensionPrepError;
  },
  AsdonMartin: function() {
    return AsdonMartin_exports;
  },
  AugustScepter: function() {
    return AugustScepter_exports;
  },
  AutumnAton: function() {
    return AutumnAton_exports;
  },
  Bandersnatch: function() {
    return Bandersnatch_exports;
  },
  BarrelShrine: function() {
    return BarrelShrine_exports;
  },
  BeachComb: function() {
    return BeachComb_exports;
  },
  CampAway: function() {
    return CampAway_exports;
  },
  Cartography: function() {
    return Cartography_exports;
  },
  ChateauMantegna: function() {
    return ChateauMantegna_exports;
  },
  CinchoDeMayo: function() {
    return CinchoDeMayo_exports;
  },
  Clan: function() {
    return Clan;
  },
  ClosedCircuitPayphone: function() {
    return ClosedCircuitPayphone_exports;
  },
  CombatLoversLocket: function() {
    return CombatLoversLocket_exports;
  },
  CommunityService: function() {
    return CommunityService;
  },
  Counter: function() {
    return counter_exports;
  },
  CrimboShrub: function() {
    return CrimboShrub_exports;
  },
  CrownOfThrones: function() {
    return CrownOfThrones_exports;
  },
  CrystalBall: function() {
    return CrystalBall_exports;
  },
  CursedMonkeyPaw: function() {
    return CursedMonkeyPaw_exports;
  },
  DNALab: function() {
    return DNALab_exports;
  },
  DaylightShavings: function() {
    return DaylightShavings_exports;
  },
  DeckOfEveryCard: function() {
    return DeckOfEveryCard_exports;
  },
  Diet: function() {
    return Diet;
  },
  Dinseylandfill: function() {
    return Dinseylandfill_exports;
  },
  Dreadsylvania: function() {
    return Dreadsylvania;
  },
  Dungeon: function() {
    return Dungeon;
  },
  EnsureError: function() {
    return EnsureError;
  },
  Environment: function() {
    return Environment;
  },
  FloristFriar: function() {
    return Florist_exports;
  },
  GreyGoose: function() {
    return GreyGoose_exports;
  },
  Guzzlr: function() {
    return Guzzlr_exports;
  },
  HeavyRains: function() {
    return HeavyRains_exports;
  },
  Hobopolis: function() {
    return Hobopolis;
  },
  Horsery: function() {
    return Horsery_exports;
  },
  InvalidMacroError: function() {
    return InvalidMacroError;
  },
  JuneCleaver: function() {
    return JuneCleaver_exports;
  },
  JungMan: function() {
    return JungMan_exports;
  },
  Kmail: function() {
    return Kmail;
  },
  KolGender: function() {
    return KolGender;
  },
  KolmafiaVersionError: function() {
    return KolmafiaVersionError;
  },
  Latte: function() {
    return LatteLoversMembersMug_exports;
  },
  Lifestyle: function() {
    return Lifestyle;
  },
  LookingGlass: function() {
    return LookingGlass_exports;
  },
  Macro: function() {
    return Macro;
  },
  MagicalSausages: function() {
    return MagicalSausages;
  },
  MayoClinic: function() {
    return MayoClinic_exports;
  },
  MenuItem: function() {
    return MenuItem;
  },
  Mood: function() {
    return Mood;
  },
  MpSource: function() {
    return MpSource;
  },
  MummingTrunk: function() {
    return MummingTrunk_exports;
  },
  NuclearAutumn: function() {
    return NuclearAutumn_exports;
  },
  ObtuseAngel: function() {
    return ObtuseAngel_exports;
  },
  OscusSoda: function() {
    return OscusSoda;
  },
  Pantogram: function() {
    return Pantogram_exports;
  },
  Path: function() {
    return Path6;
  },
  Paths: function() {
    return Paths;
  },
  PropertiesManager: function() {
    return PropertiesManager;
  },
  RainDoh: function() {
    return RainDoh_exports;
  },
  RainDohBlackBox: function() {
    return RainDohBlackBox;
  },
  ReagnimatedGnome: function() {
    return ReagnimatedGnome_exports;
  },
  Requirement: function() {
    return Requirement;
  },
  RetroCape: function() {
    return RetroCape_exports;
  },
  Robortender: function() {
    return Robortender_exports;
  },
  Session: function() {
    return Session;
  },
  SlimeTube: function() {
    return SlimeTube;
  },
  Snapper: function() {
    return Snapper_exports;
  },
  SongBoom: function() {
    return SongBoom_exports;
  },
  SourceTerminal: function() {
    return SourceTerminal_exports;
  },
  Spacegate: function() {
    return Spacegate_exports;
  },
  SpookyPutty: function() {
    return SpookyPutty_exports;
  },
  SpookyPuttySheet: function() {
    return SpookyPuttySheet;
  },
  Stickers: function() {
    return Stickers_exports;
  },
  StompingBoots: function() {
    return StompingBoots_exports;
  },
  StrictMacro: function() {
    return StrictMacro;
  },
  TrainSet: function() {
    return TrainSet_exports;
  },
  TunnelOfLove: function() {
    return TunnelOfLove_exports;
  },
  Wanderer: function() {
    return Wanderer;
  },
  WinterGarden: function() {
    return WinterGarden_exports;
  },
  Witchess: function() {
    return Witchess_exports;
  },
  actionSourcesAvailable: function() {
    return actionSourcesAvailable;
  },
  adventureMacro: function() {
    return adventureMacro;
  },
  adventureMacroAuto: function() {
    return adventureMacroAuto;
  },
  applyModes: function() {
    return applyModes;
  },
  arrayContains: function() {
    return arrayContains;
  },
  arrayEquals: function() {
    return arrayEquals;
  },
  arrayToCountedMap: function() {
    return arrayToCountedMap;
  },
  ascend: function() {
    return ascend;
  },
  bestLibramToCast: function() {
    return bestLibramToCast;
  },
  booleanModifiers: function() {
    return booleanModifiers;
  },
  byClass: function() {
    return byClass;
  },
  byStat: function() {
    return byStat;
  },
  canRememberSong: function() {
    return canRememberSong;
  },
  canUse: function() {
    return canUse;
  },
  canVisitUrl: function() {
    return canVisitUrl;
  },
  chunk: function() {
    return chunk;
  },
  clamp: function() {
    return clamp;
  },
  classModifiers: function() {
    return classModifiers;
  },
  clearMaximizerCache: function() {
    return clearMaximizerCache;
  },
  console: function() {
    return console_exports;
  },
  couldUseRainDohBlackBox: function() {
    return couldUseRainDohBlackBox;
  },
  couldUseSpookyPuttySheet: function() {
    return couldUseSpookyPuttySheet;
  },
  countedMapToArray: function() {
    return countedMapToArray;
  },
  countedMapToString: function() {
    return countedMapToString;
  },
  damageTakenByElement: function() {
    return damageTakenByElement;
  },
  directlyUse: function() {
    return directlyUse;
  },
  effectModifiers: function() {
    return effectModifiers;
  },
  ensureEffect: function() {
    return ensureEffect;
  },
  ensureFreeKill: function() {
    return ensureFreeKill;
  },
  ensureFreeRun: function() {
    return ensureFreeRun;
  },
  examine: function() {
    return examine;
  },
  expectedLibramSummon: function() {
    return expectedLibramSummon;
  },
  findActionSource: function() {
    return findActionSource;
  },
  findFairyMultiplier: function() {
    return findFairyMultiplier;
  },
  findLeprechaunMultiplier: function() {
    return findLeprechaunMultiplier;
  },
  flat: function() {
    return flat;
  },
  freeCrafts: function() {
    return freeCrafts;
  },
  gameDay: function() {
    return gameDay;
  },
  get: function() {
    return get;
  },
  getActiveEffects: function() {
    return getActiveEffects;
  },
  getActiveSongs: function() {
    return getActiveSongs;
  },
  getAverage: function() {
    return getAverage;
  },
  getAverageAdventures: function() {
    return getAverageAdventures;
  },
  getBanishedMonsters: function() {
    return getBanishedMonsters;
  },
  getCurrentModes: function() {
    return getCurrentModes;
  },
  getFamiliarWandererChance: function() {
    return getFamiliarWandererChance;
  },
  getFoldGroup: function() {
    return getFoldGroup;
  },
  getKramcoWandererChance: function() {
    return getKramcoWandererChance;
  },
  getMacroId: function() {
    return getMacroId;
  },
  getModifier: function() {
    return get2;
  },
  getMonsterLocations: function() {
    return getMonsterLocations;
  },
  getPlayerFromIdOrName: function() {
    return getPlayerFromIdOrName;
  },
  getRemainingLiver: function() {
    return getRemainingLiver;
  },
  getRemainingSpleen: function() {
    return getRemainingSpleen;
  },
  getRemainingStomach: function() {
    return getRemainingStomach;
  },
  getSaleValue: function() {
    return getSaleValue;
  },
  getSongCount: function() {
    return getSongCount;
  },
  getSongLimit: function() {
    return getSongLimit;
  },
  getTodaysHolidayWanderers: function() {
    return getTodaysHolidayWanderers;
  },
  getTotalModifier: function() {
    return getTotalModifier;
  },
  getTotalPuttyLikeCopiesMade: function() {
    return getTotalPuttyLikeCopiesMade;
  },
  getWandererChance: function() {
    return getWandererChance;
  },
  getZapGroup: function() {
    return getZapGroup;
  },
  have: function() {
    return have;
  },
  haveCounter: function() {
    return haveCounter;
  },
  haveInCampground: function() {
    return haveInCampground;
  },
  haveWandererCounter: function() {
    return haveWandererCounter;
  },
  holidayWanderers: function() {
    return holidayWanderers;
  },
  invertMap: function() {
    return invertMap;
  },
  isBooleanProperty: function() {
    return isBooleanProperty;
  },
  isCurrentFamiliar: function() {
    return isCurrentFamiliar;
  },
  isFamiliarProperty: function() {
    return isFamiliarProperty;
  },
  isLocationProperty: function() {
    return isLocationProperty;
  },
  isMonsterProperty: function() {
    return isMonsterProperty;
  },
  isNumericOrStringProperty: function() {
    return isNumericOrStringProperty;
  },
  isNumericProperty: function() {
    return isNumericProperty;
  },
  isPhylumProperty: function() {
    return isPhylumProperty;
  },
  isSong: function() {
    return isSong;
  },
  isStatProperty: function() {
    return isStatProperty;
  },
  isStringProperty: function() {
    return isStringProperty;
  },
  isVoteWandererNow: function() {
    return isVoteWandererNow;
  },
  isWandererNow: function() {
    return isWandererNow;
  },
  lgrCurrencies: function() {
    return lgrCurrencies;
  },
  logger: function() {
    return logger_default;
  },
  makeByXFunction: function() {
    return makeByXFunction;
  },
  maxBy: function() {
    return maxBy;
  },
  maximizeCached: function() {
    return maximizeCached;
  },
  mergeMaximizeOptions: function() {
    return mergeMaximizeOptions;
  },
  modeableItems: function() {
    return modeableItems;
  },
  modeableState: function() {
    return modeableState;
  },
  monsterModifiers: function() {
    return monsterModifiers;
  },
  noneToNull: function() {
    return noneToNull;
  },
  notNull: function() {
    return notNull;
  },
  numericModifiers: function() {
    return numericModifiers;
  },
  parseNumber: function() {
    return parseNumber;
  },
  permedSkills: function() {
    return permedSkills;
  },
  possibleLibramSummons: function() {
    return possibleLibramSummons;
  },
  prepareAscension: function() {
    return prepareAscension;
  },
  property: function() {
    return property_exports;
  },
  propertyTypes: function() {
    return propertyTypes_exports;
  },
  questStep: function() {
    return questStep;
  },
  random: function() {
    return random;
  },
  realmAvailable: function() {
    return realmAvailable;
  },
  realmCurrency: function() {
    return realmCurrency;
  },
  realmTypes: function() {
    return realmTypes;
  },
  set: function() {
    return _set;
  },
  setDefaultMaximizeOptions: function() {
    return setDefaultMaximizeOptions;
  },
  setEqual: function() {
    return setEqual;
  },
  setProperties: function() {
    return setProperties;
  },
  signIdToName: function() {
    return signIdToName;
  },
  signNameToId: function() {
    return signNameToId;
  },
  sinceKolmafiaRevision: function() {
    return sinceKolmafiaRevision;
  },
  sinceKolmafiaVersion: function() {
    return sinceKolmafiaVersion;
  },
  skillModifiers: function() {
    return skillModifiers;
  },
  splitByCommasWithEscapes: function() {
    return splitByCommasWithEscapes;
  },
  statModifiers: function() {
    return statModifiers;
  },
  sum: function() {
    return sum;
  },
  sumNumbers: function() {
    return sumNumbers;
  },
  tc: function() {
    return tc;
  },
  telescope: function() {
    return telescope;
  },
  tryFindFreeKill: function() {
    return tryFindFreeKill;
  },
  tryFindFreeRun: function() {
    return tryFindFreeRun;
  },
  undelay: function() {
    return undelay;
  },
  uneffect: function() {
    return uneffect;
  },
  unequip: function() {
    return unequip;
  },
  withChoice: function() {
    return withChoice;
  },
  withChoices: function() {
    return withChoices;
  },
  withProperties: function() {
    return withProperties;
  },
  withProperty: function() {
    return withProperty;
  }
});
var init_dist = __esm({
  "node_modules/libram/dist/index.js": function() {
    init_kolmafia_polyfill();
    init_actions();
    init_ascend();
    init_Clan();
    init_challengePaths();
    init_combat();
    init_counter();
    init_diet();
    init_Dungeon();
    init_lib();
    init_maximize();
    init_modifierTypes();
    init_mood();
    init_propertyTyping();
    init_resources();
    init_since();
    init_template_string();
    init_Kmail();
    init_Path();
    init_logger();
    init_console();
    init_property();
    init_propertyTypes();
    init_utils();
    init_property();
    init_modifier();
    init_session();
  }
});

// node_modules/garbo-lib/dist/value.js
var require_value = __commonJS({
  "node_modules/garbo-lib/dist/value.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    var _templateObject598, _templateObject2145, _templateObject3131, _templateObject4109, _templateObject599, _templateObject658, _templateObject754, _templateObject847, _templateObject938, _templateObject1034, _templateObject1130, _templateObject1229, _templateObject1327, _templateObject1424, _templateObject1522, _templateObject1621, _templateObject1721, _templateObject1821, _templateObject1921, _templateObject2021, _templateObject2146, _templateObject2223, _templateObject2322, _templateObject2420, _templateObject2520, _templateObject2620, _templateObject2720, _templateObject2818, _templateObject2917, _templateObject3017, _templateObject3132, _templateObject3219, _templateObject3318, _templateObject3415, _templateObject3515, _templateObject3615, _templateObject3715, _templateObject3815, _templateObject3915, _templateObject4015, _templateObject4117, _templateObject4216, _templateObject4316, _templateObject4415, _templateObject4515, _templateObject4615, _templateObject4715, _templateObject4815, _templateObject4914, _templateObject5012, _templateObject5115, _templateObject5214, _templateObject5314, _templateObject5414, _templateObject5512, _templateObject5611, _templateObject5711, _templateObject5810, _templateObject5910, _templateObject607, _templateObject6113, _templateObject6211, _templateObject6310, _templateObject6410, _templateObject659;
    function _createForOfIteratorHelper27(o, allowArrayLike) {
      var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray52(o)) || allowArrayLike && o && typeof o.length == "number") {
          it && (o = it);
          var i = 0, F = function() {
          };
          return { s: F, n: function() {
            return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
          }, e: function(_e2) {
            throw _e2;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var normalCompletion = !0, didErr = !1, err;
      return { s: function() {
        it = it.call(o);
      }, n: function() {
        var step = it.next();
        return normalCompletion = step.done, step;
      }, e: function(_e3) {
        didErr = !0, err = _e3;
      }, f: function() {
        try {
          !normalCompletion && it.return != null && it.return();
        } finally {
          if (didErr)
            throw err;
        }
      } };
    }
    function _taggedTemplateLiteral74(strings, raw) {
      return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    function _slicedToArray26(arr, i) {
      return _arrayWithHoles26(arr) || _iterableToArrayLimit26(arr, i) || _unsupportedIterableToArray52(arr, i) || _nonIterableRest26();
    }
    function _nonIterableRest26() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit26(arr, i) {
      var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
    }
    function _arrayWithHoles26(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _toConsumableArray31(arr) {
      return _arrayWithoutHoles31(arr) || _iterableToArray31(arr) || _unsupportedIterableToArray52(arr) || _nonIterableSpread31();
    }
    function _nonIterableSpread31() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray52(o, minLen) {
      if (o) {
        if (typeof o == "string")
          return _arrayLikeToArray52(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
          return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
          return _arrayLikeToArray52(o, minLen);
      }
    }
    function _iterableToArray31(iter) {
      if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles31(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray52(arr);
    }
    function _arrayLikeToArray52(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.makeValue = void 0;
    var kolmafia_1 = require("kolmafia"), libram_1 = (init_dist(), __toCommonJS(dist_exports));
    function makeValue2() {
      var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        quick: !1
      }, regularValueCache = /* @__PURE__ */ new Map(), historicalValueCache = /* @__PURE__ */ new Map(), inputValues = options.itemValues ? _toConsumableArray31(options.itemValues.entries()).map(function(_ref) {
        var _ref2 = _slicedToArray26(_ref, 2), item10 = _ref2[0], val = _ref2[1];
        return [item10, function() {
          return (0, libram_1.undelay)(val);
        }];
      }) : [], specialValueLookup = new Map([[(0, libram_1.$item)(_templateObject598 || (_templateObject598 = _taggedTemplateLiteral74(["Freddy Kruegerand"]))), currency.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject2145 || (_templateObject2145 = _taggedTemplateLiteral74(["bottle of Bloodweiser, electric Kool-Aid, Dreadsylvanian skeleton key"])))))], [(0, libram_1.$item)(_templateObject3131 || (_templateObject3131 = _taggedTemplateLiteral74(["Beach Buck"]))), currency((0, libram_1.$item)(_templateObject4109 || (_templateObject4109 = _taggedTemplateLiteral74(["one-day ticket to Spring Break Beach"]))))], [(0, libram_1.$item)(_templateObject599 || (_templateObject599 = _taggedTemplateLiteral74(["Coinspiracy"]))), currency.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject658 || (_templateObject658 = _taggedTemplateLiteral74(["Merc Core deployment orders, karma shawarma"])))))], [(0, libram_1.$item)(_templateObject754 || (_templateObject754 = _taggedTemplateLiteral74(["FunFunds\u2122"]))), currency((0, libram_1.$item)(_templateObject847 || (_templateObject847 = _taggedTemplateLiteral74(["one-day ticket to Dinseylandfill"]))))], [(0, libram_1.$item)(_templateObject938 || (_templateObject938 = _taggedTemplateLiteral74(["Volcoino"]))), currency((0, libram_1.$item)(_templateObject1034 || (_templateObject1034 = _taggedTemplateLiteral74(["one-day ticket to That 70s Volcano"]))))], [(0, libram_1.$item)(_templateObject1130 || (_templateObject1130 = _taggedTemplateLiteral74(["Wal-Mart gift certificate"]))), currency((0, libram_1.$item)(_templateObject1229 || (_templateObject1229 = _taggedTemplateLiteral74(["one-day ticket to The Glaciest"]))))], [(0, libram_1.$item)(_templateObject1327 || (_templateObject1327 = _taggedTemplateLiteral74(["Rubee\u2122"]))), currency((0, libram_1.$item)(_templateObject1424 || (_templateObject1424 = _taggedTemplateLiteral74(["FantasyRealm guest pass"]))))], [(0, libram_1.$item)(_templateObject1522 || (_templateObject1522 = _taggedTemplateLiteral74(["Guzzlrbuck"]))), currency((0, libram_1.$item)(_templateObject1621 || (_templateObject1621 = _taggedTemplateLiteral74(["Never Don't Stop Not Striving"]))))]].concat(_toConsumableArray31(complexCandy()), [[(0, libram_1.$item)(_templateObject1721 || (_templateObject1721 = _taggedTemplateLiteral74(["Merc Core deployment orders"]))), function() {
        return value((0, libram_1.$item)(_templateObject1821 || (_templateObject1821 = _taggedTemplateLiteral74(["one-day ticket to Conspiracy Island"]))));
      }], [(0, libram_1.$item)(_templateObject1921 || (_templateObject1921 = _taggedTemplateLiteral74(["free-range mushroom"]))), function() {
        return 3 * Math.max(value((0, libram_1.$item)(_templateObject2021 || (_templateObject2021 = _taggedTemplateLiteral74(["mushroom tea"])))) - value((0, libram_1.$item)(_templateObject2146 || (_templateObject2146 = _taggedTemplateLiteral74(["soda water"])))), value((0, libram_1.$item)(_templateObject2223 || (_templateObject2223 = _taggedTemplateLiteral74(["mushroom whiskey"])))) - value((0, libram_1.$item)(_templateObject2322 || (_templateObject2322 = _taggedTemplateLiteral74(["fermenting powder"])))), value((0, libram_1.$item)(_templateObject2420 || (_templateObject2420 = _taggedTemplateLiteral74(["mushroom filet"])))));
      }], [(0, libram_1.$item)(_templateObject2520 || (_templateObject2520 = _taggedTemplateLiteral74(["little firkin"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject2620 || (_templateObject2620 = _taggedTemplateLiteral74(["martini, screwdriver, strawberry daiquiri, margarita, vodka martini, tequila sunrise, bottle of Amontillado, barrel-aged martini, barrel gun"])))));
      }], [(0, libram_1.$item)(_templateObject2720 || (_templateObject2720 = _taggedTemplateLiteral74(["normal barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject2818 || (_templateObject2818 = _taggedTemplateLiteral74(["a little sump'm sump'm, pink pony, rockin' wagon, roll in the hay, slip 'n' slide, slap and tickle"])))));
      }], [(0, libram_1.$item)(_templateObject2917 || (_templateObject2917 = _taggedTemplateLiteral74(["big tun"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject3017 || (_templateObject3017 = _taggedTemplateLiteral74(["gibson, gin and tonic, mimosette, tequila sunset, vodka and tonic, zmobie"])))));
      }], [(0, libram_1.$item)(_templateObject3132 || (_templateObject3132 = _taggedTemplateLiteral74(["weathered barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject3219 || (_templateObject3219 = _taggedTemplateLiteral74(["bean burrito, enchanted bean burrito, jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3318 || (_templateObject3318 = _taggedTemplateLiteral74(["dusty barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject3415 || (_templateObject3415 = _taggedTemplateLiteral74(["spicy bean burrito, spicy enchanted bean burrito, spicy jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3515 || (_templateObject3515 = _taggedTemplateLiteral74(["disintegrating barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject3615 || (_templateObject3615 = _taggedTemplateLiteral74(["insanely spicy bean burrito, insanely spicy enchanted bean burrito, insanely spicy jumping bean burrito"])))));
      }], [(0, libram_1.$item)(_templateObject3715 || (_templateObject3715 = _taggedTemplateLiteral74(["moist barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject3815 || (_templateObject3815 = _taggedTemplateLiteral74(["cast, concentrated magicalness pill, enchanted barbell, giant moxie weed, Mountain Stream soda"])))));
      }], [(0, libram_1.$item)(_templateObject3915 || (_templateObject3915 = _taggedTemplateLiteral74(["rotting barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject4015 || (_templateObject4015 = _taggedTemplateLiteral74(["Doc Galaktik's Ailment Ointment, extra-strength strongness elixir, jug-o-magicalness, Marquis de Poivre soda, suntan lotion of moxiousness"])))));
      }], [(0, libram_1.$item)(_templateObject4117 || (_templateObject4117 = _taggedTemplateLiteral74(["mouldering barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject4216 || (_templateObject4216 = _taggedTemplateLiteral74(["creepy ginger ale, haunted battery, scroll of drastic healing, synthetic marrow, the funk"])))));
      }], [(0, libram_1.$item)(_templateObject4316 || (_templateObject4316 = _taggedTemplateLiteral74(["barnacled barrel"]))), function() {
        return averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject4415 || (_templateObject4415 = _taggedTemplateLiteral74(["Alewife\u2122 Ale, bazookafish bubble gum, beefy fish meat, eel battery, glistening fish meat, ink bladder, pufferfish spine, shark cartilage, slick fish meat, slug of rum, slug of shochu, slug of vodka, temporary teardrop tattoo"])))));
      }], [(0, libram_1.$item)(_templateObject4515 || (_templateObject4515 = _taggedTemplateLiteral74(["psychoanalytic jar"]))), function() {
        return (
          // Exclude jick because he's rate-limited
          Math.max.apply(Math, _toConsumableArray31((0, libram_1.$items)(_templateObject4615 || (_templateObject4615 = _taggedTemplateLiteral74(["jar of psychoses (The Meatsmith), jar of psychoses (The Captain of the Gourd), jar of psychoses (The Crackpot Mystic), jar of psychoses (The Pretentious Artist), jar of psychoses (The Old Man), jar of psychoses (The Suspicious-Looking Guy)"]))).map(function(jar) {
            return value(jar);
          })))
        );
      }], [(0, libram_1.$item)(_templateObject4715 || (_templateObject4715 = _taggedTemplateLiteral74(["warbear whosit"]))), function() {
        return (0.35 * averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject4815 || (_templateObject4815 = _taggedTemplateLiteral74(["warbear auto-anvil, warbear chemistry lab, warbear high-efficiency still, warbear induction oven, warbear jackhammer drill press, warbear LP-ROM burner, warbear energy bracers, warbear exhaust manifold, warbear exo-arm, warbear foil hat, warbear laser beacon, warbear oil pan"]))))) + 0.65 * averageValue.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject4914 || (_templateObject4914 = _taggedTemplateLiteral74(["warbear metalworking primer, warbear beeping telegram, warbear gyrocopter, warbear procedural hilarity drone, warbear robo-camouflage unit, warbear sequential gaiety distribution system"])))))) / 100;
      }]], _toConsumableArray31((0, libram_1.$items)(_templateObject5012 || (_templateObject5012 = _taggedTemplateLiteral74(["worthless gewgaw, worthless knick-knack, worthless trinket"]))).map(function(i) {
        return [i, currency.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject5115 || (_templateObject5115 = _taggedTemplateLiteral74(["seal tooth, chisel, petrified noodles, jaba\xF1ero pepper, banjo strings, hot buttered roll, wooden figurine, ketchup, catsup, volleyball"])))).concat(_toConsumableArray31((0, kolmafia_1.myClass)() === (0, libram_1.$class)(_templateObject5214 || (_templateObject5214 = _taggedTemplateLiteral74(["Seal Clubber"]))) ? (0, libram_1.$items)(_templateObject5314 || (_templateObject5314 = _taggedTemplateLiteral74(["figurine of an ancient seal"]))) : [])))];
      })), [[(0, libram_1.$item)(_templateObject5414 || (_templateObject5414 = _taggedTemplateLiteral74(["Boris's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject5512 || (_templateObject5512 = _taggedTemplateLiteral74(["Boris's key lime"])))) - value((0, libram_1.$item)(_templateObject5611 || (_templateObject5611 = _taggedTemplateLiteral74(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject5711 || (_templateObject5711 = _taggedTemplateLiteral74(["Jarlsberg's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject5810 || (_templateObject5810 = _taggedTemplateLiteral74(["Jarlsberg's key lime"])))) - value((0, libram_1.$item)(_templateObject5910 || (_templateObject5910 = _taggedTemplateLiteral74(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject607 || (_templateObject607 = _taggedTemplateLiteral74(["Sneaky Pete's key"]))), function() {
        return value((0, libram_1.$item)(_templateObject6113 || (_templateObject6113 = _taggedTemplateLiteral74(["Sneaky Pete's key lime"])))) - value((0, libram_1.$item)(_templateObject6211 || (_templateObject6211 = _taggedTemplateLiteral74(["lime"]))));
      }], [(0, libram_1.$item)(_templateObject6310 || (_templateObject6310 = _taggedTemplateLiteral74(["fat loot token"]))), currency.apply(void 0, _toConsumableArray31((0, libram_1.$items)(_templateObject6410 || (_templateObject6410 = _taggedTemplateLiteral74(["Boris's key, Jarlsberg's key, Sneaky Pete's key, Boris's ring, Jarlsberg's earring, Sneaky Pete's breath spray, potato sprout, sewing kit, Spellbook: Singer's Faithful Ocelot, Spellbook: Drescher's Annoying Noise, Spellbook: Walberg's Dim Bulb, dried gelatinous cube"])))))]], _toConsumableArray31(inputValues))), exclusions = /* @__PURE__ */ new Set([
        // For tradeable items which can be "consumed" infinitely
        (0, libram_1.$item)(_templateObject659 || (_templateObject659 = _taggedTemplateLiteral74(["ChibiBuddy\u2122 (off)"])))
      ]);
      function saleValue(item10, useHistorical) {
        if (useHistorical && (0, kolmafia_1.historicalAge)(item10) <= 7 && (0, kolmafia_1.historicalPrice)(item10) > 0) {
          var isMallMin = (0, kolmafia_1.historicalPrice)(item10) === Math.max(100, 2 * (0, kolmafia_1.autosellPrice)(item10));
          return isMallMin ? (0, kolmafia_1.autosellPrice)(item10) : 0.9 * (0, kolmafia_1.historicalPrice)(item10);
        }
        return (0, libram_1.getSaleValue)(item10);
      }
      function currency() {
        for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++)
          items[_key] = arguments[_key];
        var unitCost = items.map(function(i) {
          var coinmaster = kolmafia_1.Coinmaster.all().find(function(c) {
            return (0, kolmafia_1.sellPrice)(c, i) > 0;
          });
          if (coinmaster)
            return [i, (0, kolmafia_1.sellPrice)(coinmaster, i)];
          throw "Invalid coinmaster item ".concat(i);
        });
        return function() {
          return Math.max.apply(Math, _toConsumableArray31(unitCost.map(function(_ref3) {
            var _ref4 = _slicedToArray26(_ref3, 2), item10 = _ref4[0], cost = _ref4[1];
            return value(item10) / cost;
          })));
        };
      }
      function complexCandy() {
        var candies = kolmafia_1.Item.all().filter(function(i) {
          return i.candyType === "complex";
        }), candyLookup = [[], [], [], [], []], _iterator = _createForOfIteratorHelper27(candies), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var candy = _step.value, id = (0, kolmafia_1.toInt)(candy) % 5;
            candy.tradeable && candyLookup[id].push(candy);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        var candyIdPrices = candies.filter(function(i) {
          return !i.tradeable;
        }).map(function(i) {
          return [i, function() {
            return Math.min.apply(Math, _toConsumableArray31(candyLookup[(0, kolmafia_1.toInt)(i) % 5].map(function(i2) {
              return value(i2);
            })));
          }];
        });
        return candyIdPrices;
      }
      function value(inputItem) {
        var _regularValueCache$ge, useHistorical = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, _ref5 = inputItem instanceof kolmafia_1.Item ? {
          item: inputItem,
          quantity: 1
        } : inputItem, item10 = _ref5.item, quantity = _ref5.quantity;
        if (exclusions.has(item10))
          return 0;
        useHistorical || (useHistorical = options.quick);
        var cachedValue = (_regularValueCache$ge = regularValueCache.get(item10)) !== null && _regularValueCache$ge !== void 0 ? _regularValueCache$ge : useHistorical ? historicalValueCache.get(item10) : void 0;
        if (cachedValue === void 0) {
          var _specialValueCompute, specialValueCompute = specialValueLookup.get(item10), _value = (_specialValueCompute = specialValueCompute == null ? void 0 : specialValueCompute()) !== null && _specialValueCompute !== void 0 ? _specialValueCompute : saleValue(item10, useHistorical);
          return (useHistorical ? historicalValueCache : regularValueCache).set(item10, _value), _value;
        }
        return quantity * cachedValue;
      }
      function averageValue() {
        for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)
          items[_key2] = arguments[_key2];
        return (0, libram_1.sum)(items, value) / items.length;
      }
      return {
        averageValue: averageValue,
        value: value
      };
    }
    exports.makeValue = makeValue2;
  }
});

// node_modules/garbo-lib/dist/wanderer/lib.js
var require_lib2 = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/lib.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    var _templateObject598, _templateObject2145, _templateObject3131, _templateObject4109, _templateObject599, _templateObject658, _templateObject754, _templateObject847, _templateObject938, _templateObject1034, _templateObject1130, _templateObject1229, _templateObject1327, _templateObject1424, _templateObject1522, _templateObject1621, _templateObject1721, _templateObject1821, _templateObject1921, _templateObject2021, _templateObject2146, _templateObject2223, _templateObject2322, _templateObject2420, _templateObject2520, _templateObject2620, _templateObject2720;
    function _classCallCheck27(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperty30(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _toConsumableArray31(arr) {
      return _arrayWithoutHoles31(arr) || _iterableToArray31(arr) || _unsupportedIterableToArray52(arr) || _nonIterableSpread31();
    }
    function _nonIterableSpread31() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray52(o, minLen) {
      if (o) {
        if (typeof o == "string")
          return _arrayLikeToArray52(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
          return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
          return _arrayLikeToArray52(o, minLen);
      }
    }
    function _iterableToArray31(iter) {
      if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles31(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray52(arr);
    }
    function _arrayLikeToArray52(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _taggedTemplateLiteral74(strings, raw) {
      return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.bofaValue = exports.wandererTurnsAvailableToday = exports.defaultFactory = exports.WandererTarget = exports.canWander = exports.unlock = exports.canAdventureOrUnlock = exports.underwater = exports.UnlockableZones = exports.isDraggableFight = exports.draggableFights = void 0;
    var kolmafia_1 = require("kolmafia"), libram_1 = (init_dist(), __toCommonJS(dist_exports));
    exports.draggableFights = ["backup", "wanderer", "yellow ray", "freefight"];
    function isDraggableFight(fight) {
      return exports.draggableFights.includes(fight);
    }
    exports.isDraggableFight = isDraggableFight;
    exports.UnlockableZones = [{
      zone: "Spaaace",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject598 || (_templateObject598 = _taggedTemplateLiteral74(["Transpondent"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject2145 || (_templateObject2145 = _taggedTemplateLiteral74(["transporter transponder"]))),
      noInv: !1
    }, {
      zone: "Wormwood",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject3131 || (_templateObject3131 = _taggedTemplateLiteral74(["Absinthe-Minded"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject4109 || (_templateObject4109 = _taggedTemplateLiteral74(["tiny bottle of absinthe"]))),
      noInv: !1
    }, {
      zone: "Rabbit Hole",
      available: function() {
        return (0, libram_1.have)((0, libram_1.$effect)(_templateObject599 || (_templateObject599 = _taggedTemplateLiteral74(["Down the Rabbit Hole"]))));
      },
      unlocker: (0, libram_1.$item)(_templateObject658 || (_templateObject658 = _taggedTemplateLiteral74(['"DRINK ME" potion']))),
      noInv: !1
    }, {
      zone: "Conspiracy Island",
      available: function() {
        return (0, libram_1.realmAvailable)("spooky");
      },
      unlocker: (0, libram_1.$item)(_templateObject754 || (_templateObject754 = _taggedTemplateLiteral74(["one-day ticket to Conspiracy Island"]))),
      noInv: !0
    }, {
      zone: "Dinseylandfill",
      available: function() {
        return (0, libram_1.realmAvailable)("stench");
      },
      unlocker: (0, libram_1.$item)(_templateObject847 || (_templateObject847 = _taggedTemplateLiteral74(["one-day ticket to Dinseylandfill"]))),
      noInv: !0
    }, {
      zone: "The Glaciest",
      available: function() {
        return (0, libram_1.realmAvailable)("cold");
      },
      unlocker: (0, libram_1.$item)(_templateObject938 || (_templateObject938 = _taggedTemplateLiteral74(["one-day ticket to The Glaciest"]))),
      noInv: !0
    }, {
      zone: "Spring Break Beach",
      available: function() {
        return (0, libram_1.realmAvailable)("sleaze");
      },
      unlocker: (0, libram_1.$item)(_templateObject1034 || (_templateObject1034 = _taggedTemplateLiteral74(["one-day ticket to Spring Break Beach"]))),
      noInv: !0
    }];
    function underwater(location) {
      return location.environment === "underwater";
    }
    exports.underwater = underwater;
    var ILLEGAL_PARENTS = ["Clan Basement", "Psychoses", "PirateRealm"], ILLEGAL_ZONES = ["The Drip"], canAdventureOrUnlockSkipList = [].concat(_toConsumableArray31((0, libram_1.$locations)(_templateObject1130 || (_templateObject1130 = _taggedTemplateLiteral74(["The Oasis, The Bubblin' Caldera, Barrrney's Barrr, The F'c'le, The Poop Deck, Belowdecks, Madness Bakery, The Secret Government Laboratory, The Dire Warren, Inside the Palindome, The Haiku Dungeon, An Incredibly Strange Place (Bad Trip), An Incredibly Strange Place (Mediocre Trip), An Incredibly Strange Place (Great Trip), El Vibrato Island, The Daily Dungeon, Trick-or-Treating, Seaside Megalopolis"])))), _toConsumableArray31(kolmafia_1.Location.all().filter(function(_ref) {
      var parent = _ref.parent, zone = _ref.zone;
      return ILLEGAL_PARENTS.includes(parent) || ILLEGAL_ZONES.includes(zone);
    })));
    function canAdventureOrUnlock(loc) {
      var skiplist = _toConsumableArray31(canAdventureOrUnlockSkipList);
      !(0, libram_1.have)((0, libram_1.$item)(_templateObject1229 || (_templateObject1229 = _taggedTemplateLiteral74(["repaid diaper"])))) && (0, libram_1.have)((0, libram_1.$item)(_templateObject1327 || (_templateObject1327 = _taggedTemplateLiteral74(["Great Wolf's beastly trousers"])))) && skiplist.push((0, libram_1.$location)(_templateObject1424 || (_templateObject1424 = _taggedTemplateLiteral74(["The Icy Peak"]))));
      var canUnlock = exports.UnlockableZones.some(function(z) {
        return loc.zone === z.zone && (z.available() || !z.noInv);
      });
      return !underwater(loc) && !skiplist.includes(loc) && ((0, kolmafia_1.canAdventure)(loc) || canUnlock);
    }
    exports.canAdventureOrUnlock = canAdventureOrUnlock;
    function unlock(loc, value) {
      var unlockableZone = exports.UnlockableZones.find(function(z) {
        return z.zone === loc.zone;
      });
      return unlockableZone ? unlockableZone.available() ? !0 : (0, kolmafia_1.buy)(1, unlockableZone.unlocker, value) === 0 ? !1 : (0, kolmafia_1.use)(unlockableZone.unlocker) : (0, kolmafia_1.canAdventure)(loc);
    }
    exports.unlock = unlock;
    var backupSkiplist = (0, libram_1.$locations)(_templateObject1522 || (_templateObject1522 = _taggedTemplateLiteral74(["The Overgrown Lot, The Skeleton Store, The Mansion of Dr. Weirdeaux, Professor Jacking's Huge-A-Ma-tron"]))), backupSafelist = (0, libram_1.$locations)(_templateObject1621 || (_templateObject1621 = _taggedTemplateLiteral74(["The Haunted Gallery, The Haunted Ballroom, The Haunted Library, The Penultimate Fantasy Airship, Cobb's Knob Barracks, The Castle in the Clouds in the Sky (Basement), The Castle in the Clouds in the Sky (Ground Floor), The Castle in the Clouds in the Sky (Top Floor), The Haiku Dungeon, Twin Peak, A Mob of Zeppelin Protesters, The Upper Chamber"]))), yellowRaySafelist = (0, libram_1.$locations)(_templateObject1721 || (_templateObject1721 = _taggedTemplateLiteral74(["The Haunted Gallery, The Haunted Ballroom, The Haunted Library, Cobb's Knob Barracks, The Castle in the Clouds in the Sky (Basement), The Castle in the Clouds in the Sky (Ground Floor), The Haiku Dungeon, Twin Peak, A Mob of Zeppelin Protesters, The Upper Chamber"])));
    function canWanderTypeBackup(location) {
      return !backupSkiplist.includes(location) && (location.combatPercent >= 100 || backupSafelist.includes(location));
    }
    function canWanderTypeFreeFight(location) {
      return location === (0, libram_1.$location)(_templateObject1821 || (_templateObject1821 = _taggedTemplateLiteral74(["The Fun-Guy Mansion"]))) && (0, libram_1.get)("funGuyMansionKills", 0) >= 100 ? !1 : !backupSkiplist.includes(location) && (location.combatPercent >= 100 || yellowRaySafelist.includes(location));
    }
    var wandererSkiplist = (0, libram_1.$locations)(_templateObject1921 || (_templateObject1921 = _taggedTemplateLiteral74(["The Batrat and Ratbat Burrow, Guano Junction, The Beanbat Chamber, A-Boo Peak, The Mouldering Mansion, The Rogue Windmill, The Stately Pleasure Dome"])));
    function canWanderTypeWander(location) {
      return !wandererSkiplist.includes(location) && location.wanderers;
    }
    function canWander(location, type) {
      if (underwater(location))
        return !1;
      switch (type) {
        case "backup":
          return canWanderTypeBackup(location);
        case "freefight":
        case "yellow ray":
          return canWanderTypeFreeFight(location);
        case "wanderer":
          return canWanderTypeWander(location);
      }
    }
    exports.canWander = canWander;
    var WandererTarget = (
      /**
       * Process for determining where to put a wanderer to extract additional value from it
       * @param name name of this wanderer - for documentation/logging purposes
       * @param location returns the location to adventure to target this; null only if something goes wrong
       * @param value the expected additional value of putting a single wanderer-fight into the zone for this
       * @param prepareTurn attempt to set up, spending meat and or items as necessary
       */
      function WandererTarget2(name, location, value) {
        var prepareTurn = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : function() {
          return !0;
        };
        _classCallCheck27(this, WandererTarget2), _defineProperty30(this, "name", void 0), _defineProperty30(this, "value", void 0), _defineProperty30(this, "location", void 0), _defineProperty30(this, "prepareTurn", void 0), this.name = name, this.value = value, this.location = location, this.prepareTurn = prepareTurn;
      }
    );
    exports.WandererTarget = WandererTarget;
    function defaultFactory() {
      return [new WandererTarget("Default", (0, libram_1.$location)(_templateObject2021 || (_templateObject2021 = _taggedTemplateLiteral74(["The Haunted Kitchen"]))), 0)];
    }
    exports.defaultFactory = defaultFactory;
    var WanderingSources = [{
      name: "CMG",
      item: (0, libram_1.$item)(_templateObject2146 || (_templateObject2146 = _taggedTemplateLiteral74(["cursed magnifying glass"]))),
      max: 3,
      property: "_voidFreeFights",
      type: "wanderer"
    }, {
      name: "Voter",
      item: (0, libram_1.$item)(_templateObject2223 || (_templateObject2223 = _taggedTemplateLiteral74(['"I Voted!" sticker']))),
      max: 3,
      property: "_voteFreeFights",
      type: "wanderer"
    }, {
      name: "Voter",
      item: (0, libram_1.$item)(_templateObject2322 || (_templateObject2322 = _taggedTemplateLiteral74(['"I Voted!" sticker']))),
      max: 3,
      property: "_voteFreeFights",
      type: "wanderer"
    }, {
      name: "Backup",
      item: (0, libram_1.$item)(_templateObject2420 || (_templateObject2420 = _taggedTemplateLiteral74(["backup camera"]))),
      max: 11,
      property: "_backUpUses",
      type: "backup"
    }];
    function wandererTurnsAvailableToday(options, location) {
      var canWanderCache = {
        backup: canWander(location, "backup"),
        wanderer: canWander(location, "wanderer"),
        "yellow ray": canWander(location, "yellow ray"),
        freefight: canWander(location, "freefight")
      }, digitize = canWanderCache.backup && options.digitzesRemaining ? options.digitzesRemaining(options.estimatedTurns()) : 0, pigSkinnerRay = canWanderCache.backup && (0, libram_1.have)((0, libram_1.$skill)(_templateObject2520 || (_templateObject2520 = _taggedTemplateLiteral74(["Free-For-All"])))) ? Math.floor(options.estimatedTurns() / 25) : 0, yellowRayCooldown = (0, libram_1.have)((0, libram_1.$skill)(_templateObject2620 || (_templateObject2620 = _taggedTemplateLiteral74(["Fondeluge"])))) ? 50 : 100, yellowRay = canWanderCache["yellow ray"] ? Math.floor(options.estimatedTurns() / yellowRayCooldown) : 0, wanderers2 = (0, libram_1.sum)(WanderingSources, function(source) {
        return canWanderCache[source.type] && (0, libram_1.have)(source.item) ? (0, libram_1.clamp)((0, libram_1.get)(source.property), 0, source.max) : 0;
      });
      return digitize + pigSkinnerRay + yellowRay + wanderers2;
    }
    exports.wandererTurnsAvailableToday = wandererTurnsAvailableToday;
    var LIMITED_BOFA_DROPS = (0, libram_1.$items)(_templateObject2720 || (_templateObject2720 = _taggedTemplateLiteral74(["pocket wish, tattered scrap of paper"])));
    function bofaValue(_ref2, monster) {
      var plentifulMonsters = _ref2.plentifulMonsters, itemValue = _ref2.itemValue, effectValue = _ref2.effectValue;
      switch (monster.factType) {
        case "item": {
          var item10 = (0, kolmafia_1.itemFact)(monster), quantity = (0, kolmafia_1.numericFact)(monster);
          return LIMITED_BOFA_DROPS.includes(item10) && plentifulMonsters.some(function(monster2) {
            return (0, kolmafia_1.toItem)(monster2.fact) === item10;
          }) ? 0 : quantity * itemValue(item10);
        }
        case "effect": {
          var effect2 = (0, kolmafia_1.effectFact)(monster), duration = (0, kolmafia_1.numericFact)(monster);
          return effectValue(effect2, duration);
        }
        case "meat":
          return (0, kolmafia_1.numericFact)(monster);
        default:
          return 0;
      }
    }
    exports.bofaValue = bofaValue;
  }
});

// node_modules/garbo-lib/dist/wanderer/guzzlr.js
var require_guzzlr = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/guzzlr.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    var _templateObject598;
    function _taggedTemplateLiteral74(strings, raw) {
      return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.guzzlrFactory = void 0;
    var kolmafia_1 = require("kolmafia"), libram_1 = (init_dist(), __toCommonJS(dist_exports)), lib_1 = require_lib2();
    function considerAbandon(options, locationSkiplist) {
      var location = libram_1.Guzzlr.getLocation(), remaningTurns = Math.ceil((100 - (0, libram_1.get)("guzzlrDeliveryProgress")) / (10 - (0, libram_1.get)("_guzzlrDeliveries")));
      (0, kolmafia_1.print)("Got guzzlr quest ".concat(libram_1.Guzzlr.getTier(), " at ").concat(libram_1.Guzzlr.getLocation(), " with remaining turns ").concat(remaningTurns)), libram_1.Guzzlr.canAbandon() && (!location || // if mafia failed to track the location correctly
      locationSkiplist.includes(location) || !(0, lib_1.canAdventureOrUnlock)(location) || options.ascend && (0, lib_1.wandererTurnsAvailableToday)(options, location) < remaningTurns) && ((0, kolmafia_1.print)("Abandoning..."), libram_1.Guzzlr.abandon());
    }
    function acceptGuzzlrQuest(options, locationSkiplist) {
      for (libram_1.Guzzlr.isQuestActive() && considerAbandon(options, locationSkiplist); !libram_1.Guzzlr.isQuestActive(); )
        (0, kolmafia_1.print)("Picking a guzzlr quest"), libram_1.Guzzlr.canPlatinum() && !(options.prioritizeCappingGuzzlr && libram_1.Guzzlr.haveFullPlatinumBonus()) ? libram_1.Guzzlr.acceptPlatinum() : libram_1.Guzzlr.canGold() && (libram_1.Guzzlr.haveFullBronzeBonus() || !libram_1.Guzzlr.haveFullGoldBonus()) ? libram_1.Guzzlr.acceptGold() : libram_1.Guzzlr.acceptBronze(), considerAbandon(options, locationSkiplist);
    }
    function guzzlrValue(buckValue, tier) {
      var progressPerTurn = 100 / (10 - (0, libram_1.get)("_guzzlrDeliveries"));
      switch (tier) {
        case null:
          return 0;
        case "bronze":
          return 3 * buckValue / progressPerTurn;
        case "gold":
          return 6 * buckValue / progressPerTurn;
        case "platinum":
          return 21.5 * buckValue / progressPerTurn;
      }
    }
    function guzzlrFactory(_type, locationSkiplist, options) {
      if (libram_1.Guzzlr.have()) {
        var buckValue = options.itemValue((0, libram_1.$item)(_templateObject598 || (_templateObject598 = _taggedTemplateLiteral74(["Guzzlrbuck"]))));
        acceptGuzzlrQuest(options, locationSkiplist);
        var location = libram_1.Guzzlr.getLocation();
        if (location !== null) {
          var guzzlrBooze = libram_1.Guzzlr.getTier() === "platinum" ? libram_1.Guzzlr.getCheapestPlatinumCocktail() : libram_1.Guzzlr.getBooze();
          return guzzlrBooze ? [new lib_1.WandererTarget("Guzzlr", location, guzzlrValue(buckValue, libram_1.Guzzlr.getTier()) - (0, kolmafia_1.mallPrice)(guzzlrBooze), function() {
            if (!guzzlrBooze)
              return !1;
            if (!(0, libram_1.have)(guzzlrBooze)) {
              var fancy = guzzlrBooze && (0, kolmafia_1.craftType)(guzzlrBooze).includes("fancy");
              guzzlrBooze && (!fancy || fancy && (0, libram_1.freeCrafts)("booze") > 0) ? (0, kolmafia_1.retrieveItem)(guzzlrBooze) : guzzlrBooze && (0, kolmafia_1.buy)(1, guzzlrBooze, guzzlrValue(buckValue, libram_1.Guzzlr.getTier()));
            }
            return (0, libram_1.have)(guzzlrBooze);
          })] : [];
        }
      }
      return [];
    }
    exports.guzzlrFactory = guzzlrFactory;
  }
});

// node_modules/garbo-lib/dist/wanderer/lovebugs.js
var require_lovebugs = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/lovebugs.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    var _templateObject598, _templateObject2145, _templateObject3131, _templateObject4109, _templateObject599, _templateObject658;
    function _taggedTemplateLiteral74(strings, raw) {
      return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.lovebugsFactory = void 0;
    var libram_1 = (init_dist(), __toCommonJS(dist_exports)), lib_1 = require_lib2(), LovebugTargets = [
      // exclude barf mountain because we spend most of our turns there anyway
      {
        element: "cold",
        location: (0, libram_1.$location)(_templateObject598 || (_templateObject598 = _taggedTemplateLiteral74(["VYKEA"]))),
        currency: (0, libram_1.$item)(_templateObject2145 || (_templateObject2145 = _taggedTemplateLiteral74(["Wal-Mart gift certificate"])))
      },
      {
        element: "sleaze",
        location: (0, libram_1.$location)(_templateObject3131 || (_templateObject3131 = _taggedTemplateLiteral74(["The Fun-Guy Mansion"]))),
        currency: (0, libram_1.$item)(_templateObject4109 || (_templateObject4109 = _taggedTemplateLiteral74(["Beach Buck"])))
      },
      {
        element: "spooky",
        location: (0, libram_1.$location)(_templateObject599 || (_templateObject599 = _taggedTemplateLiteral74(["The Deep Dark Jungle"]))),
        currency: (0, libram_1.$item)(_templateObject658 || (_templateObject658 = _taggedTemplateLiteral74(["Coinspiracy"])))
      }
    ];
    function lovebugsFactory(_type, _locationSkiplist, options) {
      return (0, libram_1.get)("lovebugsUnlocked") ? LovebugTargets.filter(function(t) {
        return (0, libram_1.realmAvailable)(t.element);
      }).map(function(t) {
        return new lib_1.WandererTarget("Lovebugs ".concat(t.location), t.location, options.itemValue(t.currency) * 0.05);
      }) : [];
    }
    exports.lovebugsFactory = lovebugsFactory;
  }
});

// node_modules/garbo-lib/dist/wanderer/freefight.js
var require_freefight = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/freefight.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    function _toConsumableArray31(arr) {
      return _arrayWithoutHoles31(arr) || _iterableToArray31(arr) || _unsupportedIterableToArray52(arr) || _nonIterableSpread31();
    }
    function _nonIterableSpread31() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray31(iter) {
      if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles31(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray52(arr);
    }
    function _createForOfIteratorHelper27(o, allowArrayLike) {
      var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray52(o)) || allowArrayLike && o && typeof o.length == "number") {
          it && (o = it);
          var i = 0, F = function() {
          };
          return { s: F, n: function() {
            return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
          }, e: function(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var normalCompletion = !0, didErr = !1, err;
      return { s: function() {
        it = it.call(o);
      }, n: function() {
        var step = it.next();
        return normalCompletion = step.done, step;
      }, e: function(_e2) {
        didErr = !0, err = _e2;
      }, f: function() {
        try {
          !normalCompletion && it.return != null && it.return();
        } finally {
          if (didErr)
            throw err;
        }
      } };
    }
    function _unsupportedIterableToArray52(o, minLen) {
      if (o) {
        if (typeof o == "string")
          return _arrayLikeToArray52(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
          return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
          return _arrayLikeToArray52(o, minLen);
      }
    }
    function _arrayLikeToArray52(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.freefightFactory = void 0;
    var kolmafia_1 = require("kolmafia"), libram_1 = (init_dist(), __toCommonJS(dist_exports)), lib_1 = require_lib2();
    function averageYrValue(location, forceItemDrops, options) {
      var badAttributes = ["LUCKY", "ULTRARARE", "BOSS"], rates = (0, kolmafia_1.appearanceRates)(location), monsters = (0, kolmafia_1.getMonsters)(location).filter(function(m) {
        return !badAttributes.some(function(s) {
          return m.attributes.includes(s);
        }) && rates[m.name] > 0;
      }), canDuplicate = libram_1.SourceTerminal.have() && libram_1.SourceTerminal.duplicateUsesRemaining() > 0;
      return monsters.length === 0 ? 0 : (0, libram_1.sum)(monsters, function(m) {
        var items = (0, kolmafia_1.itemDropsArray)(m).filter(function(drop) {
          return ["", "n"].includes(drop.type);
        }), duplicateFactor = canDuplicate && !m.attributes.includes("NOCOPY") ? 2 : 1, meatDrop = (0, libram_1.clamp)((m.minMeat + m.maxMeat) / 2, 0, 1e3), itemDrop = duplicateFactor * (0, libram_1.sum)(items, function(drop) {
          var yrRate = (drop.type === "" && forceItemDrops ? 100 : drop.rate) / 100;
          return yrRate * options.itemValue(drop.drop);
        });
        return itemDrop + meatDrop + (0, lib_1.bofaValue)(options, m);
      }) / monsters.length;
    }
    function monsterValues(forceItemDrops, options) {
      var values = /* @__PURE__ */ new Map(), _iterator = _createForOfIteratorHelper27(kolmafia_1.Location.all().filter(function(l) {
        return (0, lib_1.canAdventureOrUnlock)(l) && !(0, lib_1.underwater)(l);
      })), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var location = _step.value;
          values.set(location, averageYrValue(location, forceItemDrops, options) + options.freeFightExtraValue(location));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return values;
    }
    function freefightFactory(type, locationSkiplist, options) {
      if (type === "yellow ray" || type === "freefight") {
        var _ret = function() {
          var validLocations = kolmafia_1.Location.all().filter(function(location) {
            return (0, lib_1.canWander)(location, "yellow ray") && (0, lib_1.canAdventureOrUnlock)(location);
          }), locationValues = monsterValues(type === "yellow ray", options), bestZones = /* @__PURE__ */ new Set([(0, libram_1.maxBy)(validLocations, function(l) {
            var _locationValues$get;
            return (_locationValues$get = locationValues.get(l)) !== null && _locationValues$get !== void 0 ? _locationValues$get : 0;
          })]), _iterator2 = _createForOfIteratorHelper27(lib_1.UnlockableZones), _step2;
          try {
            var _loop = function() {
              var unlockableZone = _step2.value, extraLocations = kolmafia_1.Location.all().filter(function(l) {
                return l.zone === unlockableZone.zone && !locationSkiplist.includes(l);
              });
              bestZones.add((0, libram_1.maxBy)(extraLocations, function(l) {
                var _locationValues$get3;
                return (_locationValues$get3 = locationValues.get(l)) !== null && _locationValues$get3 !== void 0 ? _locationValues$get3 : 0;
              }));
            };
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; )
              _loop();
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
          if (bestZones.size > 0)
            return {
              v: _toConsumableArray31(bestZones).map(function(l) {
                var _locationValues$get2;
                return new lib_1.WandererTarget("Yellow Ray ".concat(l), l, (_locationValues$get2 = locationValues.get(l)) !== null && _locationValues$get2 !== void 0 ? _locationValues$get2 : 0);
              })
            };
        }();
        if (typeof _ret == "object")
          return _ret.v;
      }
      return [];
    }
    exports.freefightFactory = freefightFactory;
  }
});

// node_modules/garbo-lib/dist/wanderer/eightbit.js
var require_eightbit = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/eightbit.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    var _templateObject598, _templateObject2145, _templateObject3131, _templateObject4109, _templateObject599, _templateObject658;
    function _taggedTemplateLiteral74(strings, raw) {
      return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.eightbitFactory = exports.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST = exports.bonusColor = void 0;
    var kolmafia_1 = require("kolmafia"), lib_1 = require_lib2(), libram_1 = (init_dist(), __toCommonJS(dist_exports));
    exports.bonusColor = ["black", "blue", "green", "red"];
    exports.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST = 2e4;
    var locationColor = {
      black: (0, libram_1.$location)(_templateObject598 || (_templateObject598 = _taggedTemplateLiteral74(["Vanya's Castle"]))),
      blue: (0, libram_1.$location)(_templateObject2145 || (_templateObject2145 = _taggedTemplateLiteral74(["Megalo-City"]))),
      green: (0, libram_1.$location)(_templateObject3131 || (_templateObject3131 = _taggedTemplateLiteral74(["Hero's Field"]))),
      red: (0, libram_1.$location)(_templateObject4109 || (_templateObject4109 = _taggedTemplateLiteral74(["The Fungus Plains"])))
    };
    function value(color, options) {
      var denominator = options.ascend ? (0, libram_1.get)("8BitScore") - exports.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST : exports.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST;
      return options.itemValue((0, libram_1.$item)(_templateObject599 || (_templateObject599 = _taggedTemplateLiteral74(["fat loot token"])))) * (0, kolmafia_1.eightBitPoints)(locationColor[color]) / denominator;
    }
    function eightbitFactory(type, locationSkiplist, options) {
      return (0, libram_1.have)((0, libram_1.$item)(_templateObject658 || (_templateObject658 = _taggedTemplateLiteral74(["continuum transfunctioner"])))) && type !== "backup" && (0, libram_1.get)("8BitScore") < exports.TREASURE_HOUSE_FAT_LOOT_TOKEN_COST ? exports.bonusColor.map(function(color) {
        return new lib_1.WandererTarget("8-bit (".concat(color, ")"), locationColor[color], value(color, options));
      }).filter(function(t) {
        return !locationSkiplist.includes(t.location);
      }) : [];
    }
    exports.eightbitFactory = eightbitFactory;
  }
});

// node_modules/garbo-lib/dist/wanderer/index.js
var require_wanderer = __commonJS({
  "node_modules/garbo-lib/dist/wanderer/index.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    var _templateObject598, _templateObject2145, _templateObject3131, _templateObject4109, _templateObject599, _templateObject658, _templateObject754, _templateObject847, _templateObject938, _templateObject1034, _templateObject1130, _templateObject1229, _templateObject1327, _templateObject1424, _templateObject1522, _templateObject1621, _templateObject1721, _templateObject1821, _templateObject1921, _templateObject2021, _templateObject2146, _templateObject2223, _templateObject2322, _templateObject2420, _templateObject2520, _templateObject2620, _templateObject2720, _templateObject2818, _templateObject2917, _templateObject3017, _templateObject3132;
    function ownKeys14(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread14(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        i % 2 ? ownKeys14(Object(source), !0).forEach(function(key) {
          _defineProperty30(target, key, source[key]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys14(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
      return target;
    }
    function _classCallCheck27(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties21(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass21(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties21(Constructor.prototype, protoProps), staticProps && _defineProperties21(Constructor, staticProps), Constructor;
    }
    function _defineProperty30(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _toConsumableArray31(arr) {
      return _arrayWithoutHoles31(arr) || _iterableToArray31(arr) || _unsupportedIterableToArray52(arr) || _nonIterableSpread31();
    }
    function _nonIterableSpread31() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray31(iter) {
      if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles31(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray52(arr);
    }
    function _createForOfIteratorHelper27(o, allowArrayLike) {
      var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray52(o)) || allowArrayLike && o && typeof o.length == "number") {
          it && (o = it);
          var i = 0, F = function() {
          };
          return { s: F, n: function() {
            return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
          }, e: function(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var normalCompletion = !0, didErr = !1, err;
      return { s: function() {
        it = it.call(o);
      }, n: function() {
        var step = it.next();
        return normalCompletion = step.done, step;
      }, e: function(_e2) {
        didErr = !0, err = _e2;
      }, f: function() {
        try {
          !normalCompletion && it.return != null && it.return();
        } finally {
          if (didErr)
            throw err;
        }
      } };
    }
    function _unsupportedIterableToArray52(o, minLen) {
      if (o) {
        if (typeof o == "string")
          return _arrayLikeToArray52(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
          return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
          return _arrayLikeToArray52(o, minLen);
      }
    }
    function _arrayLikeToArray52(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _taggedTemplateLiteral74(strings, raw) {
      return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.WandererManager = void 0;
    var kolmafia_1 = require("kolmafia"), libram_1 = (init_dist(), __toCommonJS(dist_exports)), guzzlr_1 = require_guzzlr(), lib_1 = require_lib2(), lovebugs_1 = require_lovebugs(), freefight_1 = require_freefight(), eightbit_1 = require_eightbit();
    function sober() {
      return (0, kolmafia_1.myInebriety)() <= (0, kolmafia_1.inebrietyLimit)() + ((0, kolmafia_1.myFamiliar)() === (0, libram_1.$familiar)(_templateObject598 || (_templateObject598 = _taggedTemplateLiteral74(["Stooper"]))) ? -1 : 0);
    }
    var wanderFactories = [lib_1.defaultFactory, freefight_1.freefightFactory, lovebugs_1.lovebugsFactory, guzzlr_1.guzzlrFactory, eightbit_1.eightbitFactory];
    function bestWander(type, locationSkiplist, nameSkiplist, options) {
      var possibleLocations = /* @__PURE__ */ new Map(), _iterator = _createForOfIteratorHelper27(wanderFactories), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var wanderFactory = _step.value, wanderTargets = wanderFactory(type, locationSkiplist, options), _iterator2 = _createForOfIteratorHelper27(wanderTargets), _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
              var wanderTarget = _step2.value;
              if (!nameSkiplist.includes(wanderTarget.name) && !locationSkiplist.includes(wanderTarget.location) && (0, lib_1.canWander)(wanderTarget.location, type)) {
                var _possibleLocations$ge, wandererLocation = (_possibleLocations$ge = possibleLocations.get(wanderTarget.location)) !== null && _possibleLocations$ge !== void 0 ? _possibleLocations$ge : {
                  location: wanderTarget.location,
                  targets: [],
                  value: 0
                };
                wandererLocation.targets = [].concat(_toConsumableArray31(wandererLocation.targets), [wanderTarget]), wandererLocation.value += wanderTarget.value, possibleLocations.set(wandererLocation.location, wandererLocation);
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (possibleLocations.size === 0)
        throw "Could not determine a wander target!";
      return (0, libram_1.maxBy)(_toConsumableArray31(possibleLocations.values()), "value");
    }
    function wanderWhere(options, type) {
      var nameSkiplist = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], locationSkiplist = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [], candidate = bestWander(type, locationSkiplist, nameSkiplist, options), failed = candidate.targets.filter(function(target) {
        return !target.prepareTurn();
      }), badLocation = !(0, lib_1.canAdventureOrUnlock)(candidate.location) || !(0, lib_1.unlock)(candidate.location, candidate.value) || !(0, lib_1.canWander)(candidate.location, type) ? [candidate.location] : [];
      if (failed.length > 0 || badLocation.length > 0)
        return wanderWhere(options, type, [].concat(_toConsumableArray31(nameSkiplist), _toConsumableArray31(failed.map(function(target) {
          return target.name;
        }))), [].concat(_toConsumableArray31(locationSkiplist), badLocation));
      var targets = candidate.targets.map(function(t) {
        return t.name;
      }).join("; "), value = candidate.value.toFixed(2);
      return (0, kolmafia_1.print)("Wandering at ".concat(candidate.location, " for expected value ").concat(value, " (").concat(targets, ")"), (0, kolmafia_1.isDarkMode)() ? "yellow" : "blue"), candidate.location;
    }
    var defaultWanderOptions = {
      drunkSafe: !0,
      allowEquipment: !0
    }, WandererManager2 = /* @__PURE__ */ function() {
      function WandererManager3(options) {
        _classCallCheck27(this, WandererManager3), _defineProperty30(this, "quartetChoice", (0, libram_1.get)("lastQuartetRequest") || 4), _defineProperty30(this, "unsupportedChoices", /* @__PURE__ */ new Map([
          [(0, libram_1.$location)(_templateObject2145 || (_templateObject2145 = _taggedTemplateLiteral74(["The Spooky Forest"]))), {
            502: 2,
            505: 2
          }],
          [(0, libram_1.$location)(_templateObject3131 || (_templateObject3131 = _taggedTemplateLiteral74(["Guano Junction"]))), {
            1427: 1
          }],
          [(0, libram_1.$location)(_templateObject4109 || (_templateObject4109 = _taggedTemplateLiteral74(["The Hidden Apartment Building"]))), {
            780: 6,
            1578: 6
          }],
          [(0, libram_1.$location)(_templateObject599 || (_templateObject599 = _taggedTemplateLiteral74(["The Black Forest"]))), {
            923: 1,
            924: 1
          }],
          [(0, libram_1.$location)(_templateObject658 || (_templateObject658 = _taggedTemplateLiteral74(["LavaCo\u2122 Lamp Factory"]))), {
            1091: 9
          }],
          [(0, libram_1.$location)(_templateObject754 || (_templateObject754 = _taggedTemplateLiteral74(["The Haunted Laboratory"]))), {
            884: 6
          }],
          [(0, libram_1.$location)(_templateObject847 || (_templateObject847 = _taggedTemplateLiteral74(["The Haunted Nursery"]))), {
            885: 6
          }],
          [(0, libram_1.$location)(_templateObject938 || (_templateObject938 = _taggedTemplateLiteral74(["The Haunted Storage Room"]))), {
            886: 6
          }],
          [(0, libram_1.$location)(_templateObject1034 || (_templateObject1034 = _taggedTemplateLiteral74(["The Haunted Ballroom"]))), {
            106: 3,
            90: this.quartetChoice
          }],
          [(0, libram_1.$location)(_templateObject1130 || (_templateObject1130 = _taggedTemplateLiteral74(["The Haunted Library"]))), {
            163: 4,
            888: 4,
            889: 5
          }],
          [(0, libram_1.$location)(_templateObject1229 || (_templateObject1229 = _taggedTemplateLiteral74(["The Haunted Gallery"]))), {
            89: 6,
            91: 2
          }],
          [(0, libram_1.$location)(_templateObject1327 || (_templateObject1327 = _taggedTemplateLiteral74(["The Hidden Park"]))), {
            789: 6
          }],
          [(0, libram_1.$location)(_templateObject1424 || (_templateObject1424 = _taggedTemplateLiteral74(["A Mob of Zeppelin Protesters"]))), {
            1432: 1,
            856: 2,
            857: 2,
            858: 2
          }],
          [(0, libram_1.$location)(_templateObject1522 || (_templateObject1522 = _taggedTemplateLiteral74(["A-Boo Peak"]))), {
            1430: 2
          }],
          [(0, libram_1.$location)(_templateObject1621 || (_templateObject1621 = _taggedTemplateLiteral74(["Sloppy Seconds Diner"]))), {
            919: 6
          }],
          [(0, libram_1.$location)(_templateObject1721 || (_templateObject1721 = _taggedTemplateLiteral74(["VYKEA"]))), {
            1115: 6
          }],
          [(0, libram_1.$location)(_templateObject1821 || (_templateObject1821 = _taggedTemplateLiteral74(["The Castle in the Clouds in the Sky (Basement)"]))), {
            669: 1,
            670: 4,
            671: 4
          }],
          [(0, libram_1.$location)(_templateObject1921 || (_templateObject1921 = _taggedTemplateLiteral74(["The Haunted Bedroom"]))), {
            876: 1,
            877: 1,
            878: 1,
            879: 2,
            880: 2
            // a dumb 75 meat club
          }],
          [(0, libram_1.$location)(_templateObject2021 || (_templateObject2021 = _taggedTemplateLiteral74(["The Copperhead Club"]))), {
            855: 4
          }],
          [(0, libram_1.$location)(_templateObject2146 || (_templateObject2146 = _taggedTemplateLiteral74(["The Haunted Bathroom"]))), {
            882: 2
          }],
          [(0, libram_1.$location)(_templateObject2223 || (_templateObject2223 = _taggedTemplateLiteral74(["The Castle in the Clouds in the Sky (Top Floor)"]))), {
            1431: 1,
            675: 4,
            676: 4,
            677: 1,
            678: 3
            // Go to Steampunk choice
          }],
          [(0, libram_1.$location)(_templateObject2322 || (_templateObject2322 = _taggedTemplateLiteral74(["The Castle in the Clouds in the Sky (Ground Floor)"]))), {
            672: 3,
            673: 3,
            674: 3,
            1026: 3
            // Skip
          }],
          [(0, libram_1.$location)(_templateObject2420 || (_templateObject2420 = _taggedTemplateLiteral74(["The Hidden Office Building"]))), {
            786: 6
          }],
          [(0, libram_1.$location)(_templateObject2520 || (_templateObject2520 = _taggedTemplateLiteral74(["Cobb's Knob Barracks"]))), {
            522: 2
          }],
          [(0, libram_1.$location)(_templateObject2620 || (_templateObject2620 = _taggedTemplateLiteral74(["The Penultimate Fantasy Airship"]))), {
            178: 2,
            182: 1
          }],
          [(0, libram_1.$location)(_templateObject2720 || (_templateObject2720 = _taggedTemplateLiteral74(["The Haiku Dungeon"]))), {
            297: 3
          }]
          // skip
        ])), _defineProperty30(this, "equipment", new Map([].concat(_toConsumableArray31(kolmafia_1.Location.all().filter(function(l) {
          return l.zone === "The 8-Bit Realm";
        }).map(function(l) {
          return [l, (0, libram_1.$items)(_templateObject2818 || (_templateObject2818 = _taggedTemplateLiteral74(["continuum transfunctioner"])))];
        })), [[(0, libram_1.$location)(_templateObject2917 || (_templateObject2917 = _taggedTemplateLiteral74(["Shadow Rift (The 8-Bit Realm)"]))), (0, libram_1.$items)(_templateObject3017 || (_templateObject3017 = _taggedTemplateLiteral74(["continuum transfunctioner"])))]]))), _defineProperty30(this, "cacheKey", ""), _defineProperty30(this, "targets", {}), _defineProperty30(this, "options", void 0), this.options = options;
      }
      return _createClass21(WandererManager3, [{
        key: "getTarget",
        value: function(wanderer2) {
          var _this$targets, _ref2, _this$targets$_ref, _ref = (0, lib_1.isDraggableFight)(wanderer2) ? {
            draggableFight: wanderer2,
            options: {}
          } : {
            draggableFight: wanderer2.wanderer,
            options: wanderer2
          }, draggableFight = _ref.draggableFight, options = _ref.options, _defaultWanderOptions = _objectSpread14(_objectSpread14({}, defaultWanderOptions), options), drunkSafe = _defaultWanderOptions.drunkSafe, allowEquipment = _defaultWanderOptions.allowEquipment, newKey = "".concat((0, kolmafia_1.myTotalTurnsSpent)(), ";").concat((0, kolmafia_1.totalTurnsPlayed)(), ";").concat((0, libram_1.get)("familiarSweat"));
          this.cacheKey !== newKey && this.clear(), this.cacheKey = newKey;
          var locationSkipList = allowEquipment ? [] : _toConsumableArray31(this.equipment.keys());
          return sober() || !drunkSafe ? (_this$targets$_ref = (_this$targets = this.targets)[_ref2 = "".concat(draggableFight, ":").concat(allowEquipment)]) !== null && _this$targets$_ref !== void 0 ? _this$targets$_ref : _this$targets[_ref2] = wanderWhere(this.options, draggableFight, [], locationSkipList) : (0, libram_1.$location)(_templateObject3132 || (_templateObject3132 = _taggedTemplateLiteral74(["Drunken Stupor"])));
        }
      }, {
        key: "getChoices",
        value: function(wanderer2) {
          var _this$unsupportedChoi;
          return (_this$unsupportedChoi = this.unsupportedChoices.get(this.getTarget(wanderer2))) !== null && _this$unsupportedChoi !== void 0 ? _this$unsupportedChoi : {};
        }
      }, {
        key: "clear",
        value: function() {
          this.targets = {};
        }
      }, {
        key: "getEquipment",
        value: function(wanderer2) {
          var _this$equipment$get;
          return (_this$equipment$get = this.equipment.get(this.getTarget(wanderer2))) !== null && _this$equipment$get !== void 0 ? _this$equipment$get : [];
        }
      }]), WandererManager3;
    }();
    exports.WandererManager = WandererManager2;
  }
});

// node_modules/garbo-lib/dist/index.js
var require_dist = __commonJS({
  "node_modules/garbo-lib/dist/index.js": function(exports) {
    "use strict";
    init_kolmafia_polyfill();
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.WandererManager = exports.makeValue = void 0;
    var value_1 = require_value();
    Object.defineProperty(exports, "makeValue", {
      enumerable: !0,
      get: function() {
        return value_1.makeValue;
      }
    });
    var wanderer_1 = require_wanderer();
    Object.defineProperty(exports, "WandererManager", {
      enumerable: !0,
      get: function() {
        return wanderer_1.WandererManager;
      }
    });
  }
});

// src/index.ts
var src_exports = {};
__export(src_exports, {
  default: function() {
    return main;
  }
});
module.exports = __toCommonJS(src_exports);
init_kolmafia_polyfill();

// node_modules/grimoire-kolmafia/dist/index.js
init_kolmafia_polyfill();

// node_modules/grimoire-kolmafia/dist/args.js
init_kolmafia_polyfill();
var import_kolmafia = require("kolmafia");
function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray(o, minLen);
  }
}
function _arrayLikeToArray(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
}
var Args = /* @__PURE__ */ function() {
  function Args2() {
    _classCallCheck(this, Args2);
  }
  return _createClass(Args2, null, [{
    key: "custom",
    value: function(spec, _parser, valueHelpName) {
      var _a, _b, raw_options = (_a = spec.options) === null || _a === void 0 ? void 0 : _a.map(function(option) {
        return option[0];
      });
      if ("default" in spec && raw_options && !raw_options.includes(spec.default))
        throw "Invalid default value ".concat(spec.default);
      return _objectSpread(_objectSpread({}, spec), {}, {
        valueHelpName: valueHelpName,
        parser: function(value) {
          var parsed_value = _parser(value);
          return parsed_value === void 0 || parsed_value instanceof ParseError ? parsed_value : raw_options && !raw_options.includes(parsed_value) ? new ParseError("received ".concat(value, " which was not in the allowed options")) : parsed_value;
        },
        options: (_b = spec.options) === null || _b === void 0 ? void 0 : _b.map(function(a) {
          return ["".concat(a[0]), a[1]];
        })
      });
    }
  }, {
    key: "arrayFromArg",
    value: function(spec, argFromSpec) {
      var _a, _b, _c, spec_without_default = _objectSpread({}, spec);
      "default" in spec_without_default && delete spec_without_default.default;
      var arg = argFromSpec.call(this, spec_without_default), raw_options = (_a = spec.options) === null || _a === void 0 ? void 0 : _a.map(function(option) {
        return option[0];
      });
      if ("default" in spec && raw_options) {
        var _iterator = _createForOfIteratorHelper(spec.default), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var default_entry = _step.value;
            if (!raw_options.includes(default_entry))
              throw "Invalid default value ".concat(spec.default);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      var separator = (_b = spec.separator) !== null && _b !== void 0 ? _b : ",", arrayParser = function(value) {
        var values = value.split(separator);
        spec.noTrim || (values = values.map(function(v) {
          return v.trim();
        }));
        var result = values.map(function(v) {
          return arg.parser(v);
        }), error2 = result.find(function(v) {
          return v instanceof ParseError;
        });
        if (error2)
          return error2;
        var failure_index = result.indexOf(void 0);
        return failure_index !== -1 ? new ParseError("components expected ".concat(arg.valueHelpName, " but could not parse ").concat(values[failure_index])) : result;
      };
      return _objectSpread(_objectSpread({}, spec), {}, {
        valueHelpName: "".concat(arg.valueHelpName).concat(separator, " ").concat(arg.valueHelpName).concat(separator, " ..."),
        parser: arrayParser,
        options: (_c = spec.options) === null || _c === void 0 ? void 0 : _c.map(function(a) {
          return ["".concat(a[0]), a[1]];
        })
      });
    }
  }, {
    key: "string",
    value: function(spec) {
      return this.custom(spec, function(value) {
        return value;
      }, "TEXT");
    }
  }, {
    key: "strings",
    value: function(spec) {
      return this.arrayFromArg(spec, this.string);
    }
  }, {
    key: "number",
    value: function(spec) {
      return this.custom(spec, function(value) {
        return isNaN(Number(value)) ? void 0 : Number(value);
      }, "NUMBER");
    }
  }, {
    key: "numbers",
    value: function(spec) {
      return this.arrayFromArg(spec, this.number);
    }
  }, {
    key: "boolean",
    value: function(spec) {
      return this.custom(spec, function(value) {
        if (value.toLowerCase() === "true")
          return !0;
        if (value.toLowerCase() === "false")
          return !1;
      }, "BOOLEAN");
    }
  }, {
    key: "booleans",
    value: function(spec) {
      return this.arrayFromArg(spec, this.boolean);
    }
  }, {
    key: "flag",
    value: function(spec) {
      return this.custom(spec, function(value) {
        if (value.toLowerCase() === "true")
          return !0;
        if (value.toLowerCase() === "false")
          return !1;
      }, "FLAG");
    }
  }, {
    key: "class",
    value: function(spec) {
      return this.custom(spec, function(value) {
        var match = import_kolmafia.Class.get(value);
        if (match.toString().toUpperCase() === value.toString().toUpperCase() || !isNaN(Number(value)))
          return match;
      }, "CLASS");
    }
  }, {
    key: "classes",
    value: function(spec) {
      return this.arrayFromArg(spec, this.class);
    }
  }, {
    key: "effect",
    value: function(spec) {
      return this.custom(spec, import_kolmafia.Effect.get, "EFFECT");
    }
  }, {
    key: "effects",
    value: function(spec) {
      return this.arrayFromArg(spec, this.effect);
    }
  }, {
    key: "familiar",
    value: function(spec) {
      return this.custom(spec, import_kolmafia.Familiar.get, "FAMILIAR");
    }
  }, {
    key: "familiars",
    value: function(spec) {
      return this.arrayFromArg(spec, this.familiar);
    }
  }, {
    key: "item",
    value: function(spec) {
      return this.custom(spec, import_kolmafia.Item.get, "ITEM");
    }
  }, {
    key: "items",
    value: function(spec) {
      return this.arrayFromArg(spec, this.item);
    }
  }, {
    key: "location",
    value: function(spec) {
      return this.custom(spec, import_kolmafia.Location.get, "LOCATION");
    }
  }, {
    key: "locations",
    value: function(spec) {
      return this.arrayFromArg(spec, this.location);
    }
  }, {
    key: "monster",
    value: function(spec) {
      return this.custom(spec, import_kolmafia.Monster.get, "MONSTER");
    }
  }, {
    key: "monsters",
    value: function(spec) {
      return this.arrayFromArg(spec, this.monster);
    }
  }, {
    key: "path",
    value: function(spec) {
      return this.custom(spec, import_kolmafia.Path.get, "PATH");
    }
  }, {
    key: "paths",
    value: function(spec) {
      return this.arrayFromArg(spec, this.path);
    }
  }, {
    key: "skill",
    value: function(spec) {
      return this.custom(spec, import_kolmafia.Skill.get, "SKILL");
    }
  }, {
    key: "skills",
    value: function(spec) {
      return this.arrayFromArg(spec, this.skill);
    }
    /**
     * Create a group of arguments that will be printed separately in the help.
     *
     * Note that keys in the group must still be globally distinct.
     *
     * @param groupName The display name for the group in help.
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     */
  }, {
    key: "group",
    value: function(groupName, args2) {
      return {
        name: groupName,
        args: args2
      };
    }
    /**
     * Create a set of input arguments for a script.
     * @param scriptName Prefix for property names; often the name of the script.
     * @param scriptHelp Brief description of this script, for the help message.
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     * @param options Config options for the args and arg parser.
     * @returns An object which can hold parsed argument values. The keys of this
     *    object are identical to the keys in 'args'.
     */
  }, {
    key: "create",
    value: function(scriptName, scriptHelp, args2, options) {
      var _objectSpread22;
      _traverse(args2, function(keySpec, key) {
        if (key === "help" || keySpec.key === "help")
          throw "help is a reserved argument name";
      });
      var argsWithHelp = _objectSpread(_objectSpread({}, args2), {}, {
        help: this.flag({
          help: "Show this message and exit.",
          setting: ""
        })
      }), res = _objectSpread(_objectSpread({}, _loadDefaultValues(argsWithHelp)), {}, (_objectSpread22 = {}, _defineProperty(_objectSpread22, specSymbol, argsWithHelp), _defineProperty(_objectSpread22, scriptSymbol, scriptName), _defineProperty(_objectSpread22, scriptHelpSymbol, scriptHelp), _defineProperty(_objectSpread22, optionsSymbol, options != null ? options : {}), _objectSpread22));
      if (options != null && options.positionalArgs) {
        var keys = [], metadata = Args2.getMetadata(res);
        metadata.traverse(function(keySpec, key) {
          var _a;
          keys.push((_a = keySpec.key) !== null && _a !== void 0 ? _a : key);
        });
        var _iterator2 = _createForOfIteratorHelper(options.positionalArgs), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var arg = _step2.value;
            if (!keys.includes(arg))
              throw "Unknown key for positional arg: ".concat(arg);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return res;
    }
    /**
     * Parse the command line input into the provided script arguments.
     * @param args An object to hold the parsed argument values, from Args.create(*).
     * @param command The command line input.
     * @param includeSettings If true, parse values from settings as well.
     */
  }, {
    key: "fill",
    value: function(args2, command) {
      var includeSettings = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0, _a, metadata = Args2.getMetadata(args2), keys = /* @__PURE__ */ new Set(), flags = /* @__PURE__ */ new Set();
      if (metadata.traverse(function(keySpec, key) {
        var _a2, name = (_a2 = keySpec.key) !== null && _a2 !== void 0 ? _a2 : key;
        if (flags.has(name) || keys.has(name))
          throw "Duplicate arg key ".concat(name, " is not allowed");
        keySpec.valueHelpName === "FLAG" ? flags.add(name) : keys.add(name);
      }), includeSettings && metadata.traverseAndMaybeSet(args2, function(keySpec, key) {
        var _a2, _b, setting = (_a2 = keySpec.setting) !== null && _a2 !== void 0 ? _a2 : "".concat(metadata.scriptName, "_").concat((_b = keySpec.key) !== null && _b !== void 0 ? _b : key);
        if (setting !== "") {
          var value_str = (0, import_kolmafia.getProperty)(setting);
          if (value_str !== "")
            return parseAndValidate(keySpec, "Setting ".concat(setting), value_str);
        }
      }), !(command === void 0 || command === "")) {
        var parsed = new CommandParser(command, keys, flags, (_a = metadata.options.positionalArgs) !== null && _a !== void 0 ? _a : []).parse();
        metadata.traverseAndMaybeSet(args2, function(keySpec, key) {
          var _a2, argKey = (_a2 = keySpec.key) !== null && _a2 !== void 0 ? _a2 : key, value_str = parsed.get(argKey);
          if (value_str !== void 0)
            return parseAndValidate(keySpec, "Argument ".concat(argKey), value_str);
        });
      }
    }
    /**
     * Parse command line input into a new set of script arguments.
     * @param scriptName Prefix to use in property names; typically the name of the script.
     * @param scriptHelp Brief description of this script, for the help message.
     * @param spec An object specifying the script arguments.
     * @param command The command line input.
     * @param options Config options for the args and arg parser.
     */
  }, {
    key: "parse",
    value: function(scriptName, scriptHelp, spec, command, options) {
      var args2 = this.create(scriptName, scriptHelp, spec, options);
      return this.fill(args2, command), args2;
    }
    /**
     * Print a description of the script arguments to the CLI.
     *
     * First, all top-level argument descriptions are printed in the order they
     * were defined. Afterwards, descriptions for groups of arguments are printed
     * in the order they were defined.
     *
     * @param args An object of parsed arguments, from Args.create(*).
     * @param maxOptionsToDisplay If given, do not list more than this many options for each arg.
     */
  }, {
    key: "showHelp",
    value: function(args2, maxOptionsToDisplay) {
      var _a, metadata = Args2.getMetadata(args2);
      (0, import_kolmafia.printHtml)("".concat(metadata.scriptHelp)), (0, import_kolmafia.printHtml)(""), (0, import_kolmafia.printHtml)("<b>".concat((_a = metadata.options.defaultGroupName) !== null && _a !== void 0 ? _a : "Options", ":</b>")), metadata.traverse(function(arg, key) {
        var _a2, _b, _c, _d, _e;
        if (!arg.hidden) {
          var nameText = "<font color='".concat((0, import_kolmafia.isDarkMode)() ? "yellow" : "blue", "'>").concat((_a2 = arg.key) !== null && _a2 !== void 0 ? _a2 : key, "</font>"), valueText = arg.valueHelpName === "FLAG" ? "" : "<font color='purple'>".concat(arg.valueHelpName, "</font>"), helpText = (_b = arg.help) !== null && _b !== void 0 ? _b : "", defaultText = "default" in arg ? "<font color='#888888'>[default: ".concat(arg.default, "]</font>") : "", settingText = arg.setting === "" ? "" : "<font color='#888888'>[setting: ".concat((_c = arg.setting) !== null && _c !== void 0 ? _c : "".concat(metadata.scriptName, "_").concat((_d = arg.key) !== null && _d !== void 0 ? _d : key), "]</font>");
          (0, import_kolmafia.printHtml)("&nbsp;&nbsp;".concat([nameText, valueText, "-", helpText, defaultText, settingText].join(" ")));
          var valueOptions = (_e = arg.options) !== null && _e !== void 0 ? _e : [];
          if (valueOptions.length < (maxOptionsToDisplay != null ? maxOptionsToDisplay : Number.MAX_VALUE)) {
            var _iterator3 = _createForOfIteratorHelper(valueOptions), _step3;
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                var option = _step3.value;
                option.length === 1 || option[1] === void 0 ? (0, import_kolmafia.printHtml)("&nbsp;&nbsp;&nbsp;&nbsp;<font color='blue'>".concat(nameText, "</font> ").concat(option[0])) : (0, import_kolmafia.printHtml)("&nbsp;&nbsp;&nbsp;&nbsp;<font color='blue'>".concat(nameText, "</font> ").concat(option[0], " - ").concat(option[1]));
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
          }
        }
      }, function(group) {
        (0, import_kolmafia.printHtml)(""), (0, import_kolmafia.printHtml)("<b>".concat(group.name, ":</b>"));
      });
    }
    /**
     * Load the metadata information for a set of arguments. Only for advanced usage.
     *
     * @param args A JS object specifying the script arguments. Its values should
     *    be {@link Arg} objects (created by Args.string, Args.number, or others)
     *    or groups of arguments (created by Args.group).
     * @returns A class containing metadata information.
     */
  }, {
    key: "getMetadata",
    value: function(args2) {
      return new WrappedArgMetadata(args2);
    }
  }]), Args2;
}(), ParseError = function ParseError2(message) {
  _classCallCheck(this, ParseError2), this.message = message;
}, specSymbol = Symbol("spec"), scriptSymbol = Symbol("script"), scriptHelpSymbol = Symbol("scriptHelp"), optionsSymbol = Symbol("options");
function parseAndValidate(arg, source, value) {
  var parsed_value;
  try {
    parsed_value = arg.parser(value);
  } catch (_a) {
    parsed_value = void 0;
  }
  if (parsed_value === void 0)
    throw "".concat(source, " expected ").concat(arg.valueHelpName, " but could not parse ").concat(value);
  if (parsed_value instanceof ParseError)
    throw "".concat(source, " ").concat(parsed_value.message);
  return parsed_value;
}
var WrappedArgMetadata = /* @__PURE__ */ function() {
  function WrappedArgMetadata2(args2) {
    _classCallCheck(this, WrappedArgMetadata2), this.spec = args2[specSymbol], this.scriptName = args2[scriptSymbol], this.scriptHelp = args2[scriptHelpSymbol], this.options = args2[optionsSymbol];
  }
  return _createClass(WrappedArgMetadata2, [{
    key: "loadDefaultValues",
    value: function() {
      return _loadDefaultValues(this.spec);
    }
    /**
     * Traverse the spec and possibly generate a value for each argument.
     *
     * @param result The object to hold the resulting argument values, typically
     *    the result of loadDefaultValues().
     * @param setTo A function to generate an argument value from each arg spec.
     *    If this function returns undefined, then the argument value is unchanged.
     */
  }, {
    key: "traverseAndMaybeSet",
    value: function(result, setTo) {
      return _traverseAndMaybeSet(this.spec, result, setTo);
    }
    /**
     * Traverse the spec and call a method for each argument.
     *
     * @param process A function to call at each arg spec.
     */
  }, {
    key: "traverse",
    value: function(process, onGroup) {
      return _traverse(this.spec, process, onGroup);
    }
  }]), WrappedArgMetadata2;
}();
function _loadDefaultValues(spec) {
  var result = {};
  for (var k in spec) {
    var argSpec = spec[k];
    "args" in argSpec ? result[k] = _loadDefaultValues(argSpec.args) : "default" in argSpec ? result[k] = argSpec.default : result[k] = void 0;
  }
  return result;
}
function _traverseAndMaybeSet(spec, result, setTo) {
  var groups = [];
  for (var k in spec) {
    var argSpec = spec[k];
    if ("args" in argSpec)
      groups.push([argSpec, k]);
    else {
      var value = setTo(argSpec, k);
      if (value === void 0)
        continue;
      result[k] = value;
    }
  }
  for (var _i = 0, _groups = groups; _i < _groups.length; _i++) {
    var group_and_key = _groups[_i];
    _traverseAndMaybeSet(group_and_key[0].args, result[group_and_key[1]], setTo);
  }
}
function _traverse(spec, process, onGroup) {
  var groups = [];
  for (var k in spec) {
    var argSpec = spec[k];
    "args" in argSpec ? groups.push([argSpec, k]) : process(argSpec, k);
  }
  for (var _i2 = 0, _groups2 = groups; _i2 < _groups2.length; _i2++) {
    var group_and_key = _groups2[_i2];
    onGroup == null || onGroup(group_and_key[0], group_and_key[1]), _traverse(group_and_key[0].args, process, onGroup);
  }
}
var CommandParser = /* @__PURE__ */ function() {
  function CommandParser2(command, keys, flags, positionalArgs) {
    _classCallCheck(this, CommandParser2), this.command = command, this.index = 0, this.keys = keys, this.flags = flags, this.positionalArgs = positionalArgs, this.positionalArgsParsed = 0;
  }
  return _createClass(CommandParser2, [{
    key: "parse",
    value: function() {
      var _a, _b, _c, _d;
      this.index = 0;
      for (var result = /* @__PURE__ */ new Map(); !this.finished(); ) {
        var parsing_negative_flag = !1;
        this.peek() === "!" && (parsing_negative_flag = !0, this.consume(["!"]));
        var startIndex = this.index, key = this.parseKey();
        if (result.has(key))
          throw "Duplicate key ".concat(key, " (first set to ").concat((_a = result.get(key)) !== null && _a !== void 0 ? _a : "", ")");
        if (this.flags.has(key)) {
          if (result.set(key, parsing_negative_flag ? "false" : "true"), this.peek() === "=")
            throw "Flag ".concat(key, " cannot be assigned a value");
          this.finished() || this.consume([" "]), this.prevUnquotedKey = void 0;
        } else if (this.keys.has(key)) {
          this.consume(["=", " "]);
          var value = this.parseValue();
          ["'", '"'].includes((_b = this.prev()) !== null && _b !== void 0 ? _b : "") ? this.prevUnquotedKey = void 0 : this.prevUnquotedKey = key, this.finished() || this.consume([" "]), result.set(key, value);
        } else if (this.positionalArgsParsed < this.positionalArgs.length && this.peek() !== "=") {
          var positionalKey = this.positionalArgs[this.positionalArgsParsed];
          this.positionalArgsParsed++, this.index = startIndex;
          var _value = this.parseValue();
          if (["'", '"'].includes((_c = this.prev()) !== null && _c !== void 0 ? _c : "") ? this.prevUnquotedKey = void 0 : this.prevUnquotedKey = key, this.finished() || this.consume([" "]), result.has(positionalKey))
            throw "Cannot assign ".concat(_value, " to ").concat(positionalKey, " (positionally) since ").concat(positionalKey, " was already set to ").concat((_d = result.get(positionalKey)) !== null && _d !== void 0 ? _d : "");
          result.set(positionalKey, _value);
        } else
          throw this.prevUnquotedKey && this.peek() !== "=" ? "Unknown argument: ".concat(key, " (if this should have been parsed as part of ").concat(this.prevUnquotedKey, ", you should surround the entire value in quotes)") : "Unknown argument: ".concat(key);
      }
      return result;
    }
    /**
     * @returns True if the entire command has been parsed.
     */
  }, {
    key: "finished",
    value: function() {
      return this.index >= this.command.length;
    }
    /**
     * @returns The next character to parse, if it exists.
     */
  }, {
    key: "peek",
    value: function() {
      if (!(this.index >= this.command.length))
        return this.command.charAt(this.index);
    }
    /**
     * @returns The character just parsed, if it exists.
     */
  }, {
    key: "prev",
    value: function() {
      if (!(this.index <= 0) && !(this.index >= this.command.length + 1))
        return this.command.charAt(this.index - 1);
    }
    /**
     * Advance the internal marker over the next expected character.
     * Throws an error on unexpected characters.
     *
     * @param allowed Characters that are expected.
     */
  }, {
    key: "consume",
    value: function(allowed) {
      var _a;
      if (this.finished())
        throw "Expected ".concat(allowed);
      allowed.includes((_a = this.peek()) !== null && _a !== void 0 ? _a : "") && (this.index += 1);
    }
    /**
     * Find the next occurance of one of the provided characters, or the end of
     * the string if the characters never appear again.
     *
     * @param searchValue The characters to locate.
     */
  }, {
    key: "findNext",
    value: function(searchValue) {
      var result = this.command.length, _iterator4 = _createForOfIteratorHelper(searchValue), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var value = _step4.value, index = this.command.indexOf(value, this.index);
          index !== -1 && index < result && (result = index);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return result;
    }
    /**
     * Starting from the internal marker, parse a single key.
     * This also advances the internal marker.
     *
     * @returns The next key.
     */
  }, {
    key: "parseKey",
    value: function() {
      var keyEnd = this.findNext(["=", " "]), key = this.command.substring(this.index, keyEnd);
      return this.index = keyEnd, key;
    }
    /**
     * Starting from the internal marker, parse a single value.
     * This also advances the internal marker.
     *
     * Values are a single word or enclosed in matching quotes, i.e. one of:
     *    "[^"]*"
     *    '[^']*"
     *    [^'"][^ ]*
     *
     * @returns The next value.
     */
  }, {
    key: "parseValue",
    value: function() {
      var _a, _b, valueEnder = " ", quotes = ["'", '"'];
      quotes.includes((_a = this.peek()) !== null && _a !== void 0 ? _a : "") && (valueEnder = (_b = this.peek()) !== null && _b !== void 0 ? _b : "", this.consume([valueEnder]));
      var valueEnd = this.findNext([valueEnder]), value = this.command.substring(this.index, valueEnd);
      if (valueEnder !== " " && valueEnd === this.command.length)
        throw "No closing ".concat(valueEnder, " found for ").concat(valueEnder).concat(value);
      return this.index = valueEnd, valueEnder !== " " && this.consume([valueEnder]), value;
    }
  }]), CommandParser2;
}();

// node_modules/grimoire-kolmafia/dist/combat.js
init_kolmafia_polyfill();
var import_kolmafia71 = require("kolmafia");
init_dist();
function _inherits7(subClass, superClass) {
  if (typeof superClass != "function" && superClass !== null)
    throw new TypeError("Super expression must either be null or a function");
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf7(subClass, superClass);
}
function _setPrototypeOf7(o, p) {
  return _setPrototypeOf7 = Object.setPrototypeOf || function(o2, p2) {
    return o2.__proto__ = p2, o2;
  }, _setPrototypeOf7(o, p);
}
function _createSuper6(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct6();
  return function() {
    var Super = _getPrototypeOf6(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf6(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else
      result = Super.apply(this, arguments);
    return _possibleConstructorReturn6(this, result);
  };
}
function _possibleConstructorReturn6(self, call) {
  if (call && (typeof call == "object" || typeof call == "function"))
    return call;
  if (call !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized6(self);
}
function _assertThisInitialized6(self) {
  if (self === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return self;
}
function _isNativeReflectConstruct6() {
  if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch (e) {
    return !1;
  }
}
function _getPrototypeOf6(o) {
  return _getPrototypeOf6 = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  }, _getPrototypeOf6(o);
}
function _toConsumableArray20(arr) {
  return _arrayWithoutHoles20(arr) || _iterableToArray20(arr) || _unsupportedIterableToArray38(arr) || _nonIterableSpread20();
}
function _nonIterableSpread20() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray20(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles20(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray38(arr);
}
function _createForOfIteratorHelper19(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray38(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray38(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray38(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray38(o, minLen);
  }
}
function _arrayLikeToArray38(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck22(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties16(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass16(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties16(Constructor.prototype, protoProps), staticProps && _defineProperties16(Constructor, staticProps), Constructor;
}
var CombatStrategy = /* @__PURE__ */ function() {
  function CombatStrategy2() {
    _classCallCheck22(this, CombatStrategy2), this.macros = /* @__PURE__ */ new Map(), this.autoattacks = /* @__PURE__ */ new Map(), this.actions = /* @__PURE__ */ new Map(), this.ccs_entries = /* @__PURE__ */ new Map();
  }
  return _createClass16(CombatStrategy2, [{
    key: "macro",
    value: function(_macro, monsters, prepend) {
      var _a, _b;
      if (monsters === void 0)
        this.default_macro === void 0 && (this.default_macro = []), prepend ? this.default_macro.unshift(_macro) : this.default_macro.push(_macro);
      else {
        monsters instanceof import_kolmafia71.Monster && (monsters = [monsters]);
        var _iterator = _createForOfIteratorHelper19(monsters), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var monster = _step.value;
            this.macros.has(monster) || this.macros.set(monster, []), prepend ? (_a = this.macros.get(monster)) === null || _a === void 0 || _a.unshift(_macro) : (_b = this.macros.get(monster)) === null || _b === void 0 || _b.push(_macro);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      return this;
    }
    /**
     * Add a macro to perform as an autoattack for this monster. If multiple
     * macros are given for the same monster, they are concatinated.
     *
     * @param macro The macro to perform as autoattack.
     * @param monsters Which monsters to use the macro on. If not given, add the
     *  macro as a general macro.
     * @param prepend If true, add the macro before all previous autoattack
     *    macros for the same monster. If false, add after all previous macros.
     * @returns this
     */
  }, {
    key: "autoattack",
    value: function(macro, monsters, prepend) {
      var _a, _b;
      if (monsters === void 0)
        this.default_autoattack === void 0 && (this.default_autoattack = []), prepend ? this.default_autoattack.unshift(macro) : this.default_autoattack.push(macro);
      else {
        monsters instanceof import_kolmafia71.Monster && (monsters = [monsters]);
        var _iterator2 = _createForOfIteratorHelper19(monsters), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var monster = _step2.value;
            this.autoattacks.has(monster) || this.autoattacks.set(monster, []), prepend ? (_a = this.autoattacks.get(monster)) === null || _a === void 0 || _a.unshift(macro) : (_b = this.autoattacks.get(monster)) === null || _b === void 0 || _b.push(macro);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return this;
    }
    /**
     * Add a macro to perform at the start of combat.
     * @param macro The macro to perform.
     * @param prepend If true, add the macro before all previous starting
     *    macros. If false, add after all previous starting macros.
     * @returns this
     */
  }, {
    key: "startingMacro",
    value: function(macro, prepend) {
      return this.starting_macro === void 0 && (this.starting_macro = []), prepend ? this.starting_macro.unshift(macro) : this.starting_macro.push(macro), this;
    }
    /**
     * Add an action to perform for this monster. Only one action can be set for
     * each monster; any previous actions are overwritten.
     *
     * @param action The action to perform.
     * @param monsters Which monsters to use the action on. If not given, set the
     *  action as the general action for all monsters.
     * @returns this
     */
  }, {
    key: "action",
    value: function(_action, monsters) {
      if (monsters === void 0)
        this.default_action = _action;
      else if (monsters instanceof import_kolmafia71.Monster)
        this.actions.set(monsters, _action);
      else {
        var _iterator3 = _createForOfIteratorHelper19(monsters), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var monster = _step3.value;
            this.actions.set(monster, _action);
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }
      return this;
    }
    /**
     * Add a separate entry in the grimoire-generated CCS file for the specified
     * monster. If multiple entries are given for the same monster, they are
     * concatinated.
     *
     * This should typically be only used rarely, on monsters for which KoL does
     * not support macros in combat (e.g. rampaging adding machine).
     *
     * @param entry The entry to add for the given monster.
     * @param monsters Which monsters to add the entry to.
     * @param prepend If true, add the entry before all previous entries. If
     *   false, add after all previous entries.
     */
  }, {
    key: "ccs",
    value: function(entry, monsters, prepend) {
      var _a, _b;
      monsters instanceof import_kolmafia71.Monster && (monsters = [monsters]);
      var _iterator4 = _createForOfIteratorHelper19(monsters), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var monster = _step4.value;
          this.ccs_entries.has(monster) || this.ccs_entries.set(monster, []), prepend ? (_a = this.ccs_entries.get(monster)) === null || _a === void 0 || _a.unshift(entry) : (_b = this.ccs_entries.get(monster)) === null || _b === void 0 || _b.push(entry);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return this;
    }
    /**
     * Check if the provided action was requested for any monsters, or for the
     * general action.
     */
  }, {
    key: "can",
    value: function(action) {
      return action === this.default_action ? !0 : Array.from(this.actions.values()).includes(action);
    }
    /**
     * Return the general action (if it exists).
     */
  }, {
    key: "getDefaultAction",
    value: function() {
      return this.default_action;
    }
    /**
     * Return all monsters where the provided action was requested.
     */
  }, {
    key: "where",
    value: function(action) {
      var _this = this;
      return Array.from(this.actions.keys()).filter(function(key) {
        return _this.actions.get(key) === action;
      });
    }
    /**
     * Return the requested action (if it exists) for the provided monster.
     */
  }, {
    key: "currentStrategy",
    value: function(monster) {
      var _a;
      return (_a = this.actions.get(monster)) !== null && _a !== void 0 ? _a : this.default_action;
    }
    /**
     * Perform a deep copy of this combat strategy.
     */
  }, {
    key: "clone",
    value: function() {
      var result = new CombatStrategy2();
      this.starting_macro && (result.starting_macro = _toConsumableArray20(this.starting_macro)), this.default_macro && (result.default_macro = _toConsumableArray20(this.default_macro));
      var _iterator5 = _createForOfIteratorHelper19(this.macros), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var pair = _step5.value;
          result.macros.set(pair[0], _toConsumableArray20(pair[1]));
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      this.default_autoattack && (result.default_autoattack = _toConsumableArray20(this.default_autoattack));
      var _iterator6 = _createForOfIteratorHelper19(this.autoattacks), _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
          var _pair = _step6.value;
          result.autoattacks.set(_pair[0], _toConsumableArray20(_pair[1]));
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      result.default_action = this.default_action;
      var _iterator7 = _createForOfIteratorHelper19(this.actions), _step7;
      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
          var _pair2 = _step7.value;
          result.actions.set(_pair2[0], _pair2[1]);
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      var _iterator8 = _createForOfIteratorHelper19(this.ccs_entries), _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
          var _pair3 = _step8.value;
          result.ccs_entries.set(_pair3[0], _toConsumableArray20(_pair3[1]));
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
      return result;
    }
    /**
     * Compile this combat strategy into a complete macro.
     *
     * @param resources The resources to use to fulfil actions.
     * @param defaults Macros to perform for each action without a resource.
     * @param location The adventuring location, if known.
     * @returns The compiled macro.
     */
  }, {
    key: "compile",
    value: function(resources, defaults, location) {
      var _a, _b, result = new Macro();
      this.starting_macro && result.step.apply(result, _toConsumableArray20(this.starting_macro.map(undelay)));
      var monster_macros = new CompressedMacro();
      this.macros.forEach(function(value, key) {
        var _Macro;
        monster_macros.add(key, (_Macro = new Macro()).step.apply(_Macro, _toConsumableArray20(value.map(undelay))));
      }), result.step(monster_macros.compile()), this.default_macro && result.step.apply(result, _toConsumableArray20(this.default_macro.map(undelay)));
      var monster_actions = new CompressedMacro();
      if (this.actions.forEach(function(action, key) {
        var _a2, _b2, macro2 = (_a2 = resources.getMacro(action)) !== null && _a2 !== void 0 ? _a2 : (_b2 = defaults == null ? void 0 : defaults[action]) === null || _b2 === void 0 ? void 0 : _b2.call(defaults, key);
        macro2 && monster_actions.add(key, new Macro().step(macro2));
      }), result.step(monster_actions.compile()), this.default_action) {
        var macro = (_a = resources.getMacro(this.default_action)) !== null && _a !== void 0 ? _a : (_b = defaults == null ? void 0 : defaults[this.default_action]) === null || _b === void 0 ? void 0 : _b.call(defaults, location);
        macro && result.step(macro);
      }
      return result;
    }
    /**
     * Compile the autoattack of this combat strategy into a complete macro.
     *
     * @returns The compiled autoattack macro.
     */
  }, {
    key: "compileAutoattack",
    value: function() {
      var result = new Macro(), monster_macros = new CompressedMacro();
      return this.autoattacks.forEach(function(value, key) {
        var _Macro2;
        monster_macros.add(key, (_Macro2 = new Macro()).step.apply(_Macro2, _toConsumableArray20(value.map(undelay))));
      }), result.step(monster_macros.compile()), this.default_autoattack && result.step.apply(result, _toConsumableArray20(this.default_autoattack.map(undelay))), result;
    }
    /**
     * Compile the CCS entries of this combat strategy into a single array.
     *
     * @returns The lines of a CCS file, not including the [default] macro.
     */
  }, {
    key: "compileCcs",
    value: function() {
      var result = [], _iterator9 = _createForOfIteratorHelper19(this.ccs_entries), _step9;
      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
          var ccs_entry = _step9.value;
          result.push.apply(result, ["[".concat(ccs_entry[0].name, "]")].concat(_toConsumableArray20(ccs_entry[1])));
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
      return result;
    }
    /**
     * For advanced users, this method will generate a fluent API for requesting
     * actions. That is, it allows you to do
     *   combat.banish(monster1).kill(monster2)
     * instead of
     *   combat.action("banish", monster1).action("kill", monster2)
     *
     * Example usage:
     *   const myActions = ["kill", "banish"] as const;
     *   class MyCombatStrategy extends CombatStrategy.withActions(myActions) {}
     *
     *   const foo: MyCombatStrategy = new MyCombatStrategy();
     *   const bar: MyCombatStrategy = foo.banish($monster`crate`).kill($monster`tumbleweed`);
     */
  }], [{
    key: "withActions",
    value: function(actions) {
      var CombatStrategyWithActions = /* @__PURE__ */ function(_this) {
        _inherits7(CombatStrategyWithActions2, _this);
        var _super = _createSuper6(CombatStrategyWithActions2);
        function CombatStrategyWithActions2() {
          return _classCallCheck22(this, CombatStrategyWithActions2), _super.apply(this, arguments);
        }
        return CombatStrategyWithActions2;
      }(this), proto = CombatStrategyWithActions.prototype, _iterator10 = _createForOfIteratorHelper19(actions), _step10;
      try {
        var _loop = function() {
          var action = _step10.value;
          proto[action] = function(monsters) {
            return this.action(action, monsters);
          };
        };
        for (_iterator10.s(); !(_step10 = _iterator10.n()).done; )
          _loop();
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }
      return CombatStrategyWithActions;
    }
  }]), CombatStrategy2;
}(), CompressedMacro = /* @__PURE__ */ function() {
  function CompressedMacro2() {
    _classCallCheck22(this, CompressedMacro2), this.components = /* @__PURE__ */ new Map();
  }
  return _createClass16(CompressedMacro2, [{
    key: "add",
    value: function(monster, macro) {
      var _a, macro_text = macro.toString();
      macro_text.length !== 0 && (this.components.has(macro_text) ? (_a = this.components.get(macro_text)) === null || _a === void 0 || _a.push(monster) : this.components.set(macro_text, [monster]));
    }
    /**
     * Compile the compressed form of the macro.
     */
  }, {
    key: "compile",
    value: function() {
      var result = new Macro();
      return this.components.forEach(function(monsters, macro) {
        var condition = monsters.map(function(mon) {
          return "monsterid ".concat(mon.id);
        }).join(" || ");
        result.if_(condition, macro);
      }), result;
    }
  }]), CompressedMacro2;
}(), CombatResources = /* @__PURE__ */ function() {
  function CombatResources2() {
    _classCallCheck22(this, CombatResources2), this.resources = /* @__PURE__ */ new Map();
  }
  return _createClass16(CombatResources2, [{
    key: "provide",
    value: function(action, resource) {
      resource !== void 0 && this.resources.set(action, resource);
    }
    /**
     * Return true if the provided action has a resource provided.
     */
  }, {
    key: "has",
    value: function(action) {
      return this.resources.has(action);
    }
    /**
     * Return all provided combat resources.
     */
  }, {
    key: "all",
    value: function() {
      return Array.from(this.resources.values());
    }
    /**
     * Get the macro provided by the resource for this action, or undefined if
     * no resource was provided.
     */
  }, {
    key: "getMacro",
    value: function(action) {
      var resource = this.resources.get(action);
      if (resource !== void 0)
        return resource.do instanceof import_kolmafia71.Item ? new Macro().item(resource.do) : resource.do instanceof import_kolmafia71.Skill ? new Macro().skill(resource.do) : undelay(resource.do);
    }
  }]), CombatResources2;
}();

// node_modules/grimoire-kolmafia/dist/engine.js
init_kolmafia_polyfill();
init_dist();
var import_kolmafia73 = require("kolmafia");

// node_modules/grimoire-kolmafia/dist/outfit.js
init_kolmafia_polyfill();
var import_kolmafia72 = require("kolmafia");
init_dist();
var _templateObject501, _templateObject2131, _templateObject3118, _templateObject4102, _templateObject561, _templateObject649, _templateObject745, _templateObject838, _templateObject931, _templateObject1028, _templateObject1124, _templateObject1223, _templateObject1321, _templateObject1418, _templateObject1516, _templateObject1616, _templateObject1716, _templateObject1816, _templateObject1916, _templateObject2016, _templateObject2132, _templateObject2218, _templateObject2317, _templateObject2415, _templateObject2515, _templateObject2615, _templateObject2715, _templateObject2813, _templateObject2912, _templateObject3012, _templateObject3119, _templateObject3214, _templateObject3314, _templateObject3411, _templateObject3511, _templateObject3611, _templateObject3711, _templateObject3811, _templateObject3911, _templateObject4011, _templateObject4113, _templateObject4212, _templateObject4312, _templateObject4411, _templateObject4511, _templateObject4611, _templateObject4711, _templateObject4811, _templateObject4910, _templateObject507, _templateObject5112, _templateObject5211, _templateObject5311, _templateObject5411, _templateObject5510, _templateObject566, _templateObject576, _templateObject586, _templateObject595, _templateObject605, _templateObject6111;
function ownKeys10(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread10(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys10(Object(source), !0).forEach(function(key) {
      _defineProperty25(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys10(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty25(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _slicedToArray22(arr, i) {
  return _arrayWithHoles22(arr) || _iterableToArrayLimit22(arr, i) || _unsupportedIterableToArray39(arr, i) || _nonIterableRest22();
}
function _nonIterableRest22() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit22(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles22(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper20(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray39(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _taggedTemplateLiteral62(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray21(arr) {
  return _arrayWithoutHoles21(arr) || _iterableToArray21(arr) || _unsupportedIterableToArray39(arr) || _nonIterableSpread21();
}
function _nonIterableSpread21() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray39(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray39(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray39(o, minLen);
  }
}
function _iterableToArray21(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles21(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray39(arr);
}
function _arrayLikeToArray39(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck23(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties17(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass17(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties17(Constructor.prototype, protoProps), staticProps && _defineProperties17(Constructor, staticProps), Constructor;
}
var FORCE_REFRESH_REQUIREMENT = new Requirement([], {
  forceUpdate: !0
}), outfitSlots = ["hat", "back", "weapon", "offhand", "shirt", "pants", "acc1", "acc2", "acc3", "famequip"];
var weaponHands = function(i) {
  return i ? (0, import_kolmafia72.weaponHands)(i) : 0;
}, modeableCommands2 = ["backupcamera", "umbrella", "snowsuit", "edpiece", "retrocape", "parka"], Outfit = /* @__PURE__ */ function() {
  function Outfit2() {
    _classCallCheck23(this, Outfit2), this.equips = /* @__PURE__ */ new Map(), this.riders = /* @__PURE__ */ new Map(), this.modes = {}, this.skipDefaults = !1, this.modifier = [], this.avoid = [], this.bonuses = /* @__PURE__ */ new Map(), this.postActions = [], this.preActions = [];
  }
  return _createClass17(Outfit2, [{
    key: "equippedAmount",
    value: (
      /**
       * Check how many of an item is equipped on the outfit.
       */
      function(item10) {
        return _toConsumableArray21(this.equips.values()).filter(function(i) {
          return i === item10;
        }).length;
      }
    )
  }, {
    key: "isAvailable",
    value: function(item10) {
      var _a;
      return !(!((_a = this.avoid) === null || _a === void 0) && _a.includes(item10) || !have(item10, this.equippedAmount(item10) + 1) || (0, import_kolmafia72.booleanModifier)(item10, "Single Equip") && this.equippedAmount(item10) > 0);
    }
    /**
     * Check whether an item is equipped on the outfit, optionally in a specific slot.
     */
  }, {
    key: "haveEquipped",
    value: function(item10, slot) {
      return slot === void 0 ? this.equippedAmount(item10) > 0 : this.equips.get(slot) === item10;
    }
  }, {
    key: "equipItemNone",
    value: function(item10, slot) {
      return item10 !== $item.none ? !1 : slot === void 0 ? !0 : this.equips.has(slot) ? !1 : (this.equips.set(slot, item10), !0);
    }
  }, {
    key: "equipNonAccessory",
    value: function(item10, slot) {
      if ($slots(_templateObject501 || (_templateObject501 = _taggedTemplateLiteral62(["acc1, acc2, acc3"]))).includes((0, import_kolmafia72.toSlot)(item10)) || slot !== void 0 && slot !== (0, import_kolmafia72.toSlot)(item10) || this.equips.has((0, import_kolmafia72.toSlot)(item10)))
        return !1;
      switch ((0, import_kolmafia72.toSlot)(item10)) {
        case $slot(_templateObject2131 || (_templateObject2131 = _taggedTemplateLiteral62(["off-hand"]))):
          if (this.equips.has($slot(_templateObject3118 || (_templateObject3118 = _taggedTemplateLiteral62(["weapon"])))) && weaponHands(this.equips.get($slot(_templateObject4102 || (_templateObject4102 = _taggedTemplateLiteral62(["weapon"]))))) !== 1)
            return !1;
          break;
        case $slot(_templateObject561 || (_templateObject561 = _taggedTemplateLiteral62(["familiar"]))):
          if (this.familiar !== void 0 && !(0, import_kolmafia72.canEquip)(this.familiar, item10))
            return !1;
      }
      return (0, import_kolmafia72.toSlot)(item10) !== $slot(_templateObject649 || (_templateObject649 = _taggedTemplateLiteral62(["familiar"]))) && !(0, import_kolmafia72.canEquip)(item10) ? !1 : (this.equips.set((0, import_kolmafia72.toSlot)(item10), item10), !0);
    }
  }, {
    key: "equipAccessory",
    value: function(item10, slot) {
      var _this = this;
      if (![void 0].concat(_toConsumableArray21($slots(_templateObject745 || (_templateObject745 = _taggedTemplateLiteral62(["acc1, acc2, acc3"]))))).includes(slot) || (0, import_kolmafia72.toSlot)(item10) !== $slot(_templateObject838 || (_templateObject838 = _taggedTemplateLiteral62(["acc1"]))) || !(0, import_kolmafia72.canEquip)(item10))
        return !1;
      if (slot === void 0) {
        var empty = $slots(_templateObject931 || (_templateObject931 = _taggedTemplateLiteral62(["acc1, acc2, acc3"]))).find(function(s) {
          return !_this.equips.has(s);
        });
        if (empty === void 0)
          return !1;
        this.equips.set(empty, item10);
      } else {
        if (this.equips.has(slot))
          return !1;
        this.equips.set(slot, item10);
      }
      return !0;
    }
  }, {
    key: "equipUsingDualWield",
    value: function(item10, slot) {
      return ![void 0, $slot(_templateObject1028 || (_templateObject1028 = _taggedTemplateLiteral62(["off-hand"])))].includes(slot) || (0, import_kolmafia72.toSlot)(item10) !== $slot(_templateObject1124 || (_templateObject1124 = _taggedTemplateLiteral62(["weapon"]))) || this.equips.has($slot(_templateObject1223 || (_templateObject1223 = _taggedTemplateLiteral62(["weapon"])))) && weaponHands(this.equips.get($slot(_templateObject1321 || (_templateObject1321 = _taggedTemplateLiteral62(["weapon"]))))) !== 1 || this.equips.has($slot(_templateObject1418 || (_templateObject1418 = _taggedTemplateLiteral62(["off-hand"])))) || !have($skill(_templateObject1516 || (_templateObject1516 = _taggedTemplateLiteral62(["Double-Fisted Skull Smashing"])))) || weaponHands(item10) !== 1 || !(0, import_kolmafia72.canEquip)(item10) ? !1 : (this.equips.set($slot(_templateObject1616 || (_templateObject1616 = _taggedTemplateLiteral62(["off-hand"]))), item10), !0);
    }
  }, {
    key: "getHoldingFamiliar",
    value: function(item10) {
      switch ((0, import_kolmafia72.toSlot)(item10)) {
        case $slot(_templateObject1716 || (_templateObject1716 = _taggedTemplateLiteral62(["weapon"]))):
          return $familiar(_templateObject1816 || (_templateObject1816 = _taggedTemplateLiteral62(["Disembodied Hand"])));
        case $slot(_templateObject1916 || (_templateObject1916 = _taggedTemplateLiteral62(["off-hand"]))):
          return $familiar(_templateObject2016 || (_templateObject2016 = _taggedTemplateLiteral62(["Left-Hand Man"])));
        default:
          return;
      }
    }
    /**
     * Returns the bonus value associated with a given item.
     *
     * @param item The item to check the bonus of.
     * @returns The bonus assigned to that item.
     */
  }, {
    key: "getBonus",
    value: function(item10) {
      var _a;
      return (_a = this.bonuses.get(item10)) !== null && _a !== void 0 ? _a : 0;
    }
    /**
     * Applies a value to any existing bonus this item has, using a rule assigned by the `reducer` parameter
     *
     * @param item The item to try to apply a bonus to.
     * @param value The value to try to apply.
     * @param reducer Function that combines new and current bonus
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "applyBonus",
    value: function(item10, value, reducer) {
      var previous = this.getBonus(item10);
      return this.setBonus(item10, reducer(value, previous));
    }
    /**
     * Sets the bonus value of an item equal to a given value, overriding any current bonus assigned.
     *
     * @param item The item to try to apply a bonus to.
     * @param value The value to try to apply.
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "setBonus",
    value: function(item10, value) {
      return this.bonuses.set(item10, value), value;
    }
    /**
     * Adds a value to any existing bonus this item has
     *
     * @param item The item to try to add a bonus to.
     * @param value The value to try to add.
     * @returns The total assigned bonus to that item.
     */
  }, {
    key: "addBonus",
    value: function(item10, value) {
      return this.applyBonus(item10, value, function(a, b) {
        return a + b;
      });
    }
    /**
     * Apply the given items' bonuses to the outfit, using a rule given by the reducer
     *
     * @param items A map containing items and their bonuses
     * @param reducer A way of combining new bonuses with existing bonuses
     */
  }, {
    key: "applyBonuses",
    value: function(items, reducer) {
      var _iterator = _createForOfIteratorHelper20(items), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var _step$value = _slicedToArray22(_step.value, 2), item10 = _step$value[0], value = _step$value[1];
          this.applyBonus(item10, value, reducer);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
     * Sets the bonuses of the given items, overriding existing bonuses
     *
     * @param items Map containing items and bonuses
     */
  }, {
    key: "setBonuses",
    value: function(items) {
      this.applyBonuses(items, function(a) {
        return a;
      });
    }
    /**
     * Adds the bonuses of the given items to any existing bonuses they ahave
     *
     * @param items Map containing items and bonuses
     */
  }, {
    key: "addBonuses",
    value: function(items) {
      this.applyBonuses(items, function(a, b) {
        return a + b;
      });
    }
  }, {
    key: "equipUsingFamiliar",
    value: function(item10, slot) {
      if (![void 0, $slot(_templateObject2132 || (_templateObject2132 = _taggedTemplateLiteral62(["familiar"])))].includes(slot) || this.equips.has($slot(_templateObject2218 || (_templateObject2218 = _taggedTemplateLiteral62(["familiar"])))) || (0, import_kolmafia72.booleanModifier)(item10, "Single Equip"))
        return !1;
      var familiar7 = this.getHoldingFamiliar(item10);
      return familiar7 === void 0 || !this.equip(familiar7) ? !1 : (this.equips.set($slot(_templateObject2317 || (_templateObject2317 = _taggedTemplateLiteral62(["familiar"]))), item10), !0);
    }
  }, {
    key: "equipItem",
    value: function(item10, slot) {
      return this.haveEquipped(item10, slot) || this.equipItemNone(item10, slot) || this.isAvailable(item10) && (this.equipNonAccessory(item10, slot) || this.equipAccessory(item10, slot) || this.equipUsingDualWield(item10, slot) || this.equipUsingFamiliar(item10, slot));
    }
  }, {
    key: "equipFamiliar",
    value: function(familiar7) {
      if (familiar7 === this.familiar)
        return !0;
      if (this.familiar !== void 0 || familiar7 !== $familiar.none && (!have(familiar7) || Array.from(this.riders.values()).includes(familiar7)))
        return !1;
      var item10 = this.equips.get($slot(_templateObject2415 || (_templateObject2415 = _taggedTemplateLiteral62(["familiar"]))));
      return item10 !== void 0 && item10 !== $item.none && !(0, import_kolmafia72.canEquip)(familiar7, item10) ? !1 : (this.familiar = familiar7, !0);
    }
  }, {
    key: "equipSpec",
    value: function(spec) {
      var _this$avoid, _a, _b, _c, _d, _e, _f, succeeded = !0, _iterator2 = _createForOfIteratorHelper20(outfitSlots), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var slotName = _step2.value, slot = (_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject2515 || (_templateObject2515 = _taggedTemplateLiteral62(["familiar"])))], ["offhand", $slot(_templateObject2615 || (_templateObject2615 = _taggedTemplateLiteral62(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia72.toSlot)(slotName), itemOrItems = spec[slotName];
          itemOrItems !== void 0 && !this.equip(itemOrItems, slot) && (succeeded = !1);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      var _iterator3 = _createForOfIteratorHelper20((_b = spec == null ? void 0 : spec.equip) !== null && _b !== void 0 ? _b : []), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var item10 = _step3.value;
          this.equip(item10) || (succeeded = !1);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      if ((spec == null ? void 0 : spec.familiar) !== void 0 && (this.equip(spec.familiar) || (succeeded = !1)), (_this$avoid = this.avoid).push.apply(_this$avoid, _toConsumableArray21((_c = spec == null ? void 0 : spec.avoid) !== null && _c !== void 0 ? _c : [])), this.skipDefaults = this.skipDefaults || ((_d = spec.skipDefaults) !== null && _d !== void 0 ? _d : !1), spec.modifier) {
        var _this$modifier;
        Array.isArray(spec.modifier) ? (_this$modifier = this.modifier).push.apply(_this$modifier, _toConsumableArray21(spec.modifier)) : this.modifier.push(spec.modifier);
      }
      return spec.modes && (this.setModes(spec.modes) || (succeeded = !1)), spec.riders && (spec.riders["buddy-bjorn"] && !this.bjornify(spec.riders["buddy-bjorn"]) && (succeeded = !1), spec.riders["crown-of-thrones"] && !this.enthrone(spec.riders["crown-of-thrones"]) && (succeeded = !1)), spec.bonuses && this.addBonuses(spec.bonuses), this.beforeDress.apply(this, _toConsumableArray21((_e = spec.beforeDress) !== null && _e !== void 0 ? _e : [])), this.afterDress.apply(this, _toConsumableArray21((_f = spec.afterDress) !== null && _f !== void 0 ? _f : [])), succeeded;
    }
    /**
     * Equip the first thing that can be equipped to the outfit.
     *
     * @param things The things to equip.
     * @param slot The slot to equip them.
     * @returns True if one of the things is equipped, and false otherwise.
     */
  }, {
    key: "equipFirst",
    value: function(things, slot) {
      var _this = this;
      return things.length === 0 ? !0 : things.some(function(val) {
        return _this.equip(val, slot);
      });
    }
    /**
     * Equip a thing to the outfit.
     *
     * If no slot is given, then the thing will be equipped wherever possible
     * (possibly using dual-wielding, any of the accessory slots, or as
     * familiar equipment). If it is impossible to add this thing anywhere to
     * the outfit, this function will return false.
     *
     * If a slot is given, the item will be equipped only in that slot. If the
     * slot is filled with a different item, this function will return false.
     *
     * If the thing is already equipped in the provided slot, or if no slot is
     * given and the thing is already equipped in any slot, this function will
     * return true and not change the outfit.
     *
     * @param thing The thing or things to equip.
     * @param slot The slot to equip them.
     * @returns True if the thing was sucessfully equipped, and false otherwise.
     */
  }, {
    key: "equip",
    value: function(thing, slot) {
      var _this = this;
      return Array.isArray(thing) ? slot !== void 0 ? this.equipFirst(thing, slot) : thing.every(function(val) {
        return _this.equip(val);
      }) : thing instanceof import_kolmafia72.Item ? this.equipItem(thing, slot) : thing instanceof import_kolmafia72.Familiar ? this.equipFamiliar(thing) : thing instanceof Outfit2 ? this.equipSpec(thing.spec()) : this.equipSpec(thing);
    }
  }, {
    key: "equipRider",
    value: (
      /**
       * Add a rider to the outfit.
       *
       * This function does *not* equip the corresponding item; it must be equipped separately.
       *
       * If a familiar is already specified as the rider that is different from the provided target, this function will return false and not change the rider.
       * @param target The familiar to use as the rider, or a ranked list of familiars to try to use as the rider.
       * @returns True if we successfully set the slot to a valid rider.
       */
      function(target, slot) {
        var _this = this;
        var current2 = this.riders.get(slot), targets = Array.isArray(target) ? target : [target];
        if (current2)
          return targets.includes(current2);
        var otherRiders = _toConsumableArray21(this.riders.entries()).filter(function(_ref) {
          var _ref2 = _slicedToArray22(_ref, 1), key = _ref2[0];
          return slot !== key;
        }).map(function(_ref3) {
          var _ref4 = _slicedToArray22(_ref3, 2), value = _ref4[1];
          return value;
        }), fam = targets.find(function(f) {
          return have(f) && _this.familiar !== f && !otherRiders.includes(f);
        });
        return fam ? (this.riders.set(slot, fam), !0) : !1;
      }
    )
    /**
     * Add a bjornified familiar to the outfit.
     *
     * This function does *not* equip the buddy bjorn itself; it must be equipped separately.
     *
     * If a familiar is already specified for the buddy bjorn that is different from the provided target, this function will return false and not change the buddy bjorn.
     * @param target The familiar to bjornify, or a ranked list of familiars to try to bjornify.
     * @returns True if we successfully set the bjorn to a valid target.
     */
  }, {
    key: "bjornify",
    value: function(target) {
      return this.equipRider(target, $slot(_templateObject2715 || (_templateObject2715 = _taggedTemplateLiteral62(["buddy-bjorn"]))));
    }
    /**
     * Add anenthroned familiar to the outfit.
     *
     * This function does *not* equip the crown of thrones itself; it must be equipped separately.
     *
     * If a familiar is already specified for the crown of thrones that is different from the provided target, this function will return false and not change the crown of thrones.
     * @param target The familiar to enthrone, or a ranked list of familiars to try to enthrone.
     * @returns True if we successfully set the enthrone to a valid target.
     */
  }, {
    key: "enthrone",
    value: function(target) {
      return this.equipRider(target, $slot(_templateObject2813 || (_templateObject2813 = _taggedTemplateLiteral62(["crown-of-thrones"]))));
    }
    /**
     * Set the provided modes for items that may be equipped in the outfit.
     *
     * This function does *not* equip items for the set modes; they must be
     * equipped separately.
     *
     * If a mode is already set for an item that is different from the provided
     * mode, this function will return false and not change the mode for that
     * item. (But other modes might still be changed if they are compatible.)
     *
     * Note that the superhero and instuctions of a retrocape can be set
     * independently (`undefined` is treated as "don't care").
     *
     * @param modes Modes to set in this outfit.
     * @returns True if all modes were sucessfully set, and false otherwise.
     */
  }, {
    key: "setModes",
    value: function(modes) {
      var _a, _b, compatible = !0, _iterator4 = _createForOfIteratorHelper20(modeableCommands2), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var mode = _step4.value;
          mode !== "retrocape" && this.modes[mode] && modes[mode] && this.modes[mode] !== modes[mode] && (compatible = !1);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return this.modes.retrocape && modes.retrocape && (this.modes.retrocape[0] && modes.retrocape[0] && this.modes.retrocape[0] !== modes.retrocape[0] && (compatible = !1), this.modes.retrocape[1] && modes.retrocape[1] && this.modes.retrocape[1] !== modes.retrocape[1] && (compatible = !1), this.modes.retrocape[0] = (_a = this.modes.retrocape[0]) !== null && _a !== void 0 ? _a : modes.retrocape[0], this.modes.retrocape[1] = (_b = this.modes.retrocape[1]) !== null && _b !== void 0 ? _b : modes.retrocape[1]), this.modes = _objectSpread10(_objectSpread10({}, modes), this.modes), compatible;
    }
    /**
     * Check if it is possible to equip a thing to this outfit using .equip().
     *
     * This does not change the current outfit.
     *
     * @param thing The thing to equip.
     * @param slot The slot to equip them.
     * @returns True if this thing can be equipped.
     */
  }, {
    key: "canEquip",
    value: function(thing, slot) {
      var outfit2 = this.clone();
      return outfit2.equip(thing, slot);
    }
    /**
     * Check if it is possible to equip a thing to this outfit using .equip(); if it is, do so.
     *
     * This does change the current outfit.
     * @param thing The thing to equip.
     * @param slot The slot to equip them.
     * @returns True if this thing was successfully equipped.
     */
  }, {
    key: "tryEquip",
    value: function(thing, slot) {
      return this.canEquip(thing, slot) && this.equip(thing, slot);
    }
  }, {
    key: "afterDress",
    value: function() {
      var _this$postActions;
      (_this$postActions = this.postActions).push.apply(_this$postActions, arguments);
    }
  }, {
    key: "beforeDress",
    value: function() {
      var _this$preActions;
      (_this$preActions = this.preActions).push.apply(_this$preActions, arguments);
    }
    /**
     * Equip this outfit.
     */
  }, {
    key: "_dress",
    value: function(refreshed) {
      var _this = this;
      this.familiar && (0, import_kolmafia72.useFamiliar)(this.familiar);
      var targetEquipment = Array.from(this.equips.values()), usedSlots = /* @__PURE__ */ new Set(), nonaccessorySlots = $slots(_templateObject2912 || (_templateObject2912 = _taggedTemplateLiteral62(["weapon, off-hand, hat, back, shirt, pants, familiar"]))), bjorn = this.riders.get($slot(_templateObject3012 || (_templateObject3012 = _taggedTemplateLiteral62(["buddy-bjorn"]))));
      bjorn && (this.equips.get($slot(_templateObject3119 || (_templateObject3119 = _taggedTemplateLiteral62(["back"])))) === $item(_templateObject3214 || (_templateObject3214 = _taggedTemplateLiteral62(["Buddy Bjorn"]))) || this.getBonus($item(_templateObject3314 || (_templateObject3314 = _taggedTemplateLiteral62(["Buddy Bjorn"]))))) && (usedSlots.add($slot(_templateObject3411 || (_templateObject3411 = _taggedTemplateLiteral62(["buddy-bjorn"])))), usedSlots.add($slot(_templateObject3511 || (_templateObject3511 = _taggedTemplateLiteral62(["crown-of-thrones"])))));
      var crown = this.riders.get($slot(_templateObject3611 || (_templateObject3611 = _taggedTemplateLiteral62(["crown-of-thrones"]))));
      crown && (this.equips.get($slot(_templateObject3711 || (_templateObject3711 = _taggedTemplateLiteral62(["hat"])))) === $item(_templateObject3811 || (_templateObject3811 = _taggedTemplateLiteral62(["Crown of Thrones"]))) || this.getBonus($item(_templateObject3911 || (_templateObject3911 = _taggedTemplateLiteral62(["Crown of Thrones"]))))) && (usedSlots.add($slot(_templateObject4011 || (_templateObject4011 = _taggedTemplateLiteral62(["buddy-bjorn"])))), usedSlots.add($slot(_templateObject4113 || (_templateObject4113 = _taggedTemplateLiteral62(["crown-of-thrones"])))));
      var _iterator5 = _createForOfIteratorHelper20(nonaccessorySlots), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var slot = _step5.value;
          (targetEquipment.includes((0, import_kolmafia72.equippedItem)(slot)) && this.equips.get(slot) !== (0, import_kolmafia72.equippedItem)(slot) || this.avoid.includes((0, import_kolmafia72.equippedItem)(slot)) || slot === $slot(_templateObject4910 || (_templateObject4910 = _taggedTemplateLiteral62(["weapon"]))) && weaponHands((0, import_kolmafia72.equippedItem)(slot)) !== 1 && this.equips.has($slot(_templateObject507 || (_templateObject507 = _taggedTemplateLiteral62(["offhand"])))) && !this.equips.has($slot(_templateObject5112 || (_templateObject5112 = _taggedTemplateLiteral62(["weapon"]))))) && (0, import_kolmafia72.equip)(slot, $item.none);
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      var _iterator6 = _createForOfIteratorHelper20(nonaccessorySlots), _step6;
      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
          var _slot = _step6.value, equipment = this.equips.get(_slot);
          equipment && ((0, import_kolmafia72.equip)(_slot, equipment), usedSlots.add(_slot));
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
      var accessorySlots = $slots(_templateObject4212 || (_templateObject4212 = _taggedTemplateLiteral62(["acc1, acc2, acc3"]))), accessoryEquips = accessorySlots.map(function(slot2) {
        return _this.equips.get(slot2);
      }).filter(function(item10) {
        return item10 !== void 0;
      }), missingAccessories = [], _iterator7 = _createForOfIteratorHelper20(accessoryEquips), _step7;
      try {
        var _loop = function() {
          var accessory2 = _step7.value, alreadyEquipped = accessorySlots.find(function(slot2) {
            return !usedSlots.has(slot2) && (0, import_kolmafia72.equippedItem)(slot2) === accessory2;
          });
          alreadyEquipped ? usedSlots.add(alreadyEquipped) : missingAccessories.push(accessory2);
        };
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done; )
          _loop();
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
      for (var _i2 = 0, _missingAccessories = missingAccessories; _i2 < _missingAccessories.length; _i2++) {
        var accessory = _missingAccessories[_i2], unusedSlot = accessorySlots.find(function(slot2) {
          return !usedSlots.has(slot2);
        });
        if (unusedSlot === void 0)
          throw "No accessory slots remaining";
        (0, import_kolmafia72.equip)(unusedSlot, accessory), usedSlots.add(unusedSlot);
      }
      var modes = convertToLibramModes(this.modes);
      if (this.modifier.length > 0) {
        var allRequirements = [new Requirement(this.modifier, {
          preventSlot: _toConsumableArray21(usedSlots),
          preventEquip: this.avoid,
          modes: modes,
          bonusEquip: this.bonuses
        })];
        if (refreshed && allRequirements.push(FORCE_REFRESH_REQUIREMENT), !Requirement.merge(allRequirements).maximize()) {
          if (refreshed)
            throw new Error("Failed to maximize properly!");
          (0, import_kolmafia72.cliExecute)("refresh inventory"), this._dress(!0);
          return;
        }
        (0, import_kolmafia72.logprint)("Maximize: ".concat(this.modifier));
      }
      if (applyModes(modes), bjorn && (0, import_kolmafia72.haveEquipped)($item(_templateObject4312 || (_templateObject4312 = _taggedTemplateLiteral62(["Buddy Bjorn"])))) && ((0, import_kolmafia72.myEnthronedFamiliar)() === bjorn && (0, import_kolmafia72.enthroneFamiliar)($familiar.none), (0, import_kolmafia72.myBjornedFamiliar)() !== bjorn && (0, import_kolmafia72.bjornifyFamiliar)(bjorn)), crown && (0, import_kolmafia72.haveEquipped)($item(_templateObject4411 || (_templateObject4411 = _taggedTemplateLiteral62(["Crown of Thrones"])))) && ((0, import_kolmafia72.myBjornedFamiliar)() === crown && (0, import_kolmafia72.bjornifyFamiliar)($familiar.none), (0, import_kolmafia72.myEnthronedFamiliar)() !== crown && (0, import_kolmafia72.enthroneFamiliar)(crown)), this.familiar !== void 0 && (0, import_kolmafia72.myFamiliar)() !== this.familiar)
        throw "Failed to fully dress (expected: familiar ".concat(this.familiar, ")");
      var _iterator8 = _createForOfIteratorHelper20(nonaccessorySlots), _step8;
      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
          var _slot2 = _step8.value;
          if (this.equips.has(_slot2) && (0, import_kolmafia72.equippedItem)(_slot2) !== this.equips.get(_slot2))
            throw "Failed to fully dress (expected: ".concat(_slot2, " ").concat(this.equips.get(_slot2), ")");
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }
      var _iterator9 = _createForOfIteratorHelper20(accessoryEquips), _step9;
      try {
        var _loop2 = function() {
          var accessory2 = _step9.value;
          if ((0, import_kolmafia72.equippedAmount)(accessory2) < accessoryEquips.filter(function(acc) {
            return acc === accessory2;
          }).length)
            throw "Failed to fully dress (expected: acc ".concat(accessory2, ")");
        };
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done; )
          _loop2();
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
      for (var _i3 = 0, _arr2 = [[$slot(_templateObject4511 || (_templateObject4511 = _taggedTemplateLiteral62(["buddy-bjorn"]))), $item(_templateObject4611 || (_templateObject4611 = _taggedTemplateLiteral62(["Buddy Bjorn"]))), import_kolmafia72.myBjornedFamiliar], [$slot(_templateObject4711 || (_templateObject4711 = _taggedTemplateLiteral62(["crown-of-thrones"]))), $item(_templateObject4811 || (_templateObject4811 = _taggedTemplateLiteral62(["Crown of Thrones"]))), import_kolmafia72.myEnthronedFamiliar]]; _i3 < _arr2.length; _i3++) {
        var _arr2$_i = _slicedToArray22(_arr2[_i3], 3), rider = _arr2$_i[0], throne = _arr2$_i[1], checkingFunction = _arr2$_i[2], wanted = this.riders.get(rider);
        if (_toConsumableArray21(this.equips.values()).includes(throne) && wanted && checkingFunction() !== wanted)
          throw "Failed to fully dress: (expected ".concat(rider, " ").concat(wanted, ")");
      }
    }
  }, {
    key: "dress",
    value: function() {
      var _iterator10 = _createForOfIteratorHelper20(this.preActions), _step10;
      try {
        for (_iterator10.s(); !(_step10 = _iterator10.n()).done; ) {
          var action = _step10.value;
          action();
        }
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }
      this._dress(!1);
      var _iterator11 = _createForOfIteratorHelper20(this.postActions), _step11;
      try {
        for (_iterator11.s(); !(_step11 = _iterator11.n()).done; ) {
          var _action = _step11.value;
          _action();
        }
      } catch (err) {
        _iterator11.e(err);
      } finally {
        _iterator11.f();
      }
    }
    /**
     * Build an Outfit identical to this outfit.
     */
  }, {
    key: "clone",
    value: function() {
      var result = new Outfit2();
      return result.equips = new Map(this.equips), result.skipDefaults = this.skipDefaults, result.familiar = this.familiar, result.modifier = _toConsumableArray21(this.modifier), result.avoid = _toConsumableArray21(this.avoid), result.modes = _objectSpread10({}, this.modes), result.riders = new Map(this.riders), result.bonuses = new Map(this.bonuses), result.beforeDress.apply(result, _toConsumableArray21(this.preActions)), result.afterDress.apply(result, _toConsumableArray21(this.postActions)), result;
    }
    /**
     * Build an OutfitSpec identical to this outfit.
     */
  }, {
    key: "spec",
    value: function() {
      var _a, result = {
        modifier: _toConsumableArray21(this.modifier),
        avoid: _toConsumableArray21(this.avoid),
        skipDefaults: this.skipDefaults,
        modes: _objectSpread10({}, this.modes),
        bonuses: new Map(this.bonuses)
      };
      this.familiar && (result.familiar = this.familiar);
      var _iterator12 = _createForOfIteratorHelper20(outfitSlots), _step12;
      try {
        for (_iterator12.s(); !(_step12 = _iterator12.n()).done; ) {
          var slotName = _step12.value, entry = this.equips.get((_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject5411 || (_templateObject5411 = _taggedTemplateLiteral62(["familiar"])))], ["offhand", $slot(_templateObject5510 || (_templateObject5510 = _taggedTemplateLiteral62(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia72.toSlot)(slotName));
          entry && (result[slotName] = entry);
        }
      } catch (err) {
        _iterator12.e(err);
      } finally {
        _iterator12.f();
      }
      var riders = {}, buddyRider = this.riders.get($slot(_templateObject5211 || (_templateObject5211 = _taggedTemplateLiteral62(["buddy-bjorn"]))));
      buddyRider !== void 0 && (riders["buddy-bjorn"] = buddyRider);
      var throneRider = this.riders.get($slot(_templateObject5311 || (_templateObject5311 = _taggedTemplateLiteral62(["crown-of-thrones"]))));
      return throneRider !== void 0 && (riders["crown-of-thrones"] = throneRider), (buddyRider !== void 0 || throneRider !== void 0) && (result.riders = riders), this.preActions.length && (result.beforeDress = this.preActions), this.postActions.length && (result.afterDress = this.postActions), result;
    }
  }], [{
    key: "current",
    value: function() {
      var _a, outfit2 = new Outfit2(), familiar7 = (0, import_kolmafia72.myFamiliar)();
      if (outfit2.equip(familiar7))
        throw "Failed to create outfit from current state (expected: familiar ".concat(familiar7, ")");
      var _iterator13 = _createForOfIteratorHelper20(outfitSlots), _step13;
      try {
        for (_iterator13.s(); !(_step13 = _iterator13.n()).done; ) {
          var slotName = _step13.value, slot = (_a = (/* @__PURE__ */ new Map([["famequip", $slot(_templateObject605 || (_templateObject605 = _taggedTemplateLiteral62(["familiar"])))], ["offhand", $slot(_templateObject6111 || (_templateObject6111 = _taggedTemplateLiteral62(["off-hand"])))]])).get(slotName)) !== null && _a !== void 0 ? _a : (0, import_kolmafia72.toSlot)(slotName), item10 = (0, import_kolmafia72.equippedItem)(slot);
          if (!outfit2.equip(item10, slot))
            throw "Failed to create outfit from current state (expected: ".concat(slot, " ").concat(item10, ")");
        }
      } catch (err) {
        _iterator13.e(err);
      } finally {
        _iterator13.f();
      }
      return (0, import_kolmafia72.haveEquipped)($item(_templateObject566 || (_templateObject566 = _taggedTemplateLiteral62(["Crown of Thrones"])))) && outfit2.riders.set($slot(_templateObject576 || (_templateObject576 = _taggedTemplateLiteral62(["crown-of-thrones"]))), (0, import_kolmafia72.myEnthronedFamiliar)()), (0, import_kolmafia72.haveEquipped)($item(_templateObject586 || (_templateObject586 = _taggedTemplateLiteral62(["Buddy Bjorn"])))) && outfit2.riders.set($slot(_templateObject595 || (_templateObject595 = _taggedTemplateLiteral62(["buddy-bjorn"]))), (0, import_kolmafia72.myBjornedFamiliar)()), outfit2.setModes(getCurrentModes2()), outfit2;
    }
  }, {
    key: "from",
    value: function(spec) {
      var error2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, _a, outfit2 = new Outfit2();
      if (spec instanceof Requirement) {
        var result = {};
        result.modifier = spec.maximizeParameters, !((_a = spec.maximizeOptions.forceEquip) === null || _a === void 0) && _a.length && (result.equip = spec.maximizeOptions.forceEquip), result.avoid = spec.maximizeOptions.preventEquip, result.bonuses = spec.maximizeOptions.bonusEquip, spec.maximizeOptions.modes && (result.modes = convertFromLibramModes(spec.maximizeOptions.modes));
        var cleanedResult = Object.fromEntries(_toConsumableArray21(Object.entries(result)).filter(function(_ref5) {
          var _ref6 = _slicedToArray22(_ref5, 2), v = _ref6[1];
          return v !== void 0;
        }));
        return Outfit2.from(cleanedResult);
      }
      var success = outfit2.equip(spec);
      if (!success && error2)
        throw error2;
      return success ? outfit2 : null;
    }
  }]), Outfit2;
}();
function convertToLibramModes(modes) {
  var _a;
  return {
    backupcamera: modes.backupcamera,
    umbrella: modes.umbrella,
    snowsuit: modes.snowsuit,
    edpiece: modes.edpiece,
    retrocape: (_a = modes.retrocape) === null || _a === void 0 ? void 0 : _a.filter(function(s) {
      return s !== void 0;
    }).join(" "),
    parka: modes.parka
  };
}
function convertFromLibramModes(modes) {
  return modes.retrocape ? _objectSpread10(_objectSpread10({}, modes), {}, {
    retrocape: modes.retrocape.split(" ")
  }) : modes;
}
function getCurrentModes2() {
  return {
    backupcamera: getMode("backupCameraMode", ["ml", "meat", "init"]),
    umbrella: getMode("umbrellaState", ["broken", "forward-facing", "bucket style", "pitchfork style", "constantly twirling", "cocoon"]),
    snowsuit: getMode("snowsuit", ["eyebrows", "smirk", "nose", "goatee", "hat"]),
    edpiece: getMode("edPiece", ["bear", "owl", "puma", "hyena", "mouse", "weasel", "fish"]),
    retrocape: [getMode("retroCapeSuperhero", ["vampire", "heck", "robot"]), getMode("retroCapeWashingInstructions", ["hold", "thrill", "kiss", "kill"])],
    parka: getMode("parkaMode", ["kachungasaur", "dilophosaur", "ghostasaurus", "spikolodon", "pterodactyl"])
  };
}
function getMode(property, options) {
  var val = get(property, "");
  return options.find(function(s) {
    return s === val;
  });
}

// node_modules/grimoire-kolmafia/dist/engine.js
var _templateObject508;
function _taggedTemplateLiteral63(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray22(arr) {
  return _arrayWithoutHoles22(arr) || _iterableToArray22(arr) || _unsupportedIterableToArray40(arr) || _nonIterableSpread22();
}
function _nonIterableSpread22() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray22(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles22(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray40(arr);
}
function _slicedToArray23(arr, i) {
  return _arrayWithHoles23(arr) || _iterableToArrayLimit23(arr, i) || _unsupportedIterableToArray40(arr, i) || _nonIterableRest23();
}
function _nonIterableRest23() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit23(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles23(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper21(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray40(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray40(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray40(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray40(o, minLen);
  }
}
function _arrayLikeToArray40(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function ownKeys11(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread11(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys11(Object(source), !0).forEach(function(key) {
      _defineProperty26(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys11(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty26(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _defineProperties18(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass18(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties18(Constructor.prototype, protoProps), staticProps && _defineProperties18(Constructor, staticProps), Constructor;
}
function _classCallCheck24(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
var grimoireCCS = "grimoire_macro", Engine = /* @__PURE__ */ function() {
  function Engine2(tasks, options) {
    var _this = this;
    _classCallCheck24(this, Engine2), this.attempts = {}, this.propertyManager = new PropertiesManager(), this.tasks_by_name = /* @__PURE__ */ new Map(), this.cachedCcsContents = "", this.options = options != null ? options : {}, this.tasks = tasks.map(function(task2) {
      return _objectSpread11(_objectSpread11({}, _this.options.default_task_options), task2);
    });
    var _iterator = _createForOfIteratorHelper21(this.tasks), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var task = _step.value;
        this.tasks_by_name.set(task.name, task);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    this.initPropertiesManager(this.propertyManager);
  }
  return _createClass18(Engine2, [{
    key: "getNextTask",
    value: function() {
      var _this = this;
      return this.tasks.find(function(task) {
        return _this.available(task);
      });
    }
    /**
     * Continually get the next task and execute it.
     * @param actions If given, only perform up to this many tasks.
     */
  }, {
    key: "run",
    value: function(actions) {
      for (var i = 0; i < (actions != null ? actions : 1 / 0); i++) {
        var task = this.getNextTask();
        if (!task)
          return;
        this.execute(task);
      }
    }
    /**
     * Close the engine and reset all properties.
     * After this has been called, this object should not be used.
     */
  }, {
    key: "destruct",
    value: function() {
      this.propertyManager.resetAll(), (0, import_kolmafia73.setAutoAttack)(0);
    }
    /**
     * Check if the given task is available at this moment.
     * @returns true if all dependencies are complete and the task is ready.
     *  Note that dependencies are not checked transitively. That is, if
     *  A depends on B which depends on C, then A is ready if B is complete
     *  (regardless of if C is complete or not).
     */
  }, {
    key: "available",
    value: function(task) {
      var _a, _b;
      if (((_a = task.limit) === null || _a === void 0 ? void 0 : _a.skip) !== void 0 && this.attempts[task.name] >= task.limit.skip)
        return !1;
      var _iterator2 = _createForOfIteratorHelper21((_b = task.after) !== null && _b !== void 0 ? _b : []), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var after = _step2.value, after_task = this.tasks_by_name.get(after);
          if (after_task === void 0)
            throw "Unknown task dependency ".concat(after, " on ").concat(task.name);
          if (!after_task.completed())
            return !1;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      return !(task.ready && !task.ready() || task.completed());
    }
    /**
     * Perform all steps to execute the provided task.
     * This is the main entry point for the Engine.
     * @param task The current executing task.
     */
  }, {
    key: "execute",
    value: function(task) {
      var _a, _b, _c, _d, _e;
      (0, import_kolmafia73.print)(""), (0, import_kolmafia73.print)("Executing ".concat(task.name), "blue");
      var postcondition = (_b = (_a = task.limit) === null || _a === void 0 ? void 0 : _a.guard) === null || _b === void 0 ? void 0 : _b.call(_a);
      this.acquireItems(task), this.acquireEffects(task);
      var task_combat = (_d = (_c = task.combat) === null || _c === void 0 ? void 0 : _c.clone()) !== null && _d !== void 0 ? _d : new CombatStrategy(), outfit2 = this.createOutfit(task), task_resources = new CombatResources();
      this.customize(task, outfit2, task_combat, task_resources), this.dress(task, outfit2), this.setCombat(task, task_combat, task_resources), this.setChoices(task, this.propertyManager);
      var _iterator3 = _createForOfIteratorHelper21(task_resources.all()), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var resource = _step3.value;
          (_e = resource.prepare) === null || _e === void 0 || _e.call(resource);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      for (this.prepare(task), this.do(task); this.shouldRepeatAdv(task); )
        _set("lastEncounter", ""), this.do(task);
      this.post(task), this.markAttempt(task), this.checkLimits(task, postcondition);
    }
    /**
     * Acquire all items for the task.
     * @param task The current executing task.
     */
  }, {
    key: "acquireItems",
    value: function(task) {
      var _a, acquire = undelay(task.acquire), _iterator4 = _createForOfIteratorHelper21(acquire || []), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var to_get = _step4.value, num_needed = (_a = to_get.num) !== null && _a !== void 0 ? _a : 1, num_have = (0, import_kolmafia73.itemAmount)(to_get.item) + (0, import_kolmafia73.equippedAmount)(to_get.item);
          if (!(num_needed <= num_have) && !(to_get.useful !== void 0 && !to_get.useful()) && (to_get.get ? to_get.get() : to_get.price !== void 0 ? (0, import_kolmafia73.buy)(to_get.item, num_needed - num_have, to_get.price) : Object.keys((0, import_kolmafia73.getRelated)(to_get.item, "fold")).length > 0 ? (0, import_kolmafia73.cliExecute)("fold ".concat(to_get.item)) : (0, import_kolmafia73.retrieveItem)(to_get.item, num_needed), (0, import_kolmafia73.itemAmount)(to_get.item) + (0, import_kolmafia73.equippedAmount)(to_get.item) < num_needed && !to_get.optional))
            throw "Task ".concat(task.name, " was unable to acquire ").concat(num_needed, " ").concat(to_get.item);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
    /**
     * Acquire all effects for the task.
     * @param task The current executing task.
     */
  }, {
    key: "acquireEffects",
    value: function(task) {
      var _a, effects = (_a = undelay(task.effects)) !== null && _a !== void 0 ? _a : [], songs = effects.filter(function(effect3) {
        return isSong(effect3);
      });
      if (songs.length > maxSongs())
        throw "Too many AT songs";
      for (var extraSongs = Object.keys((0, import_kolmafia73.myEffects)()).map(function(effectName) {
        return (0, import_kolmafia73.toEffect)(effectName);
      }).filter(function(effect3) {
        return isSong(effect3) && !songs.includes(effect3);
      }); songs.length + extraSongs.length > maxSongs(); ) {
        var toRemove = extraSongs.pop();
        if (toRemove === void 0)
          break;
        uneffect(toRemove);
      }
      var _iterator5 = _createForOfIteratorHelper21(effects), _step5;
      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
          var effect2 = _step5.value;
          ensureEffect(effect2);
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
    }
    /**
     * Create an outfit for the task with all required equipment.
     * @param task The current executing task.
     */
  }, {
    key: "createOutfit",
    value: function(task) {
      var spec = undelay(task.outfit);
      if (spec instanceof Outfit)
        return spec.clone();
      var outfit2 = new Outfit();
      if (spec !== void 0 && !outfit2.equip(spec) && !this.options.allow_partial_outfits)
        throw "Unable to equip all items for ".concat(task.name);
      return outfit2;
    }
    /**
     * Equip the outfit for the task.
     * @param task The current executing task.
     * @param outfit The outfit for the task, possibly augmented by the engine.
     */
  }, {
    key: "dress",
    value: function(task, outfit2) {
      task.do instanceof import_kolmafia73.Location && (0, import_kolmafia73.setLocation)(task.do), outfit2.dress();
    }
    /* eslint-disable @typescript-eslint/no-unused-vars */
    /**
     * Perform any engine-specific customization for the outfit and combat plan.
     *
     * This is a natural method to override in order to:
     *   * Enable the use of any resources in the outfit or combat (e.g., allocate banishers).
     *   * Equip a default outfit.
     *   * Determine additional monster macros at a global level (e.g., use flyers).
     * @param task The current executing task.
     * @param outfit The outfit for the task.
     * @param combat The combat strategy so far for the task.
     * @param resources The combat resources assigned so far for the task.
     */
  }, {
    key: "customize",
    value: function(task, outfit2, combat, resources) {
    }
    /* eslint-enable @typescript-eslint/no-unused-vars */
    /**
     * Set the choice settings for the task.
     * @param task The current executing task.
     * @param manager The property manager to use.
     */
  }, {
    key: "setChoices",
    value: function(task, manager) {
      for (var _a, _i = 0, _Object$entries = Object.entries(undelay((_a = task.choices) !== null && _a !== void 0 ? _a : {})); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = _slicedToArray23(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];
        value !== void 0 && manager.setChoice(parseInt(key), value);
      }
    }
    /**
     * Save the combat macro for this task.
     * @param task The current executing task.
     * @param task_combat The completed combat strategy far for the task.
     * @param task_resources The combat resources assigned for the task.
     */
  }, {
    key: "setCombat",
    value: function(task, task_combat, task_resources) {
      var _a, macro = task_combat.compile(task_resources, (_a = this.options) === null || _a === void 0 ? void 0 : _a.combat_defaults, task.do instanceof import_kolmafia73.Location ? task.do : void 0);
      if (macro.save(), !this.options.ccs) {
        var otherCCSEntries = task_combat.compileCcs(), ccsContents = ["[default]", '"'.concat(macro.toString(), '"')].concat(_toConsumableArray22(otherCCSEntries)).join("\n");
        (0, import_kolmafia73.logprint)("CCS: ".concat(ccsContents.replace("\n", "\\n "))), ccsContents !== this.cachedCcsContents && ((0, import_kolmafia73.writeCcs)(ccsContents, grimoireCCS), (0, import_kolmafia73.cliExecute)("ccs ".concat(grimoireCCS)), this.cachedCcsContents = ccsContents);
      }
      var autoattack = task_combat.compileAutoattack();
      autoattack.toString().length > 1 ? ((0, import_kolmafia73.logprint)("Autoattack macro: ".concat(autoattack.toString())), autoattack.setAutoAttack()) : (0, import_kolmafia73.setAutoAttack)(0);
    }
    /**
     * Do any task-specific preparation.
     * @param task The current executing task.
     */
  }, {
    key: "prepare",
    value: function(task) {
      var _a;
      (_a = task.prepare) === null || _a === void 0 || _a.call(task);
    }
    /**
     * Actually perform the task.
     * @param task The current executing task.
     */
  }, {
    key: "do",
    value: function(task) {
      var result = typeof task.do == "function" ? task.do() : task.do;
      for (result instanceof import_kolmafia73.Location && (0, import_kolmafia73.adv1)(result, -1, ""), (0, import_kolmafia73.runCombat)(); (0, import_kolmafia73.inMultiFight)(); )
        (0, import_kolmafia73.runCombat)();
      (0, import_kolmafia73.choiceFollowsFight)() && (0, import_kolmafia73.runChoice)(-1);
    }
    /**
     * Check if the task.do should be immediately repeated without any prep.
     *
     * By default, this is only used to repeat a task if we hit one of:
     *   1. Halloweener dog noncombats,
     *   2. June cleaver noncombats,
     *   3. Lil' Doctor™ bag noncombat, or
     *   4. Turtle taming noncombats.
     * @param task The current executing task.
     * @returns True if the task should be immediately repeated.
     */
  }, {
    key: "shouldRepeatAdv",
    value: function(task) {
      return task.do instanceof import_kolmafia73.Location && lastEncounterWasWanderingNC();
    }
    /**
     * Do any task-specific wrapup activities.
     * @param task The current executing task.
     */
  }, {
    key: "post",
    value: function(task) {
      var _a;
      (_a = task.post) === null || _a === void 0 || _a.call(task);
    }
    /**
     * Mark that an attempt was made on the current task.
     * @param task The current executing task.
     */
  }, {
    key: "markAttempt",
    value: function(task) {
      task.name in this.attempts || (this.attempts[task.name] = 0), this.attempts[task.name]++;
    }
    /**
     * Check if the task has passed any of its internal limits.
     * @param task The task to check.
     * @throws An error if any of the internal limits have been passed.
     */
  }, {
    key: "checkLimits",
    value: function(task, postcondition) {
      var _a;
      if (task.limit) {
        var failureMessage = task.limit.message ? " ".concat(task.limit.message) : "";
        if (!task.completed()) {
          if (task.limit.tries && this.attempts[task.name] >= task.limit.tries)
            throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.tries, " attempts. Please check what went wrong.").concat(failureMessage);
          if (task.limit.soft && this.attempts[task.name] >= task.limit.soft)
            throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.soft, " attempts. Please check what went wrong (you may just be unlucky).").concat(failureMessage);
          if (task.limit.turns && task.do instanceof import_kolmafia73.Location && task.do.turnsSpent >= task.limit.turns)
            throw "Task ".concat(task.name, " did not complete within ").concat(task.limit.turns, " turns. Please check what went wrong.").concat(failureMessage);
          if (task.limit.unready && (!((_a = task.ready) === null || _a === void 0) && _a.call(task)))
            throw "Task ".concat(task.name, " is still ready, but it should not be. Please check what went wrong.").concat(failureMessage);
          if (task.limit.completed)
            throw "Task ".concat(task.name, " is not completed, but it should be. Please check what went wrong.").concat(failureMessage);
        }
        if (postcondition && !postcondition())
          throw "Task ".concat(task.name, " failed its guard. Please check what went wrong.").concat(failureMessage);
      }
    }
  }, {
    key: "getDefaultSettings",
    value: function() {
      return this.constructor.defaultSettings;
    }
    /**
     * Initialize properties for the script.
     * @param manager The properties manager to use.
     */
  }, {
    key: "initPropertiesManager",
    value: function(manager) {
      var _a;
      manager.set(this.getDefaultSettings()), this.options.ccs !== "" && (this.options.ccs === void 0 && (0, import_kolmafia73.readCcs)(grimoireCCS) === "" && (0, import_kolmafia73.writeCcs)("[ default ]\nabort", grimoireCCS), manager.set({
        customCombatScript: (_a = this.options.ccs) !== null && _a !== void 0 ? _a : grimoireCCS
      }));
    }
  }]), Engine2;
}();
Engine.defaultSettings = {
  logPreferenceChange: !0,
  logPreferenceChangeFilter: _toConsumableArray22(new Set([].concat(_toConsumableArray22(get("logPreferenceChangeFilter").split(",")), ["libram_savedMacro", "maximizerMRUList", "testudinalTeachings", "_lastCombatStarted"]))).sort().filter(function(a) {
    return a;
  }).join(","),
  battleAction: "custom combat script",
  autoSatisfyWithMall: !0,
  autoSatisfyWithNPCs: !0,
  autoSatisfyWithCoinmasters: !0,
  autoSatisfyWithStash: !1,
  dontStopForCounters: !0,
  maximizerFoldables: !0,
  hpAutoRecovery: "-0.05",
  hpAutoRecoveryTarget: "0.0",
  mpAutoRecovery: "-0.05",
  mpAutoRecoveryTarget: "0.0",
  afterAdventureScript: "",
  betweenBattleScript: "",
  choiceAdventureScript: "",
  familiarScript: "",
  currentMood: "apathetic",
  autoTuxedo: !0,
  autoPinkyRing: !0,
  autoGarish: !0,
  allowNonMoodBurning: !1,
  allowSummonBurning: !0,
  libramSkillsSoftcore: "none"
};
function maxSongs() {
  return have($skill(_templateObject508 || (_templateObject508 = _taggedTemplateLiteral63(["Mariachi Memory"])))) ? 4 : 3;
}
var wanderingNCs = /* @__PURE__ */ new Set([
  // Halloweener dog noncombats
  "Wooof! Wooooooof!",
  "Playing Fetch*",
  // June cleaver noncombats
  "Aunts not Ants",
  "Bath Time",
  "Beware of Aligator",
  "Delicious Sprouts",
  "Hypnotic Master",
  "Lost and Found",
  "Poetic Justice",
  "Summer Days",
  "Teacher's Pet",
  // Lil' Doctor™ bag noncombat
  "A Pound of Cure",
  // Turtle taming noncombats
  "Nantucket Snapper",
  "Blue Monday",
  "Capital!",
  "Training Day",
  "Boxed In",
  "Duel Nature",
  "Slow Food",
  "A Rolling Turtle Gathers No Moss",
  "Slow Road to Hell",
  "C'mere, Little Fella",
  "The Real Victims",
  "Like That Time in Tortuga",
  "Cleansing your Palette",
  "Harem Scarum",
  "Turtle in peril",
  "No Man, No Hole",
  "Slow and Steady Wins the Brawl",
  "Stormy Weather",
  "Turtles of the Universe",
  "O Turtle Were Art Thou",
  "Allow 6-8 Weeks For Delivery",
  "Kick the Can",
  "Turtles All The Way Around",
  "More eXtreme Than Usual",
  "Jewel in the Rough",
  "The worst kind of drowning",
  "Even Tamer Than Usual",
  "Never Break the Chain",
  "Close, but Yes Cigar",
  "Armchair Quarterback",
  "This Turtle Rocks!",
  "Really Sticking Her Neck Out",
  "It Came from Beneath the Sewer? Great!",
  "Don't Be Alarmed, Now",
  "Puttin' it on Wax",
  "More Like... Hurtle",
  "Musk! Musk! Musk!",
  "Silent Strolling"
]), zoneSpecificNCs = /* @__PURE__ */ new Map([
  ["The Horror...", ["Frat House"]]
  // Duplicate choice name
]);
function lastEncounterWasWanderingNC() {
  var _a, last = get("lastEncounter");
  if (zoneSpecificNCs.has(last)) {
    var zones = (_a = zoneSpecificNCs.get(last)) !== null && _a !== void 0 ? _a : [];
    return zones.includes(get("lastAdventure"));
  } else
    return wanderingNCs.has(last);
}

// node_modules/grimoire-kolmafia/dist/route.js
init_kolmafia_polyfill();
function ownKeys12(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread12(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys12(Object(source), !0).forEach(function(key) {
      _defineProperty27(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys12(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty27(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
function _createForOfIteratorHelper22(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray41(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray41(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray41(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray41(o, minLen);
  }
}
function _arrayLikeToArray41(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function getTasks(quests2) {
  var implicitAfter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, _a, _b, result = [], _iterator = _createForOfIteratorHelper22(quests2), _step;
  try {
    var _loop = function() {
      var quest = _step.value, questCompleted = quest.completed, _iterator3 = _createForOfIteratorHelper22(quest.tasks), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var _task2 = _step3.value, renamedTask = _objectSpread12({}, _task2);
          renamedTask.name = "".concat(quest.name, "/").concat(_task2.name), renamedTask.after = (_a = _task2.after) === null || _a === void 0 ? void 0 : _a.map(function(after2) {
            return after2.includes("/") ? after2 : "".concat(quest.name, "/").concat(after2);
          }), implicitAfter && _task2.after === void 0 && result.length > 0 && (renamedTask.after = [result[result.length - 1].name]), questCompleted !== void 0 && function() {
            var taskCompleted = _task2.completed;
            renamedTask.completed = function() {
              return questCompleted() || taskCompleted();
            };
          }(), result.push(renamedTask);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done; )
      _loop();
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  for (var names = /* @__PURE__ */ new Set(), _i = 0, _result = result; _i < _result.length; _i++) {
    var task = _result[_i];
    names.add(task.name);
  }
  for (var _i2 = 0, _result2 = result; _i2 < _result2.length; _i2++) {
    var _task = _result2[_i2], _iterator2 = _createForOfIteratorHelper22((_b = _task.after) !== null && _b !== void 0 ? _b : []), _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
        var after = _step2.value;
        if (!names.has(after))
          throw "Unknown task dependency ".concat(after, " of ").concat(_task.name);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  return result;
}

// node_modules/grimoire-kolmafia/dist/task.js
init_kolmafia_polyfill();

// node_modules/grimoire-kolmafia/dist/limit.js
init_kolmafia_polyfill();

// src/args.ts
init_kolmafia_polyfill();
var import_kolmafia74 = require("kolmafia"), args = Args.create("freecandydotexe", "A script that will not steal your identity but will do halloween for you", {
  blocks: Args.number({
    help: "The number of blocks to run (defaults to infinite)",
    default: 1 / 0
  }),
  treatOutfit: Args.string({
    help: "The outfit to use when checking houses for trick-or-treating",
    setting: "freecandy_treatOutfit",
    default: ""
  }),
  trickOutfit: Args.string({
    help: "A custom outfit to use when doing fights for trick-or-treating",
    setting: "freecandy_trickOutfit",
    default: ""
  }),
  familiar: Args.familiar({
    help: "The familiar to use for combats",
    setting: "freecandy_familiar",
    default: (0, import_kolmafia74.myFamiliar)()
  })
}, {
  positionalArgs: ["blocks"]
}), args_default = args;

// src/index.ts
init_dist();

// src/lib.ts
init_kolmafia_polyfill();
var import_kolmafia75 = require("kolmafia");
init_dist();
var import_kolmafia76 = require("kolmafia");
function printHighlight(message) {
  var color = (0, import_kolmafia76.isDarkMode)() ? "yellow" : "blue";
  (0, import_kolmafia75.print)(message, color);
}
function printError(message) {
  var color = "red";
  (0, import_kolmafia75.print)(message, color);
}
var State = {
  blocks: 0
};
function shouldRedigitize() {
  return SourceTerminal_exports.have() ? (0, import_kolmafia75.myAdventures)() * 1.1 < SourceTerminal_exports.getDigitizeUsesRemaining() * (5 * (get("_sourceTerminalDigitizeMonsterCount") * (1 + get("_sourceTerminalDigitizeMonsterCount"))) - 3) : !1;
}

// src/engine.ts
init_kolmafia_polyfill();
var import_kolmafia77 = require("kolmafia");
init_dist();
var _templateObject509, _templateObject2133, _templateObject3120;
function _taggedTemplateLiteral64(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _slicedToArray24(arr, i) {
  return _arrayWithHoles24(arr) || _iterableToArrayLimit24(arr, i) || _unsupportedIterableToArray42(arr, i) || _nonIterableRest24();
}
function _nonIterableRest24() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit24(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles24(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _createForOfIteratorHelper23(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray42(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray42(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray42(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray42(o, minLen);
  }
}
function _arrayLikeToArray42(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck25(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties19(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass19(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties19(Constructor.prototype, protoProps), staticProps && _defineProperties19(Constructor, staticProps), Constructor;
}
function _get2(target, property, receiver) {
  return typeof Reflect != "undefined" && Reflect.get ? _get2 = Reflect.get : _get2 = function(target2, property2, receiver2) {
    var base = _superPropBase2(target2, property2);
    if (base) {
      var desc = Object.getOwnPropertyDescriptor(base, property2);
      return desc.get ? desc.get.call(receiver2) : desc.value;
    }
  }, _get2(target, property, receiver || target);
}
function _superPropBase2(object, property) {
  for (; !Object.prototype.hasOwnProperty.call(object, property) && (object = _getPrototypeOf7(object), object !== null); )
    ;
  return object;
}
function _inherits8(subClass, superClass) {
  if (typeof superClass != "function" && superClass !== null)
    throw new TypeError("Super expression must either be null or a function");
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf8(subClass, superClass);
}
function _setPrototypeOf8(o, p) {
  return _setPrototypeOf8 = Object.setPrototypeOf || function(o2, p2) {
    return o2.__proto__ = p2, o2;
  }, _setPrototypeOf8(o, p);
}
function _createSuper7(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct7();
  return function() {
    var Super = _getPrototypeOf7(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf7(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else
      result = Super.apply(this, arguments);
    return _possibleConstructorReturn7(this, result);
  };
}
function _possibleConstructorReturn7(self, call) {
  if (call && (typeof call == "object" || typeof call == "function"))
    return call;
  if (call !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized7(self);
}
function _assertThisInitialized7(self) {
  if (self === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return self;
}
function _isNativeReflectConstruct7() {
  if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch (e) {
    return !1;
  }
}
function _getPrototypeOf7(o) {
  return _getPrototypeOf7 = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  }, _getPrototypeOf7(o);
}
function _defineProperty28(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
var CandyEngine = /* @__PURE__ */ function(_Engine) {
  _inherits8(CandyEngine2, _Engine);
  var _super = _createSuper7(CandyEngine2);
  function CandyEngine2(tasks) {
    var _this;
    return _classCallCheck25(this, CandyEngine2), _this = _super.call(this, tasks), _defineProperty28(_assertThisInitialized7(_this), "session", void 0), _defineProperty28(_assertThisInitialized7(_this), "aaBossFlag", void 0), _this.aaBossFlag = (0, import_kolmafia77.xpath)((0, import_kolmafia77.visitUrl)("account.php?tab=combat"), "//*[@id=\"opt_flag_aabosses\"]/label/input[@type='checkbox']@checked")[0] === "checked" ? 1 : 0, _this.session = Session.current(), _this;
  }
  return _createClass19(CandyEngine2, [{
    key: "destruct",
    value: function() {
      _get2(_getPrototypeOf7(CandyEngine2.prototype), "destruct", this).call(this), (0, import_kolmafia77.visitUrl)("account.php?actions[]=flag_aabosses&flag_aabosses=".concat(this.aaBossFlag, "&action=Update"), !0), (0, import_kolmafia77.useFamiliar)(args_default.familiar), printHighlight("freecandy has run ".concat(State.blocks, " blocks, and produced the following items:"));
      var _iterator = _createForOfIteratorHelper23(Session.current().diff(this.session).items), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var _step$value = _slicedToArray24(_step.value, 2), item10 = _step$value[0], quantity = _step$value[1];
          printHighlight(" ".concat(item10, ": ").concat(quantity));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "available",
    value: function(task) {
      var isDrunk = (0, import_kolmafia77.myInebriety)() > (0, import_kolmafia77.inebrietyLimit)(), sobriety = task.sobriety;
      return isDrunk && sobriety === "sober" || !isDrunk && sobriety === "drunk" ? !1 : _get2(_getPrototypeOf7(CandyEngine2.prototype), "available", this).call(this, task);
    }
  }, {
    key: "dress",
    value: function(task, outfit2) {
      _get2(_getPrototypeOf7(CandyEngine2.prototype), "dress", this).call(this, task, outfit2), (0, import_kolmafia77.itemAmount)($item(_templateObject509 || (_templateObject509 = _taggedTemplateLiteral64(["tiny stillsuit"])))) && (0, import_kolmafia77.equip)($familiar(_templateObject2133 || (_templateObject2133 = _taggedTemplateLiteral64(["Mosquito"]))), $item(_templateObject3120 || (_templateObject3120 = _taggedTemplateLiteral64(["tiny stillsuit"]))));
    }
  }, {
    key: "prepare",
    value: function(task) {
      if (_get2(_getPrototypeOf7(CandyEngine2.prototype), "prepare", this).call(this, task), "combat" in task) {
        var hpTarget = clamp(0.4 * (0, import_kolmafia77.myMaxhp)(), 200, 2e3);
        (0, import_kolmafia77.restoreHp)(hpTarget);
        var mpTarget = Math.min(150, (0, import_kolmafia77.myMaxmp)());
        (0, import_kolmafia77.restoreMp)(mpTarget);
      }
    }
  }]), CandyEngine2;
}(Engine);

// src/regularTasks.ts
init_kolmafia_polyfill();
var import_kolmafia85 = require("kolmafia");
init_dist();

// src/resources/index.ts
init_kolmafia_polyfill();

// src/resources/autumnaton.ts
init_kolmafia_polyfill();
var import_kolmafia78 = require("kolmafia");
init_dist();

// src/value.ts
init_kolmafia_polyfill();
var import_garbo_lib = __toESM(require_dist());
init_dist();
var _templateObject567;
function _taggedTemplateLiteral65(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var _valueFunctions = void 0;
function freecandyValueFunctions() {
  return _valueFunctions || (_valueFunctions = (0, import_garbo_lib.makeValue)({
    itemValues: /* @__PURE__ */ new Map([[$item(_templateObject567 || (_templateObject567 = _taggedTemplateLiteral65(["fake hand"]))), 5e4]]),
    quick: !1
  })), _valueFunctions;
}
function freecandyValue(item10) {
  var useHistorical = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
  return freecandyValueFunctions().value(item10, useHistorical);
}
function freecandyAverageValue() {
  var _freecandyValueFuncti;
  return (_freecandyValueFuncti = freecandyValueFunctions()).averageValue.apply(_freecandyValueFuncti, arguments);
}

// src/resources/autumnaton.ts
var _templateObject568, _templateObject2134;
function _toConsumableArray23(arr) {
  return _arrayWithoutHoles23(arr) || _iterableToArray23(arr) || _unsupportedIterableToArray43(arr) || _nonIterableSpread23();
}
function _nonIterableSpread23() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray43(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray43(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray43(o, minLen);
  }
}
function _iterableToArray23(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles23(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray43(arr);
}
function _arrayLikeToArray43(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral66(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function bestAutumnatonLocation(locations) {
  return maxBy(mostValuableUpgrade(locations), averageAutumnatonValue);
}
function averageAutumnatonValue(location, acuityOverride, slotOverride) {
  var badAttributes = ["LUCKY", "ULTRARARE", "BOSS"], rates = (0, import_kolmafia78.appearanceRates)(location), monsters = Object.keys((0, import_kolmafia78.getLocationMonsters)(location)).map(function(m) {
    return (0, import_kolmafia78.toMonster)(m);
  }).filter(function(m) {
    return !badAttributes.some(function(s) {
      return m.attributes.includes(s);
    }) && rates[m.name] > 0;
  });
  if (monsters.length === 0)
    return 0;
  var maximumDrops = slotOverride != null ? slotOverride : AutumnAton_exports.zoneItems(), acuityCutoff = 20 - (acuityOverride != null ? acuityOverride : AutumnAton_exports.visualAcuity()) * 5, validDrops = flat(monsters.map(function(m) {
    return (0, import_kolmafia78.itemDropsArray)(m);
  })).map(function(_ref) {
    var rate = _ref.rate, type = _ref.type, drop = _ref.drop;
    return {
      value: ["c", "0"].includes(type) ? 0 : freecandyValue(drop),
      preAcuityExpectation: ["c", "0", ""].includes(type) ? 2 * rate / 100 : 0,
      postAcuityExpectation: rate >= acuityCutoff && ["c", "0", ""].includes(type) ? 8 * rate / 100 : 0
    };
  }), overallExpectedDropQuantity = sum(validDrops, function(_ref2) {
    var preAcuityExpectation = _ref2.preAcuityExpectation, postAcuityExpectation = _ref2.postAcuityExpectation;
    return preAcuityExpectation + postAcuityExpectation;
  }), expectedCollectionValue = sum(validDrops, function(_ref3) {
    var value = _ref3.value, preAcuityExpectation = _ref3.preAcuityExpectation, postAcuityExpectation = _ref3.postAcuityExpectation, adjustedDropAmount = (preAcuityExpectation + postAcuityExpectation) * Math.min(1, maximumDrops / overallExpectedDropQuantity);
    return adjustedDropAmount * value;
  });
  return seasonalItemValue(location) + expectedCollectionValue;
}
function seasonalItemValue(location, seasonalOverride) {
  var _AutumnAton$getUnique, autumnItems = $items(_templateObject568 || (_templateObject568 = _taggedTemplateLiteral66(["autumn leaf, AutumnFest ale, autumn breeze, autumn dollar, autumn years wisdom"]))), avgValueOfRandomAutumnItem = freecandyAverageValue.apply(void 0, _toConsumableArray23(autumnItems)), autumnMeltables = $items(_templateObject2134 || (_templateObject2134 = _taggedTemplateLiteral66(["autumn debris shield, autumn leaf pendant, autumn sweater-weather sweater"]))), autumnItem = (_AutumnAton$getUnique = AutumnAton_exports.getUniques(location)) === null || _AutumnAton$getUnique === void 0 ? void 0 : _AutumnAton$getUnique.item, seasonalItemDrops = seasonalOverride != null ? seasonalOverride : AutumnAton_exports.seasonalItems();
  return autumnItem ? (seasonalItemDrops > 1 ? avgValueOfRandomAutumnItem : 0) + (autumnMeltables.includes(autumnItem) ? (
    // If we already have the meltable, then we get a random item, else value at 0
    (0, import_kolmafia78.availableAmount)(autumnItem) > 0 ? avgValueOfRandomAutumnItem : 0
  ) : freecandyValue(autumnItem)) : seasonalItemDrops > 1 ? avgValueOfRandomAutumnItem : 0;
}
function expectedRemainingExpeditions() {
  var legs2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : AutumnAton_exports.legs(), availableAutumnatonTurns = (0, import_kolmafia78.myAdventures)() - AutumnAton_exports.turnsLeft(), quests2 = get("_autumnatonQuests"), legOffsetFactor = 11 * Math.max(quests2 - legs2 - 1, 0);
  return Math.floor(Math.sqrt(Math.pow(quests2, 2) + 2 * (availableAutumnatonTurns - legOffsetFactor) / 11));
}
var profitRelevantUpgrades = ["leftarm1", "leftleg1", "rightarm1", "rightleg1", "cowcatcher", "periscope", "radardish"];
function profitFromExtraAcuity(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
  return averageAutumnatonValue(bestLocationContainingUpgrade) + averageAutumnatonValue(bestLocationWithInstalledUpgrade) * Math.max(0, expectedRemainingExpeditions() - 1);
}
function profitFromExtraLeg(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
  return averageAutumnatonValue(bestLocationContainingUpgrade) + averageAutumnatonValue(bestLocationWithInstalledUpgrade) * Math.max(0, expectedRemainingExpeditions(AutumnAton_exports.legs() + 1) - 1);
}
function profitFromExtraArm(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
  return averageAutumnatonValue(bestLocationContainingUpgrade) + averageAutumnatonValue(bestLocationWithInstalledUpgrade) * Math.max(0, expectedRemainingExpeditions() - 1);
}
function profitFromExtraAutumnItem(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade) {
  return averageAutumnatonValue(bestLocationContainingUpgrade) + (seasonalItemValue(bestLocationWithInstalledUpgrade) + averageAutumnatonValue(bestLocationWithInstalledUpgrade)) * Math.max(0, expectedRemainingExpeditions() - 1);
}
function makeUpgradeValuator(fullLocations, currentBestLocation) {
  return function(upgrade2) {
    var upgradeLocations = fullLocations.filter(function(location) {
      var _AutumnAton$getUnique2;
      return ((_AutumnAton$getUnique2 = AutumnAton_exports.getUniques(location)) === null || _AutumnAton$getUnique2 === void 0 ? void 0 : _AutumnAton$getUnique2.upgrade) === upgrade2;
    });
    if (!upgradeLocations.length)
      return {
        upgrade: upgrade2,
        profit: 0
      };
    var bestLocationContainingUpgrade = maxBy(upgradeLocations, averageAutumnatonValue);
    switch (upgrade2) {
      case "periscope":
      case "radardish": {
        var bestLocationWithInstalledUpgrade = maxBy(fullLocations, function(loc) {
          return averageAutumnatonValue(loc, AutumnAton_exports.visualAcuity() + 1);
        });
        return {
          upgrade: upgrade2,
          profit: profitFromExtraAcuity(bestLocationContainingUpgrade, bestLocationWithInstalledUpgrade)
        };
      }
      case "rightleg1":
      case "leftleg1":
        return {
          upgrade: upgrade2,
          profit: profitFromExtraLeg(bestLocationContainingUpgrade, currentBestLocation)
        };
      case "rightarm1":
      case "leftarm1": {
        var _bestLocationWithInstalledUpgrade = maxBy(fullLocations, function(loc) {
          return averageAutumnatonValue(loc, void 0, AutumnAton_exports.zoneItems() + 1);
        });
        return {
          upgrade: upgrade2,
          profit: profitFromExtraArm(bestLocationContainingUpgrade, _bestLocationWithInstalledUpgrade)
        };
      }
      case "cowcatcher":
        return {
          upgrade: upgrade2,
          profit: profitFromExtraAutumnItem(bestLocationContainingUpgrade, currentBestLocation)
        };
      default:
        return {
          upgrade: upgrade2,
          profit: 0
        };
    }
  };
}
function mostValuableUpgrade(fullLocations) {
  var validLocations = fullLocations.filter(function(l) {
    return l.parent !== "Clan Basement";
  });
  if (expectedRemainingExpeditions() < 1)
    return validLocations;
  var currentUpgrades2 = AutumnAton_exports.currentUpgrades(), acquirableUpgrades = profitRelevantUpgrades.filter(function(upgrade2) {
    return !currentUpgrades2.includes(upgrade2);
  });
  if (acquirableUpgrades.length === 0)
    return validLocations;
  var currentBestLocation = maxBy(validLocations, averageAutumnatonValue), currentExpectedProfit = averageAutumnatonValue(currentBestLocation) * expectedRemainingExpeditions(), upgradeValuations = acquirableUpgrades.map(makeUpgradeValuator(validLocations, currentBestLocation)), _maxBy = maxBy(upgradeValuations, "profit"), highestValueUpgrade = _maxBy.upgrade, profitFromBestUpgrade = _maxBy.profit;
  if (profitFromBestUpgrade > currentExpectedProfit) {
    var upgradeLocations = validLocations.filter(function(location) {
      var _AutumnAton$getUnique3;
      return ((_AutumnAton$getUnique3 = AutumnAton_exports.getUniques(location)) === null || _AutumnAton$getUnique3 === void 0 ? void 0 : _AutumnAton$getUnique3.upgrade) === highestValueUpgrade;
    });
    return upgradeLocations;
  } else
    return validLocations;
}

// src/resources/cleaver.ts
init_kolmafia_polyfill();
var import_kolmafia79 = require("kolmafia");
init_dist();
var _templateObject569, _templateObject2135, _templateObject3121, _templateObject4103, _templateObject570, _templateObject650, _templateObject746, _templateObject839;
function _toConsumableArray24(arr) {
  return _arrayWithoutHoles24(arr) || _iterableToArray24(arr) || _unsupportedIterableToArray44(arr) || _nonIterableSpread24();
}
function _nonIterableSpread24() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray44(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray44(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray44(o, minLen);
  }
}
function _iterableToArray24(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles24(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray44(arr);
}
function _arrayLikeToArray44(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral67(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var juneCleaverChoiceValues = {
  1467: {
    1: 0,
    2: 0,
    3: 5 * get("valueOfAdventure")
  },
  1468: {
    1: 0,
    2: 5,
    3: 0
  },
  1469: {
    1: 0,
    2: $item(_templateObject569 || (_templateObject569 = _taggedTemplateLiteral67(["Dad's brandy"]))),
    3: 1500
  },
  1470: {
    1: 0,
    2: $item(_templateObject2135 || (_templateObject2135 = _taggedTemplateLiteral67(["teacher's pen"]))),
    3: 0
  },
  1471: {
    1: $item(_templateObject3121 || (_templateObject3121 = _taggedTemplateLiteral67(["savings bond"]))),
    2: 250,
    3: 0
  },
  1472: {
    1: $item(_templateObject4103 || (_templateObject4103 = _taggedTemplateLiteral67(["trampled ticket stub"]))),
    2: $item(_templateObject570 || (_templateObject570 = _taggedTemplateLiteral67(["fire-roasted lake trout"]))),
    3: 0
  },
  1473: {
    1: $item(_templateObject650 || (_templateObject650 = _taggedTemplateLiteral67(["gob of wet hair"]))),
    2: 0,
    3: 0
  },
  1474: {
    1: 0,
    2: $item(_templateObject746 || (_templateObject746 = _taggedTemplateLiteral67(["guilty sprout"]))),
    3: 0
  },
  1475: {
    1: $item(_templateObject839 || (_templateObject839 = _taggedTemplateLiteral67(["mother's necklace"]))),
    2: 0,
    3: 0
  }
};
function valueJuneCleaverOption(result) {
  return result instanceof import_kolmafia79.Item ? freecandyValue(result) : result;
}
function bestJuneCleaverOption(id) {
  var options = [1, 2, 3];
  return maxBy(options, function(option) {
    return valueJuneCleaverOption(juneCleaverChoiceValues[id][option]);
  });
}
var juneCleaverSkipChoices;
function getJuneCleaverskipChoices() {
  return JuneCleaver_exports.skipsRemaining() > 0 ? (juneCleaverSkipChoices || (juneCleaverSkipChoices = _toConsumableArray24(JuneCleaver_exports.choices).sort(function(a, b) {
    return valueJuneCleaverOption(juneCleaverChoiceValues[a][bestJuneCleaverOption(a)]) - valueJuneCleaverOption(juneCleaverChoiceValues[b][bestJuneCleaverOption(b)]);
  }).splice(0, 3)), _toConsumableArray24(juneCleaverSkipChoices)) : [];
}
var juneCleaverChoices = function() {
  return Object.fromEntries(JuneCleaver_exports.choices.map(function(choice) {
    return [choice, getJuneCleaverskipChoices().includes(choice) ? 4 : bestJuneCleaverOption(choice)];
  }));
}, choiceAdventuresValue;
function juneCleaverBonusEquip() {
  var _choiceAdventuresValu;
  return !JuneCleaver_exports.have() || (0, import_kolmafia79.myAdventures)() < get("_juneCleaverFightsLeft") ? /* @__PURE__ */ new Map() : ((_choiceAdventuresValu = choiceAdventuresValue) !== null && _choiceAdventuresValu !== void 0 || (choiceAdventuresValue = sum(_toConsumableArray24(JuneCleaver_exports.choices), function(choice) {
    return valueJuneCleaverOption(juneCleaverChoiceValues[choice][bestJuneCleaverOption(choice)]);
  }) / JuneCleaver_exports.choices.length), /* @__PURE__ */ new Map([[JuneCleaver_exports.cleaver, choiceAdventuresValue / JuneCleaver_exports.getInterval()]]));
}

// src/resources/cmc.ts
init_kolmafia_polyfill();
var import_kolmafia80 = require("kolmafia");
function coldMedicineCabinet() {
  for (var options = (0, import_kolmafia80.visitUrl)("campground.php?action=workshed"), i = 0, match, regexp = /descitem\((\d+)\)/g, itemChoices = /* @__PURE__ */ new Map(); (match = regexp.exec(options)) !== null; ) {
    i++;
    var item10 = (0, import_kolmafia80.descToItem)(match[1]);
    itemChoices.set(item10, i);
  }
  var bestItem = Array.from(itemChoices.keys()).map(function(i2) {
    return [i2, freecandyValue(i2)];
  }).sort(function(a, b) {
    return b[1] - a[1];
  })[0][0], bestChoice = itemChoices.get(bestItem);
  bestChoice && bestChoice > 0 && ((0, import_kolmafia80.visitUrl)("campground.php?action=workshed"), (0, import_kolmafia80.runChoice)(bestChoice));
}

// src/resources/pantsgiving.ts
init_kolmafia_polyfill();
var import_kolmafia81 = require("kolmafia");
init_dist();
var _templateObject571, _templateObject2136, _templateObject3122, _templateObject4104, _templateObject577, _templateObject651, _templateObject747, _templateObject840, _templateObject933, _templateObject1029, _templateObject1125, _templateObject1224, _templateObject1322, _templateObject1419, _templateObject1517;
function _taggedTemplateLiteral68(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var pantsgivingFoods = [{
  food: $item(_templateObject571 || (_templateObject571 = _taggedTemplateLiteral68(["glass of raw eggs"]))),
  costOverride: function() {
    return 0;
  },
  canGet: function() {
    return have($item(_templateObject2136 || (_templateObject2136 = _taggedTemplateLiteral68(["glass of raw eggs"]))));
  }
}, {
  food: $item(_templateObject3122 || (_templateObject3122 = _taggedTemplateLiteral68(["Affirmation Cookie"]))),
  canGet: function() {
    return !0;
  }
}, {
  food: $item(_templateObject4104 || (_templateObject4104 = _taggedTemplateLiteral68(["disco biscuit"]))),
  canGet: function() {
    return !0;
  }
}, {
  food: $item(_templateObject577 || (_templateObject577 = _taggedTemplateLiteral68(["ice rice"]))),
  canGet: function() {
    return !0;
  }
}, {
  food: $item(_templateObject651 || (_templateObject651 = _taggedTemplateLiteral68(["Tea, Earl Grey, Hot"]))),
  canGet: function() {
    return !0;
  }
}, {
  food: $item(_templateObject747 || (_templateObject747 = _taggedTemplateLiteral68(["Dreadsylvanian stew"]))),
  costOverride: function() {
    return 10 / 20 * Math.max(freecandyValue($item(_templateObject840 || (_templateObject840 = _taggedTemplateLiteral68(["electric Kool-Aid"])))), freecandyValue($item(_templateObject933 || (_templateObject933 = _taggedTemplateLiteral68(["bottle of Bloodweiser"])))));
  },
  canGet: function() {
    return have($item(_templateObject1029 || (_templateObject1029 = _taggedTemplateLiteral68(["Freddy Kruegerand"]))), 10) && (0, import_kolmafia81.isAccessible)($coinmaster(_templateObject1125 || (_templateObject1125 = _taggedTemplateLiteral68(["The Terrified Eagle Inn"])))) && (0, import_kolmafia81.myLevel)() >= 20;
  }
}, {
  food: $item(_templateObject1224 || (_templateObject1224 = _taggedTemplateLiteral68(["FantasyRealm turkey leg"]))),
  costOverride: function() {
    return 0;
  },
  canGet: function() {
    return !have($item(_templateObject1322 || (_templateObject1322 = _taggedTemplateLiteral68(["Rubee\u2122"]))), 100) || !get("_frToday") && !get("frAlways") ? !1 : have($item(_templateObject1419 || (_templateObject1419 = _taggedTemplateLiteral68(["FantasyRealm G. E. M."])))) ? !0 : ((0, import_kolmafia81.visitUrl)("place.php?whichplace=realm_fantasy&action=fr_initcenter"), (0, import_kolmafia81.runChoice)(1), have($item(_templateObject1517 || (_templateObject1517 = _taggedTemplateLiteral68(["FantasyRealm G. E. M."])))));
  }
}], bestPantsgivingFood;
function getBestPantsgivingFood() {
  if (!bestPantsgivingFood) {
    var options = pantsgivingFoods.filter(function(_ref) {
      var canGet = _ref.canGet;
      return canGet();
    });
    options.length || (0, import_kolmafia81.abort)("No available pantsgiving foods--this should never happen!"), bestPantsgivingFood = maxBy(options, function(_ref2) {
      var _costOverride, food = _ref2.food, costOverride = _ref2.costOverride;
      return (_costOverride = costOverride == null ? void 0 : costOverride()) !== null && _costOverride !== void 0 ? _costOverride : (0, import_kolmafia81.mallPrice)(food);
    }, !0);
  }
  return bestPantsgivingFood;
}

// src/resources/trainrealm.ts
init_kolmafia_polyfill();
init_dist();
var _templateObject578, _templateObject2137, _templateObject3123, _templateObject4105, _templateObject579, _templateObject654, _templateObject748, _templateObject841, _templateObject934, _templateObject1030, _templateObject1126, _templateObject1225, _templateObject1323, _templateObject1420, _templateObject1518, _templateObject1617, _templateObject1717, _templateObject1817, _templateObject1917, _templateObject2017, _templateObject2138, _templateObject2219, _templateObject2318, _templateObject2416, _templateObject2516, _templateObject2616, _templateObject2716, _templateObject2814, _templateObject2913, _templateObject3013, _templateObject3124, _templateObject3215, _templateObject3315, _templateObject3412, _templateObject3512, _templateObject3612, _templateObject3712, _templateObject3812, _templateObject3912, _templateObject4012, _templateObject4114, _templateObject4213, _templateObject4313, _templateObject4412, _templateObject4512, _templateObject4612, _templateObject4712, _templateObject4812, _templateObject4911;
function _toConsumableArray25(arr) {
  return _arrayWithoutHoles25(arr) || _iterableToArray25(arr) || _unsupportedIterableToArray45(arr) || _nonIterableSpread25();
}
function _nonIterableSpread25() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray45(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray45(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray45(o, minLen);
  }
}
function _iterableToArray25(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles25(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray45(arr);
}
function _arrayLikeToArray45(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _taggedTemplateLiteral69(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var TRAIN_CANDIES = [$item(_templateObject578 || (_templateObject578 = _taggedTemplateLiteral69(["cotton candy bale"]))), $item(_templateObject2137 || (_templateObject2137 = _taggedTemplateLiteral69(["cotton candy cone"]))), $item(_templateObject3123 || (_templateObject3123 = _taggedTemplateLiteral69(["cotton candy pillow"]))), $item(_templateObject4105 || (_templateObject4105 = _taggedTemplateLiteral69(["cotton candy pinch"]))), $item(_templateObject579 || (_templateObject579 = _taggedTemplateLiteral69(["cotton candy plug"]))), $item(_templateObject654 || (_templateObject654 = _taggedTemplateLiteral69(["cotton candy skoshe"]))), $item(_templateObject748 || (_templateObject748 = _taggedTemplateLiteral69(["cotton candy smidgen"]))), $item(_templateObject841 || (_templateObject841 = _taggedTemplateLiteral69(["crazy little Turkish delight"]))), $item(_templateObject934 || (_templateObject934 = _taggedTemplateLiteral69(["Daffy Taffy"]))), $item(_templateObject1030 || (_templateObject1030 = _taggedTemplateLiteral69(["Elvish delight"]))), $item(_templateObject1126 || (_templateObject1126 = _taggedTemplateLiteral69(["explosion-flavored chewing gum"]))), $item(_templateObject1225 || (_templateObject1225 = _taggedTemplateLiteral69(["green candy heart"]))), $item(_templateObject1323 || (_templateObject1323 = _taggedTemplateLiteral69(["green gummi ingot"]))), $item(_templateObject1420 || (_templateObject1420 = _taggedTemplateLiteral69(["gummi canary"]))), $item(_templateObject1518 || (_templateObject1518 = _taggedTemplateLiteral69(["gummi salamander"]))), $item(_templateObject1617 || (_templateObject1617 = _taggedTemplateLiteral69(["gummi snake"]))), $item(_templateObject1717 || (_templateObject1717 = _taggedTemplateLiteral69(["Gummi-Gnauga"]))), $item(_templateObject1817 || (_templateObject1817 = _taggedTemplateLiteral69(["honey stick"]))), $item(_templateObject1917 || (_templateObject1917 = _taggedTemplateLiteral69(["honey-dipped locust"]))), $item(_templateObject2017 || (_templateObject2017 = _taggedTemplateLiteral69(["jaba\xF1ero-flavored chewing gum"]))), $item(_templateObject2138 || (_templateObject2138 = _taggedTemplateLiteral69(["lavender candy heart"]))), $item(_templateObject2219 || (_templateObject2219 = _taggedTemplateLiteral69(["lime-and-chile-flavored chewing gum"]))), $item(_templateObject2318 || (_templateObject2318 = _taggedTemplateLiteral69(["marzipan skull"]))), $item(_templateObject2416 || (_templateObject2416 = _taggedTemplateLiteral69(["Mr. Mediocrebar"]))), $item(_templateObject2516 || (_templateObject2516 = _taggedTemplateLiteral69(["orange candy heart"]))), $item(_templateObject2616 || (_templateObject2616 = _taggedTemplateLiteral69(["pack of chewing gum"]))), $item(_templateObject2716 || (_templateObject2716 = _taggedTemplateLiteral69(["pickle-flavored chewing gum"]))), $item(_templateObject2814 || (_templateObject2814 = _taggedTemplateLiteral69(["Piddles"]))), $item(_templateObject2913 || (_templateObject2913 = _taggedTemplateLiteral69(["pile of candy"]))), $item(_templateObject3013 || (_templateObject3013 = _taggedTemplateLiteral69(["pink candy heart"]))), $item(_templateObject3124 || (_templateObject3124 = _taggedTemplateLiteral69(["pixellated candy heart"]))), $item(_templateObject3215 || (_templateObject3215 = _taggedTemplateLiteral69(["Polka Pop"]))), $item(_templateObject3315 || (_templateObject3315 = _taggedTemplateLiteral69(["red gummi ingot"]))), $item(_templateObject3412 || (_templateObject3412 = _taggedTemplateLiteral69(["Rock Pops"]))), $item(_templateObject3512 || (_templateObject3512 = _taggedTemplateLiteral69(["Senior Mints"]))), $item(_templateObject3612 || (_templateObject3612 = _taggedTemplateLiteral69(["Steal This Candy"]))), $item(_templateObject3712 || (_templateObject3712 = _taggedTemplateLiteral69(["Sugar Cog"]))), $item(_templateObject3812 || (_templateObject3812 = _taggedTemplateLiteral69(["sugar shard"]))), $item(_templateObject3912 || (_templateObject3912 = _taggedTemplateLiteral69(["tamarind-flavored chewing gum"]))), $item(_templateObject4012 || (_templateObject4012 = _taggedTemplateLiteral69(["Tasty Fun Good rice candy"]))), $item(_templateObject4114 || (_templateObject4114 = _taggedTemplateLiteral69(["white candy heart"]))), $item(_templateObject4213 || (_templateObject4213 = _taggedTemplateLiteral69(["white chocolate chips"]))), $item(_templateObject4313 || (_templateObject4313 = _taggedTemplateLiteral69(["Wint-O-Fresh mint"]))), $item(_templateObject4412 || (_templateObject4412 = _taggedTemplateLiteral69(["yellow candy heart"]))), $item(_templateObject4512 || (_templateObject4512 = _taggedTemplateLiteral69(["yellow gummi ingot"]))), $item(_templateObject4612 || (_templateObject4612 = _taggedTemplateLiteral69(["Yummy Tummy bean"])))], _candyFactoryValue;
function candyFactoryValue() {
  var _candyFactoryValue2;
  return (_candyFactoryValue2 = _candyFactoryValue) !== null && _candyFactoryValue2 !== void 0 ? _candyFactoryValue2 : _candyFactoryValue = freecandyAverageValue.apply(void 0, TRAIN_CANDIES);
}
var GOOD_TRAIN_STATIONS = [{
  piece: TrainSet_exports.Station.GAIN_MEAT,
  value: function() {
    return 900;
  }
}, {
  // Some day this'll be better
  piece: TrainSet_exports.Station.TRACKSIDE_DINER,
  value: function() {
    return freecandyAverageValue.apply(void 0, _toConsumableArray25($items(_templateObject4712 || (_templateObject4712 = _taggedTemplateLiteral69(["bowl of cottage cheese, hot buttered roll, toast"])))));
  }
}, {
  piece: TrainSet_exports.Station.CANDY_FACTORY,
  value: candyFactoryValue
}, {
  piece: TrainSet_exports.Station.GRAIN_SILO,
  value: function() {
    return 2 * freecandyAverageValue.apply(void 0, _toConsumableArray25($items(_templateObject4812 || (_templateObject4812 = _taggedTemplateLiteral69(["bottle of gin, bottle of vodka, bottle of whiskey, bottle of rum, bottle of tequila, boxed wine"])))));
  }
}, {
  piece: TrainSet_exports.Station.ORE_HOPPER,
  value: function() {
    return freecandyAverageValue.apply(void 0, _toConsumableArray25($items(_templateObject4911 || (_templateObject4911 = _taggedTemplateLiteral69(["linoleum ore, asbestos ore, chrome ore, teflon ore, vinyl ore, velcro ore, bubblewrap ore, cardboard ore, styrofoam ore"])))));
  }
}], trainCycle;
function getBestCycle() {
  if (!trainCycle) {
    var cycle2 = [TrainSet_exports.Station.COAL_HOPPER].concat(_toConsumableArray25(GOOD_TRAIN_STATIONS.sort(function(_ref, _ref2) {
      var a = _ref.value, b = _ref2.value;
      return b() - a();
    }).map(function(_ref3) {
      var piece = _ref3.piece;
      return piece;
    })), [TrainSet_exports.Station.TOWER_FIZZY, TrainSet_exports.Station.VIEWING_PLATFORM]);
    trainCycle = cycle2;
  }
  return _toConsumableArray25(trainCycle);
}
function valueStation(station) {
  var _GOOD_TRAIN_STATIONS$, _GOOD_TRAIN_STATIONS$2;
  return station === TrainSet_exports.Station.COAL_HOPPER ? valueStation(getBestCycle()[1]) : (_GOOD_TRAIN_STATIONS$ = (_GOOD_TRAIN_STATIONS$2 = GOOD_TRAIN_STATIONS.find(function(_ref4) {
    var piece = _ref4.piece;
    return piece === station;
  })) === null || _GOOD_TRAIN_STATIONS$2 === void 0 ? void 0 : _GOOD_TRAIN_STATIONS$2.value()) !== null && _GOOD_TRAIN_STATIONS$ !== void 0 ? _GOOD_TRAIN_STATIONS$ : 0;
}
function valueOffset(offset) {
  var firstFortyTurns = 5 * sum(getBestCycle(), valueStation), extraTurns = sum(getBestCycle().slice(0, offset - 1), valueStation);
  return (firstFortyTurns + extraTurns) / (40 + offset);
}
var bestOffset = null;
function getBestOffset() {
  var _bestOffset;
  return (_bestOffset = bestOffset) !== null && _bestOffset !== void 0 ? _bestOffset : bestOffset = maxBy([2, 3, 4, 5, 6, 7, 8], valueOffset);
}
function getPrioritizedStations() {
  return getBestCycle().slice(0, getBestOffset() - 1);
}
function getRotatedCycle() {
  for (var offset = get("trainsetPosition") % 8, newPieces = [], defaultPieces = getBestCycle(), i = 0; i < 8; i++) {
    var newPos = (i + offset) % 8;
    newPieces[newPos] = defaultPieces[i];
  }
  return newPieces;
}
function rotateTrainToOptimalCycle() {
  return TrainSet_exports.setConfiguration(getRotatedCycle());
}
function willRotateTrainset() {
  return TrainSet_exports.canConfigure() && (!get("trainsetConfiguration") || !getPrioritizedStations().includes(TrainSet_exports.next()) && !arrayEquals(getRotatedCycle(), TrainSet_exports.cycle()));
}

// src/outfit.ts
init_kolmafia_polyfill();
var import_kolmafia82 = require("kolmafia");
init_dist();
var _templateObject580, _templateObject2139, _templateObject3125, _templateObject4106, _templateObject581, _templateObject655, _templateObject749, _templateObject844, _templateObject935, _templateObject1031, _templateObject1127, _templateObject1226, _templateObject1324, _templateObject1421, _templateObject1519, _templateObject1618, _templateObject1718, _templateObject1818, _templateObject1918, _templateObject2018, _templateObject2140, _templateObject2220, _templateObject2319, _templateObject2417, _templateObject2517, _templateObject2617, _templateObject2717, _templateObject2815, _templateObject2914, _templateObject3014, _templateObject3126, _templateObject3216, _templateObject3316, _templateObject3413, _templateObject3513, _templateObject3613, _templateObject3713, _templateObject3813, _templateObject3913, _templateObject4013, _templateObject4115, _templateObject4214, _templateObject4314, _templateObject4413, _templateObject4513, _templateObject4613, _templateObject4713, _templateObject4813, _templateObject4912, _templateObject5010, _templateObject5113, _templateObject5212, _templateObject5312, _templateObject5412, _templateObject5511, _templateObject5610, _templateObject5710, _templateObject587, _templateObject596, _templateObject606, _templateObject6112;
function _createForOfIteratorHelper24(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray46(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e2) {
        throw _e2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e3) {
    didErr = !0, err = _e3;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _taggedTemplateLiteral70(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray26(arr) {
  return _arrayWithoutHoles26(arr) || _iterableToArray26(arr) || _unsupportedIterableToArray46(arr) || _nonIterableSpread26();
}
function _nonIterableSpread26() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray26(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles26(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray46(arr);
}
function _slicedToArray25(arr, i) {
  return _arrayWithHoles25(arr) || _iterableToArrayLimit25(arr, i) || _unsupportedIterableToArray46(arr, i) || _nonIterableRest25();
}
function _nonIterableRest25() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray46(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray46(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray46(o, minLen);
  }
}
function _arrayLikeToArray46(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit25(arr, i) {
  var _i = arr == null ? null : typeof Symbol != "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles25(arr) {
  if (Array.isArray(arr))
    return arr;
}
function treatValue(outfit2) {
  return sum(Object.entries((0, import_kolmafia82.outfitTreats)(outfit2)), function(_ref) {
    var _ref2 = _slicedToArray25(_ref, 2), candyName = _ref2[0], probability = _ref2[1];
    return probability * freecandyValue((0, import_kolmafia82.toItem)(candyName));
  });
}
function dropsValueFunction(drops) {
  return Array.isArray(drops) ? freecandyAverageValue.apply(void 0, _toConsumableArray26(drops)) : sum(_toConsumableArray26(drops.entries()), function(_ref3) {
    var _ref4 = _slicedToArray25(_ref3, 2), item10 = _ref4[0], quantity = _ref4[1];
    return quantity * freecandyValue(item10);
  }) / sumNumbers(_toConsumableArray26(drops.values()));
}
function ensureBjorn(weightValue) {
  var meatValue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, key = "weight:".concat(weightValue.toFixed(3), ";meat:").concat(meatValue);
  CrownOfThrones_exports.hasRiderMode(key) || CrownOfThrones_exports.createRiderMode(key, {
    dropsValueFunction: dropsValueFunction,
    modifierValueFunction: CrownOfThrones_exports.createModifierValueFunction(["Familiar Weight", "Meat Drop"], {
      "Familiar Weight": function(x) {
        return weightValue * x;
      },
      "Meat Drop": function(x) {
        return meatValue * x;
      }
    })
  });
  var result = CrownOfThrones_exports.pickRider(key);
  return result || (0, import_kolmafia82.abort)("Failed to make sensible bjorn decision!"), result;
}
function getTreatOutfit() {
  if (!args_default.treatOutfit) {
    var availableOutfits = (0, import_kolmafia82.getOutfits)().filter(function(name) {
      return (0, import_kolmafia82.outfitPieces)(name).every(function(piece) {
        return (0, import_kolmafia82.canEquip)(piece);
      });
    });
    printError("No treatOutfit given--doing some math to decide what to use"), availableOutfits.length || (0, import_kolmafia82.abort)("You don't seem to actually have any outfits available, my friend!"), args_default.treatOutfit = maxBy(availableOutfits, treatValue), printHighlight("We have a winner! We'll be trick-or-treating with ".concat(args_default.treatOutfit, "."));
  }
  return args_default.treatOutfit;
}
var _baseAdventureValue;
function baseAdventureValue() {
  if (!_baseAdventureValue) {
    var outfitCandyValue = treatValue(getTreatOutfit()), totOutfitCandyMultiplier = have($familiar(_templateObject580 || (_templateObject580 = _taggedTemplateLiteral70(["Trick-or-Treating Tot"])))) ? 1.6 : 1, bowlValue = 1 / 5 * freecandyValue($item(_templateObject2139 || (_templateObject2139 = _taggedTemplateLiteral70(["huge bowl of candy"])))), prunetsValue = have($familiar(_templateObject3125 || (_templateObject3125 = _taggedTemplateLiteral70(["Trick-or-Treating Tot"])))) ? 4 * 0.2 * freecandyValue($item(_templateObject4106 || (_templateObject4106 = _taggedTemplateLiteral70(["Prunets"])))) : 0, outfitCandyTotal = 3 * outfitCandyValue * totOutfitCandyMultiplier;
    _baseAdventureValue = 1 / 5 * (outfitCandyTotal + bowlValue + prunetsValue);
  }
  return _baseAdventureValue;
}
function snowSuit() {
  return !have($item(_templateObject581 || (_templateObject581 = _taggedTemplateLiteral70(["Snow Suit"])))) || get("_carrotNoseDrops") >= 3 ? /* @__PURE__ */ new Map([]) : /* @__PURE__ */ new Map([[$item(_templateObject655 || (_templateObject655 = _taggedTemplateLiteral70(["Snow Suit"]))), freecandyValue($item(_templateObject749 || (_templateObject749 = _taggedTemplateLiteral70(["carrot nose"])))) / 10]]);
}
function mayflowerBouquet() {
  if (!have($item(_templateObject844 || (_templateObject844 = _taggedTemplateLiteral70(["Mayflower bouquet"])))) || get("_mayflowerDrops") >= 10)
    return /* @__PURE__ */ new Map([]);
  var averageFlowerValue = freecandyAverageValue.apply(void 0, _toConsumableArray26($items(_templateObject935 || (_templateObject935 = _taggedTemplateLiteral70(["tin magnolia, upsy daisy, lesser grodulated violet, half-orchid, begpwnia"]))))) * Math.max(0.01, 0.5 - get("_mayflowerDrops") * 0.11);
  return /* @__PURE__ */ new Map([[$item(_templateObject1031 || (_templateObject1031 = _taggedTemplateLiteral70(["Mayflower bouquet"]))), averageFlowerValue]]);
}
function sweatpants() {
  if (!have($item(_templateObject1127 || (_templateObject1127 = _taggedTemplateLiteral70(["designer sweatpants"])))))
    return /* @__PURE__ */ new Map();
  var needSweat = get("sweat") < 25 * (3 - get("_sweatOutSomeBoozeUsed"));
  if (!needSweat)
    return /* @__PURE__ */ new Map();
  var VOA = get("valueOfAdventure"), bestPerfectDrink = maxBy($items(_templateObject1226 || (_templateObject1226 = _taggedTemplateLiteral70(["perfect cosmopolitan, perfect negroni, perfect dark and stormy, perfect mimosa, perfect old-fashioned, perfect paloma"]))), import_kolmafia82.mallPrice, !0), perfectDrinkValuePerDrunk = (getAverageAdventures(bestPerfectDrink) * VOA - (0, import_kolmafia82.mallPrice)(bestPerfectDrink)) / 3, splendidMartiniValuePerDrunk = (getAverageAdventures($item(_templateObject1324 || (_templateObject1324 = _taggedTemplateLiteral70(["splendid martini"])))) + 2) * VOA - (0, import_kolmafia82.mallPrice)($item(_templateObject1421 || (_templateObject1421 = _taggedTemplateLiteral70(["splendid martini"])))), bonus = Math.max(perfectDrinkValuePerDrunk, splendidMartiniValuePerDrunk) * 2 / 25;
  return /* @__PURE__ */ new Map([[$item(_templateObject1519 || (_templateObject1519 = _taggedTemplateLiteral70(["designer sweatpants"]))), bonus]]);
}
function pantogram2() {
  return !have($item(_templateObject1618 || (_templateObject1618 = _taggedTemplateLiteral70(["pantogram pants"])))) || !get("_pantogramModifier").includes("Drops Items") ? /* @__PURE__ */ new Map() : /* @__PURE__ */ new Map([[$item(_templateObject1718 || (_templateObject1718 = _taggedTemplateLiteral70(["pantogram pants"]))), 100]]);
}
var _sneegleebDropValue;
function sneegleebDropValue() {
  var _sneegleebDropValue2;
  return (_sneegleebDropValue2 = _sneegleebDropValue) !== null && _sneegleebDropValue2 !== void 0 ? _sneegleebDropValue2 : _sneegleebDropValue = 0.13 * sum(import_kolmafia82.Item.all().filter(function(i) {
    return i.tradeable && i.discardable && (i.inebriety || i.fullness || i.potion);
  }), function(i) {
    return clamp(freecandyValue(i), 0, 1e5);
  });
}
function reallyEasyBonuses() {
  return new Map([[$item(_templateObject1818 || (_templateObject1818 = _taggedTemplateLiteral70(["lucky gold ring"]))), 400], [$item(_templateObject1918 || (_templateObject1918 = _taggedTemplateLiteral70(["Mr. Cheeng's spectacles"]))), 250], [$item(_templateObject2018 || (_templateObject2018 = _taggedTemplateLiteral70(["Mr. Screege's spectacles"]))), 180], [$item(_templateObject2140 || (_templateObject2140 = _taggedTemplateLiteral70(["KoL Con 13 snowglobe"]))), sneegleebDropValue()], [$item(_templateObject2220 || (_templateObject2220 = _taggedTemplateLiteral70(["can of mixed everything"]))), sneegleebDropValue() / 2], [$item(_templateObject2319 || (_templateObject2319 = _taggedTemplateLiteral70(["tiny stillsuit"]))), 69]].filter(function(_ref5) {
    var _ref6 = _slicedToArray25(_ref5, 1), item10 = _ref6[0];
    return have(item10);
  }));
}
function easyBonuses() {
  return new Map([].concat(_toConsumableArray26(reallyEasyBonuses()), _toConsumableArray26(juneCleaverBonusEquip()), _toConsumableArray26(snowSuit()), _toConsumableArray26(mayflowerBouquet()), _toConsumableArray26(sweatpants()), _toConsumableArray26(pantogram2())));
}
var estimatedOutfitWeight;
function getEstimatedOutfitWeight() {
  if (!estimatedOutfitWeight) {
    var bonuses = easyBonuses(), freeAccessories = 3 - clamp(_toConsumableArray26(easyBonuses().keys()).length, 0, 3), openSlots = [].concat(_toConsumableArray26($slots(_templateObject2417 || (_templateObject2417 = _taggedTemplateLiteral70(["shirt, weapon, off-hand"])))), _toConsumableArray26(have($item(_templateObject2517 || (_templateObject2517 = _taggedTemplateLiteral70(["Buddy Bjorn"])))) ? [] : $slots(_templateObject2617 || (_templateObject2617 = _taggedTemplateLiteral70(["back"])))), _toConsumableArray26(bonuses.has($item(_templateObject2717 || (_templateObject2717 = _taggedTemplateLiteral70(["pantogram pants"])))) ? [] : $slots(_templateObject2815 || (_templateObject2815 = _taggedTemplateLiteral70(["pants"]))))), viableItems = import_kolmafia82.Item.all().filter(function(item10) {
      return have(item10) && (openSlots.includes((0, import_kolmafia82.toSlot)(item10)) || (0, import_kolmafia82.toSlot)(item10) === $slot(_templateObject2914 || (_templateObject2914 = _taggedTemplateLiteral70(["acc1"]))) && freeAccessories > 0);
    }), nonAccessoryWeightEquips = openSlots.map(function(slot) {
      return maxBy(viableItems.filter(function(item10) {
        return (0, import_kolmafia82.toSlot)(item10) === slot;
      }), function(item10) {
        return (0, import_kolmafia82.numericModifier)(item10, "Familiar Weight");
      });
    }), accessoryWeightEquips = freeAccessories ? viableItems.filter(function(item10) {
      return (0, import_kolmafia82.toSlot)(item10) === $slot(_templateObject3014 || (_templateObject3014 = _taggedTemplateLiteral70(["acc1"])));
    }).sort(function(a, b) {
      return (0, import_kolmafia82.numericModifier)(b, "Familiar Weight") - (0, import_kolmafia82.numericModifier)(a, "Familiar Weight");
    }).splice(0, freeAccessories) : [];
    estimatedOutfitWeight = sum([].concat(_toConsumableArray26(accessoryWeightEquips), _toConsumableArray26(nonAccessoryWeightEquips)), function(item10) {
      return (0, import_kolmafia82.numericModifier)(item10, "Familiar Weight");
    }) + (have($familiar(_templateObject3126 || (_templateObject3126 = _taggedTemplateLiteral70(["Temporal Riftlet"])))) ? 10 : 0) + (have($skill(_templateObject3216 || (_templateObject3216 = _taggedTemplateLiteral70(["Amphibian Sympathy"])))) ? 5 : 0);
  }
  return estimatedOutfitWeight;
}
var effectWeight;
function getEffectWeight() {
  return effectWeight || (effectWeight = sum(Object.entries((0, import_kolmafia82.myEffects)()).map(function(_ref7) {
    var _ref8 = _slicedToArray25(_ref7, 2), name = _ref8[0], duration = _ref8[1];
    return {
      effect: (0, import_kolmafia82.toEffect)(name),
      duration: duration
    };
  }).filter(function(_ref9) {
    var effect2 = _ref9.effect, duration = _ref9.duration;
    return (0, import_kolmafia82.numericModifier)(effect2, "Familiar Weight") && duration >= (0, import_kolmafia82.myAdventures)();
  }), function(_ref10) {
    var effect2 = _ref10.effect;
    return (0, import_kolmafia82.numericModifier)(effect2, "Familiar Weight");
  })), effectWeight;
}
function overallAdventureValue() {
  var _bjornChoice$dropPred, _bjornChoice$dropPred2, bonuses = easyBonuses(), bjornChoice = ensureBjorn(0), bjornValue = bjornChoice && (!((_bjornChoice$dropPred = (_bjornChoice$dropPred2 = bjornChoice.dropPredicate) === null || _bjornChoice$dropPred2 === void 0 ? void 0 : _bjornChoice$dropPred2.call(bjornChoice)) !== null && _bjornChoice$dropPred !== void 0) || _bjornChoice$dropPred) ? bjornChoice.probability * (typeof bjornChoice.drops == "number" ? bjornChoice.drops : dropsValueFunction(bjornChoice.drops)) : 0, itemAndMeatValue = sum(import_kolmafia82.Slot.all(), function(slot) {
    var _bonuses$get;
    return (_bonuses$get = bonuses.get((0, import_kolmafia82.equippedItem)(slot))) !== null && _bonuses$get !== void 0 ? _bonuses$get : 0;
  }) + baseAdventureValue() + ((0, import_kolmafia82.haveEquipped)($item(_templateObject3316 || (_templateObject3316 = _taggedTemplateLiteral70(["Buddy Bjorn"])))) || (0, import_kolmafia82.haveEquipped)($item(_templateObject3413 || (_templateObject3413 = _taggedTemplateLiteral70(["Crown of Thrones"])))) ? bjornValue : 0), stasisData = stasisFamiliars.get(args_default.familiar);
  return stasisData ? itemAndMeatValue + (20 + getEstimatedOutfitWeight() + getEffectWeight()) * stasisData.meatPerLb * clamp(stasisData.baseRate + actionRateBonus(), 0, 1) : adventureFamiliars.includes(args_default.familiar) ? itemAndMeatValue * 1e3 / (1e3 - getEffectWeight() - getEstimatedOutfitWeight() - 20) : itemAndMeatValue;
}
function pantsgiving() {
  var _turnArray$index, _costOverride;
  if (!have($item(_templateObject3513 || (_templateObject3513 = _taggedTemplateLiteral70(["Pantsgiving"])))))
    return /* @__PURE__ */ new Map();
  var count = get("_pantsgivingCount"), turnArray = [5, 50, 500, 5e3], index = (0, import_kolmafia82.myFullness)() === (0, import_kolmafia82.fullnessLimit)() ? get("_pantsgivingFullness") : turnArray.findIndex(function(x) {
    return count < x;
  }), turns = (_turnArray$index = turnArray[index]) !== null && _turnArray$index !== void 0 ? _turnArray$index : 5e4;
  if (turns - count > (0, import_kolmafia82.myAdventures)())
    return /* @__PURE__ */ new Map();
  var _getBestPantsgivingFo = getBestPantsgivingFood(), food = _getBestPantsgivingFo.food, costOverride = _getBestPantsgivingFo.costOverride, fullnessValue = overallAdventureValue() * (getAverageAdventures(food) + 1 + (get("_fudgeSporkUsed") ? 3 : 0)) - ((_costOverride = costOverride == null ? void 0 : costOverride()) !== null && _costOverride !== void 0 ? _costOverride : (0, import_kolmafia82.mallPrice)(food)) - (0, import_kolmafia82.mallPrice)($item(_templateObject3613 || (_templateObject3613 = _taggedTemplateLiteral70(["Special Seasoning"])))) - (get("_fudgeSporkUsed") ? (0, import_kolmafia82.mallPrice)($item(_templateObject3713 || (_templateObject3713 = _taggedTemplateLiteral70(["fudge spork"])))) : 0), pantsgivingBonus = fullnessValue / (turns * 0.9);
  return /* @__PURE__ */ new Map([[$item(_templateObject3813 || (_templateObject3813 = _taggedTemplateLiteral70(["Pantsgiving"]))), pantsgivingBonus]]);
}
function fullBonuses() {
  return new Map([].concat(_toConsumableArray26(easyBonuses()), _toConsumableArray26(pantsgiving())));
}
function treatOutfit() {
  var outfit2 = new Outfit(), pieces3 = (0, import_kolmafia82.outfitPieces)(getTreatOutfit()), _iterator = _createForOfIteratorHelper24(pieces3), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var piece = _step.value;
      outfit2.equip(piece) || (0, import_kolmafia82.abort)("Could not equip all pieces of treat outfit: aborted on ".concat(piece));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return outfit2.equip($familiar(_templateObject3913 || (_templateObject3913 = _taggedTemplateLiteral70(["Trick-or-Treating Tot"])))), outfit2;
}
var adventureFamiliars = $familiars(_templateObject4013 || (_templateObject4013 = _taggedTemplateLiteral70(["Temporal Riftlet, Reagnimated Gnome"]))), MAGIC_NUMBER = 0.00123839009288, stasisFamiliars = /* @__PURE__ */ new Map([[$familiar(_templateObject4115 || (_templateObject4115 = _taggedTemplateLiteral70(["Ninja Pirate Zombie Robot"]))), {
  baseRate: 1 / 2,
  meatPerLb: 14.52
}], [$familiar(_templateObject4214 || (_templateObject4214 = _taggedTemplateLiteral70(["Cocoabo"]))), {
  baseRate: 1 / 3,
  meatPerLb: 13.2
}], [$familiar(_templateObject4314 || (_templateObject4314 = _taggedTemplateLiteral70(["Stocking Mimic"]))), {
  baseRate: 1 / 3,
  meatPerLb: 13.2
}], [$familiar(_templateObject4413 || (_templateObject4413 = _taggedTemplateLiteral70(["Feather Boa Constrictor"]))), {
  baseRate: 1 / 3,
  meatPerLb: 27.5
}]]), actionRateBonus = function() {
  return (0, import_kolmafia82.numericModifier)("Familiar Action Bonus") / 100 + ($items(_templateObject4513 || (_templateObject4513 = _taggedTemplateLiteral70(["short stack of pancakes, short stick of butter, short glass of water"]))).map(function(item10) {
    return (0, import_kolmafia82.effectModifier)(item10, "Effect");
  }).some(function(effect2) {
    return have(effect2);
  }) ? 1 : 0);
};
function combatOutfit() {
  var base = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, outfit2 = Outfit.from(base, new Error("Failed to construct outfit from spec ".concat((0, import_kolmafia82.toJson)(base))));
  outfit2.equip(args_default.familiar), outfit2.familiar === $familiar(_templateObject4613 || (_templateObject4613 = _taggedTemplateLiteral70(["Reagnimated Gnome"]))) && outfit2.equip($item(_templateObject4713 || (_templateObject4713 = _taggedTemplateLiteral70(["gnomish housemaid's kgnee"])))), get("questPAGhost") === "unstarted" && get("nextParanormalActivity") <= (0, import_kolmafia82.totalTurnsPlayed)() && (0, import_kolmafia82.myInebriety)() <= (0, import_kolmafia82.inebrietyLimit)() && outfit2.equip($item(_templateObject4813 || (_templateObject4813 = _taggedTemplateLiteral70(["protonic accelerator pack"]))));
  var weightValue = 0;
  if (outfit2.familiar || (0, import_kolmafia82.abort)("It looks like we're about to go adventuring without a familiar, and that feels deeply wrong"), adventureFamiliars.includes(outfit2.familiar))
    weightValue = Math.round(MAGIC_NUMBER * baseAdventureValue() * 100) / 100;
  else {
    var stasisData = stasisFamiliars.get(outfit2.familiar);
    if (stasisData) {
      var actionRate = stasisData.baseRate + actionRateBonus();
      actionRate < 1 && getFoldGroup($item(_templateObject4912 || (_templateObject4912 = _taggedTemplateLiteral70(["Loathing Legion helicopter"])))).some(function(foldable) {
        return have(foldable);
      }) && outfit2.equip($item(_templateObject5010 || (_templateObject5010 = _taggedTemplateLiteral70(["Loathing Legion helicopter"]))));
      var fullRate = clamp(actionRate + (outfit2.haveEquipped($item(_templateObject5113 || (_templateObject5113 = _taggedTemplateLiteral70(["Loathing Legion helicopter"])))) ? 0.25 : 0), 0, 1);
      weightValue = fullRate * stasisData.meatPerLb;
    } else
      SongBoom_exports.song() === "Total Eclipse of Your Meat" ? outfit2.modifier.push("0.25 Meat Drop") : outfit2.modifier.push("0.01 Item Drop");
  }
  if (weightValue) {
    var rounded = Math.round(1e3 * weightValue) / 1e3;
    outfit2.modifier.push("".concat(rounded, " Familiar Weight"));
  }
  var bjornChoice = ensureBjorn(weightValue);
  return have($item(_templateObject5212 || (_templateObject5212 = _taggedTemplateLiteral70(["Buddy Bjorn"])))) ? (outfit2.equip($item(_templateObject5312 || (_templateObject5312 = _taggedTemplateLiteral70(["Buddy Bjorn"])))), outfit2.bjornify(bjornChoice.familiar)) : have($item(_templateObject5412 || (_templateObject5412 = _taggedTemplateLiteral70(["Crown of Thrones"])))) && (outfit2.equip($item(_templateObject5511 || (_templateObject5511 = _taggedTemplateLiteral70(["Crown of Thrones"])))), outfit2.enthrone(bjornChoice.familiar)), outfit2.setBonuses(fullBonuses()), outfit2;
}
var askedAboutTwoPiece = !1, trickHats = $items(_templateObject5610 || (_templateObject5610 = _taggedTemplateLiteral70(["invisible bag, witch hat, beholed bedsheet, wolfman mask, pumpkinhead mask, mummy costume"]))), twoPieces = ["Eldritch Equipage", "Bugbear Costume", "Filthy Hippy Disguise"];
function trickOutfit() {
  if (args_default.trickOutfit) {
    var outfit2 = new Outfit();
    outfit2.equip(args_default.familiar);
    var _iterator2 = _createForOfIteratorHelper24((0, import_kolmafia82.outfitPieces)(args_default.trickOutfit)), _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
        var piece = _step2.value;
        outfit2.equip(piece) || (0, import_kolmafia82.abort)("Failed to equip ".concat(piece, " from trick outfit ").concat(args_default.trickOutfit));
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return outfit2;
  }
  trickHats.some(function(hat) {
    return have(hat);
  }) || (0, import_kolmafia82.buy)(1, maxBy(trickHats, import_kolmafia82.mallPrice, !0));
  var trickHat = trickHats.find(function(i) {
    return have(i);
  });
  if (!trickHat) {
    var twoPiece = twoPieces.find(function(outfit3) {
      return (0, import_kolmafia82.outfitPieces)(outfit3).every(function(i) {
        return have(i) && (0, import_kolmafia82.canEquip)(i);
      });
    });
    twoPiece || (0, import_kolmafia82.abort)("Unable to find a good 1-piece or 2-piece outfit for trick-or-treating"), !askedAboutTwoPiece && !(0, import_kolmafia82.userConfirm)("We don't have access to a one-piece outfit, but we did find a two-piece outfit. Is that alright?") ? (printError("We cannot create a good trick outfit, and must give up."), (0, import_kolmafia82.abort)()) : askedAboutTwoPiece = !0;
    var _outfit = new Outfit(), _iterator3 = _createForOfIteratorHelper24((0, import_kolmafia82.outfitPieces)(twoPiece)), _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
        var _piece = _step3.value;
        _outfit.equip(_piece) || (0, import_kolmafia82.abort)("Unable to equip ".concat(_piece, " from ").concat(twoPiece, "!"));
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return combatOutfit(_outfit.spec());
  }
  return combatOutfit({
    hat: trickHat
  });
}
function digitizeOutfit() {
  if (get("_sourceTerminalDigitizeMonster") === $monster(_templateObject5710 || (_templateObject5710 = _taggedTemplateLiteral70(["Knob Goblin Embezzler"])))) {
    var outfit2 = new Outfit(), meatFamiliar = maxBy(import_kolmafia82.Familiar.all().filter(function(f) {
      return have(f);
    }), findLeprechaunMultiplier);
    outfit2.equip(meatFamiliar);
    var baseMeat = 1e3 + (SongBoom_exports.song() === "Total Eclipse of Your Meat" ? 25 : 0), leprechaunMultiplier = findLeprechaunMultiplier(meatFamiliar), leprechaunCoefficient = baseMeat / 100 * (2 * leprechaunMultiplier + Math.sqrt(leprechaunMultiplier)), bjornChoice = ensureBjorn(leprechaunCoefficient, baseMeat / 100);
    return have($item(_templateObject587 || (_templateObject587 = _taggedTemplateLiteral70(["Buddy Bjorn"])))) ? (outfit2.equip($item(_templateObject596 || (_templateObject596 = _taggedTemplateLiteral70(["Buddy Bjorn"])))), outfit2.bjornify(bjornChoice.familiar)) : have($item(_templateObject606 || (_templateObject606 = _taggedTemplateLiteral70(["Crown of Thrones"])))) && (outfit2.equip($item(_templateObject6112 || (_templateObject6112 = _taggedTemplateLiteral70(["Crown of Thrones"])))), outfit2.enthrone(bjornChoice.familiar)), outfit2.modifier.push("".concat(baseMeat / 100, " Meat Drop")), outfit2.modifier.push("0.72 Item Drop"), outfit2.setBonuses(fullBonuses()), outfit2;
  }
  return combatOutfit();
}

// src/combat.ts
init_kolmafia_polyfill();
init_dist();
var import_kolmafia83 = require("kolmafia");
var _templateObject588, _templateObject2141, _templateObject3127, _templateObject4107, _templateObject589, _templateObject656, _templateObject750, _templateObject845, _templateObject936, _templateObject1032, _templateObject1128, _templateObject1227, _templateObject1325, _templateObject1422, _templateObject1520, _templateObject1619, _templateObject1719, _templateObject1819, _templateObject1919, _templateObject2019, _templateObject2142, _templateObject2221, _templateObject2320, _templateObject2418, _templateObject2518, _templateObject2618, _templateObject2718, _templateObject2816, _templateObject2915, _templateObject3015, _templateObject3128, _templateObject3217;
function _taggedTemplateLiteral71(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray27(arr) {
  return _arrayWithoutHoles27(arr) || _iterableToArray27(arr) || _unsupportedIterableToArray47(arr) || _nonIterableSpread27();
}
function _nonIterableSpread27() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray47(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray47(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray47(o, minLen);
  }
}
function _iterableToArray27(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles27(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray47(arr);
}
function _arrayLikeToArray47(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _classCallCheck26(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties20(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass20(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties20(Constructor.prototype, protoProps), staticProps && _defineProperties20(Constructor, staticProps), Constructor;
}
function _inherits9(subClass, superClass) {
  if (typeof superClass != "function" && superClass !== null)
    throw new TypeError("Super expression must either be null or a function");
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), superClass && _setPrototypeOf9(subClass, superClass);
}
function _setPrototypeOf9(o, p) {
  return _setPrototypeOf9 = Object.setPrototypeOf || function(o2, p2) {
    return o2.__proto__ = p2, o2;
  }, _setPrototypeOf9(o, p);
}
function _createSuper8(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct8();
  return function() {
    var Super = _getPrototypeOf8(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf8(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else
      result = Super.apply(this, arguments);
    return _possibleConstructorReturn8(this, result);
  };
}
function _possibleConstructorReturn8(self, call) {
  if (call && (typeof call == "object" || typeof call == "function"))
    return call;
  if (call !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized8(self);
}
function _assertThisInitialized8(self) {
  if (self === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return self;
}
function _isNativeReflectConstruct8() {
  if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch (e) {
    return !1;
  }
}
function _getPrototypeOf8(o) {
  return _getPrototypeOf8 = Object.setPrototypeOf ? Object.getPrototypeOf : function(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  }, _getPrototypeOf8(o);
}
var Macro2 = /* @__PURE__ */ function(_StrictMacro) {
  _inherits9(Macro3, _StrictMacro);
  var _super = _createSuper8(Macro3);
  function Macro3() {
    return _classCallCheck26(this, Macro3), _super.apply(this, arguments);
  }
  return _createClass20(Macro3, [{
    key: "tryHaveSkill",
    value: function(skill) {
      return skill ? this.externalIf(have(skill), Macro3.trySkill(skill)) : this;
    }
  }, {
    key: "tryHaveItem",
    value: function(item10) {
      return item10 ? this.externalIf(have(item10), Macro3.tryItem(item10)) : this;
    }
  }, {
    key: "try",
    value: function(actions) {
      return this.step.apply(this, _toConsumableArray27(actions.map(function(action) {
        return action instanceof import_kolmafia83.Item ? Macro3.tryHaveItem(action) : Macro3.tryHaveSkill(action);
      })));
    }
  }, {
    key: "stasisItem",
    value: function() {
      var _find, spammableItem = (_find = $items(_templateObject588 || (_templateObject588 = _taggedTemplateLiteral71(["dictionary, facsimile dictionary, spices"]))).find(function(item10) {
        return have(item10);
      })) !== null && _find !== void 0 ? _find : $item(_templateObject2141 || (_templateObject2141 = _taggedTemplateLiteral71(["seal tooth"])));
      return Macro3.item(spammableItem);
    }
  }, {
    key: "kill",
    value: function() {
      return this.if_("monstername *ghost", Macro3.externalIf(have($skill(_templateObject3127 || (_templateObject3127 = _taggedTemplateLiteral71(["Silent Treatment"])))), Macro3.skill($skill(_templateObject4107 || (_templateObject4107 = _taggedTemplateLiteral71(["Silent Treatment"])))).attack().repeat()).skill($skill(_templateObject589 || (_templateObject589 = _taggedTemplateLiteral71(["Saucegeyser"])))).repeat()).attack().repeat();
    }
  }, {
    key: "stasis",
    value: function() {
      return this.try([$skill(_templateObject656 || (_templateObject656 = _taggedTemplateLiteral71(["Curse of Weaksauce"]))), $skill(_templateObject750 || (_templateObject750 = _taggedTemplateLiteral71(["Micrometeorite"]))), $skill(_templateObject845 || (_templateObject845 = _taggedTemplateLiteral71(["Shadow Noodles"]))), $skill(_templateObject936 || (_templateObject936 = _taggedTemplateLiteral71(["Shell Up"]))), $item(_templateObject1032 || (_templateObject1032 = _taggedTemplateLiteral71(["Time-Spinner"]))), $item(_templateObject1128 || (_templateObject1128 = _taggedTemplateLiteral71(["little red book"]))), $item(_templateObject1227 || (_templateObject1227 = _taggedTemplateLiteral71(["nasty-smelling moss"]))), $item(_templateObject1325 || (_templateObject1325 = _taggedTemplateLiteral71(["HOA citation pad"]))), $item(_templateObject1422 || (_templateObject1422 = _taggedTemplateLiteral71(["Great Wolf's lice"]))), $item(_templateObject1520 || (_templateObject1520 = _taggedTemplateLiteral71(["Mayor Ghost's scissors"]))), $item(_templateObject1619 || (_templateObject1619 = _taggedTemplateLiteral71(["Rain-Doh indigo cup"]))), $item(_templateObject1719 || (_templateObject1719 = _taggedTemplateLiteral71(["porquoise-handled sixgun"]))), $skill(_templateObject1819 || (_templateObject1819 = _taggedTemplateLiteral71(["Summon Love Gnats"]))), $skill(_templateObject1919 || (_templateObject1919 = _taggedTemplateLiteral71(["Bowl Straight Up"]))), $skill(_templateObject2019 || (_templateObject2019 = _taggedTemplateLiteral71(["Sing Along"])))]).externalIf(SourceTerminal_exports.isCurrentSkill($skill(_templateObject2142 || (_templateObject2142 = _taggedTemplateLiteral71(["Extract"])))), Macro3.skill($skill(_templateObject2221 || (_templateObject2221 = _taggedTemplateLiteral71(["Extract"]))))).while_("!pastround 11", Macro3.stasisItem());
    }
  }, {
    key: "redigitize",
    value: function() {
      return this.externalIf(shouldRedigitize(), Macro3.trySkill($skill(_templateObject2320 || (_templateObject2320 = _taggedTemplateLiteral71(["Digitize"])))));
    }
  }, {
    key: "default",
    value: function() {
      return this.if_($monster(_templateObject2418 || (_templateObject2418 = _taggedTemplateLiteral71(["All-Hallow's Steve"]))), Macro3.abort()).externalIf($familiars(_templateObject2518 || (_templateObject2518 = _taggedTemplateLiteral71(["Stocking Mimic, Ninja Pirate Zombie Robot, Comma Chameleon, Feather Boa Constrictor, Cocoabo"]))).includes(args_default.familiar), Macro3.stasis(), Macro3.try([].concat(_toConsumableArray27($skills(_templateObject2618 || (_templateObject2618 = _taggedTemplateLiteral71(["Curse of Weaksauce, Micrometeorite, Sing Along, Bowl Straight Up"])))), _toConsumableArray27($items(_templateObject2718 || (_templateObject2718 = _taggedTemplateLiteral71(["porquoise-handled sixgun, Rain-Doh indigo cup"])))))).externalIf(SourceTerminal_exports.isCurrentSkill($skill(_templateObject2816 || (_templateObject2816 = _taggedTemplateLiteral71(["Extract"])))), Macro3.skill($skill(_templateObject2915 || (_templateObject2915 = _taggedTemplateLiteral71(["Extract"]))))).externalIf(have($skill(_templateObject3015 || (_templateObject3015 = _taggedTemplateLiteral71(["Just the Facts"])))) && get("_circadianRhythmsRecalled"), Macro3.if_((0, import_kolmafia83.getMonsters)($location(_templateObject3128 || (_templateObject3128 = _taggedTemplateLiteral71(["Trick-or-Treating"])))), Macro3.trySkill($skill(_templateObject3217 || (_templateObject3217 = _taggedTemplateLiteral71(["Recall Facts: %phylum Circadian Rhythms"]))))))).kill();
    }
  }], [{
    key: "tryHaveSkill",
    value: function(skill) {
      return new Macro3().tryHaveSkill(skill);
    }
  }, {
    key: "tryHaveItem",
    value: function(item10) {
      return new Macro3().tryHaveItem(item10);
    }
  }, {
    key: "try",
    value: function(actions) {
      return new Macro3().try(actions);
    }
  }, {
    key: "stasisItem",
    value: function() {
      return new Macro3().stasisItem();
    }
  }, {
    key: "kill",
    value: function() {
      return new Macro3().kill();
    }
  }, {
    key: "stasis",
    value: function() {
      return new Macro3().stasis();
    }
  }, {
    key: "redigitize",
    value: function() {
      return new Macro3().redigitize();
    }
  }, {
    key: "default",
    value: function() {
      return new Macro3().default();
    }
  }]), Macro3;
}(StrictMacro), CandyStrategy = /* @__PURE__ */ function(_CombatStrategy) {
  _inherits9(CandyStrategy2, _CombatStrategy);
  var _super2 = _createSuper8(CandyStrategy2);
  function CandyStrategy2() {
    var _this, macro = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function() {
      return Macro2.default();
    };
    return _classCallCheck26(this, CandyStrategy2), _this = _super2.call(this), _this.autoattack(macro).macro(macro), _this;
  }
  return CandyStrategy2;
}(CombatStrategy);

// src/wanderer.ts
init_kolmafia_polyfill();
var import_garbo_lib2 = __toESM(require_dist()), import_kolmafia84 = require("kolmafia");
init_dist();
var _templateObject590;
function _taggedTemplateLiteral72(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray28(arr) {
  return _arrayWithoutHoles28(arr) || _iterableToArray28(arr) || _unsupportedIterableToArray48(arr) || _nonIterableSpread28();
}
function _nonIterableSpread28() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray48(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray48(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray48(o, minLen);
  }
}
function _iterableToArray28(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles28(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray48(arr);
}
function _arrayLikeToArray48(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var _wanderer = null;
function wanderer() {
  var _wanderer2;
  return (_wanderer2 = _wanderer) !== null && _wanderer2 !== void 0 ? _wanderer2 : _wanderer = new import_garbo_lib2.WandererManager({
    ascend: !0,
    estimatedTurns: function() {
      return Math.min((0, import_kolmafia84.myAdventures)(), 5 * (args_default.blocks - State.blocks));
    },
    itemValue: freecandyValue,
    effectValue: function() {
      return 0;
    },
    prioritizeCappingGuzzlr: !1,
    plentifulMonsters: _toConsumableArray28((0, import_kolmafia84.getMonsters)($location(_templateObject590 || (_templateObject590 = _taggedTemplateLiteral72(["Trick-or-Treating"]))))),
    freeFightExtraValue: function() {
      return 0;
    }
  });
}

// src/regularTasks.ts
var _templateObject591, _templateObject2143, _templateObject3129, _templateObject4108, _templateObject597, _templateObject657, _templateObject751, _templateObject846, _templateObject937, _templateObject1033, _templateObject1129, _templateObject1228, _templateObject1326, _templateObject1423, _templateObject1521, _templateObject1620, _templateObject1720, _templateObject1820, _templateObject1920, _templateObject2020, _templateObject2144, _templateObject2222, _templateObject2321, _templateObject2419, _templateObject2519, _templateObject2619, _templateObject2719, _templateObject2817, _templateObject2916, _templateObject3016, _templateObject3130, _templateObject3218, _templateObject3317, _templateObject3414, _templateObject3514, _templateObject3614, _templateObject3714, _templateObject3814, _templateObject3914, _templateObject4014, _templateObject4116, _templateObject4215, _templateObject4315, _templateObject4414, _templateObject4514, _templateObject4614, _templateObject4714, _templateObject4814, _templateObject4913, _templateObject5011, _templateObject5114, _templateObject5213, _templateObject5313, _templateObject5413;
function _createForOfIteratorHelper25(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray49(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _taggedTemplateLiteral73(strings, raw) {
  return raw || (raw = strings.slice(0)), Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray29(arr) {
  return _arrayWithoutHoles29(arr) || _iterableToArray29(arr) || _unsupportedIterableToArray49(arr) || _nonIterableSpread29();
}
function _nonIterableSpread29() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray49(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray49(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray49(o, minLen);
  }
}
function _iterableToArray29(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles29(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray49(arr);
}
function _arrayLikeToArray49(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function ownKeys13(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread13(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys13(Object(source), !0).forEach(function(key) {
      _defineProperty29(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys13(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty29(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
}
var MARKET_QUESTS = [{
  pref: "questM23Meatsmith",
  url: "shop.php?whichshop=meatsmith&action=talk"
}, {
  pref: "questM24Doc",
  url: "shop.php?whichshop=doc&action=talk"
}, {
  pref: "questM25Armorer",
  url: "shop.php?whichshop=armory&action=talk"
}], _digitizeInitialized = !0;
function digitizeInitialized() {
  _digitizeInitialized = !0;
}
var runSource = null;
function getRunSource() {
  if (!runSource) {
    var _tryFindFreeRun;
    runSource = (_tryFindFreeRun = tryFindFreeRun()) !== null && _tryFindFreeRun !== void 0 ? _tryFindFreeRun : ensureFreeRun({
      requireUnlimited: function() {
        return !0;
      },
      noFamiliar: function() {
        return !0;
      },
      noRequirements: function() {
        return !0;
      },
      maximumCost: function() {
        var _get3;
        return (_get3 = get("autoBuyPriceLimit")) !== null && _get3 !== void 0 ? _get3 : 2e4;
      }
    });
  }
  return runSource || (0, import_kolmafia85.abort)("Unable to find free run with which to initialize digitize!"), runSource;
}
function makeWandererTask(type, drunkSafe, base) {
  var equip5 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [], modes = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {}, sobriety = drunkSafe ? void 0 : "sober", options = drunkSafe ? {
    wanderer: type,
    drunkSafe: drunkSafe
  } : type;
  return _objectSpread13({
    sobriety: sobriety,
    do: function() {
      return wanderer().getTarget(options);
    },
    choices: function() {
      return wanderer().getChoices(options);
    },
    combat: new CandyStrategy(),
    outfit: function() {
      return combatOutfit({
        equip: wanderer().getEquipment(options).concat(equip5),
        modes: modes
      });
    }
  }, base);
}
var GLOBAL_TASKS = [{
  name: "Search the Mall",
  completed: function() {
    return import_kolmafia85.sessionStorage.getItem("last mallprices") === (0, import_kolmafia85.todayToString)();
  },
  do: function() {
    (0, import_kolmafia85.mallPrices)("allitems"), import_kolmafia85.sessionStorage.setItem("last mallprices", (0, import_kolmafia85.todayToString)());
  }
}].concat(_toConsumableArray29(MARKET_QUESTS.map(function(_ref) {
  var pref = _ref.pref, url = _ref.url;
  return {
    name: "Start Quest: ".concat(pref),
    completed: function() {
      return questStep(pref) > -1;
    },
    do: function() {
      (0, import_kolmafia85.visitUrl)(url), (0, import_kolmafia85.runChoice)(1);
    }
  };
})), [{
  name: "Acquire Kgnee",
  ready: function() {
    return have($familiar(_templateObject591 || (_templateObject591 = _taggedTemplateLiteral73(["Reagnimated Gnome"])))) && !have($item(_templateObject2143 || (_templateObject2143 = _taggedTemplateLiteral73(["gnomish housemaid's kgnee"])))) && !get("_freecandy_checkedGnome", !1);
  },
  completed: function() {
    return get("_freecandy_checkedGnome", !1);
  },
  do: function() {
    (0, import_kolmafia85.visitUrl)("arena.php"), (0, import_kolmafia85.runChoice)(4), _set("_freecandy_checkedGnome", !0);
  },
  outfit: {
    familiar: $familiar(_templateObject3129 || (_templateObject3129 = _taggedTemplateLiteral73(["Reagnimated Gnome"])))
  },
  limit: {
    tries: 1
  }
}, {
  name: "Ow!",
  completed: function() {
    return (0, import_kolmafia85.myHp)() > 0;
  },
  do: function() {
    return (0, import_kolmafia85.abort)("Ow! I have 0 hp!");
  }
}, {
  name: "Check combat lost",
  completed: function() {
    return !get("_lastCombatLost", !1);
  },
  do: function() {
    return (0, import_kolmafia85.abort)("Lost in combat!");
  }
}, {
  name: "Lick wounds",
  ready: function() {
    return have($skill(_templateObject4108 || (_templateObject4108 = _taggedTemplateLiteral73(["Tongue of the Walrus"]))));
  },
  completed: function() {
    return !have($effect(_templateObject597 || (_templateObject597 = _taggedTemplateLiteral73(["Beaten Up"]))));
  },
  do: function() {
    return (0, import_kolmafia85.useSkill)($skill(_templateObject657 || (_templateObject657 = _taggedTemplateLiteral73(["Tongue of the Walrus"]))));
  }
}, {
  name: "Sweat Out some Booze",
  completed: function() {
    return get("_sweatOutSomeBoozeUsed") >= 3;
  },
  ready: function() {
    return (0, import_kolmafia85.myInebriety)() > 0 && get("sweat") >= 25;
  },
  do: function() {
    return (0, import_kolmafia85.useSkill)($skill(_templateObject751 || (_templateObject751 = _taggedTemplateLiteral73(["Sweat Out Some Booze"]))));
  },
  outfit: {
    pants: $item(_templateObject846 || (_templateObject846 = _taggedTemplateLiteral73(["designer sweatpants"])))
  },
  sobriety: "sober"
}, {
  name: "Numberology",
  ready: function() {
    return Object.values((0, import_kolmafia85.reverseNumberology)()).includes(69);
  },
  completed: function() {
    return get("_universeCalculated") >= get("skillLevel144");
  },
  do: function() {
    return (0, import_kolmafia85.cliExecute)("numberology 69");
  }
}, {
  name: "Magical Sauasage",
  ready: function() {
    return $items(_templateObject937 || (_templateObject937 = _taggedTemplateLiteral73(["magical sausage, magical sausage casing"]))).some(function(i) {
      return have(i);
    }) && $items(_templateObject1033 || (_templateObject1033 = _taggedTemplateLiteral73(["Kramco Sausage-o-Matic\u2122, replica Kramco Sausage-o-Matic\u2122"]))).some(function(i) {
      return have(i);
    });
  },
  completed: function() {
    return get("_sausagesEaten") >= 23;
  },
  do: function() {
    return (0, import_kolmafia85.eat)($item(_templateObject1129 || (_templateObject1129 = _taggedTemplateLiteral73(["magical sausage"]))));
  }
}, {
  name: "License to Chill",
  ready: function() {
    return have($item(_templateObject1228 || (_templateObject1228 = _taggedTemplateLiteral73(["License to Chill"]))));
  },
  completed: function() {
    return get("_licenseToChillUsed");
  },
  do: function() {
    return (0, import_kolmafia85.use)($item(_templateObject1326 || (_templateObject1326 = _taggedTemplateLiteral73(["License to Chill"]))));
  }
}, {
  name: "Fill Pantsgiving Fullness",
  ready: function() {
    return !$classes(_templateObject1423 || (_templateObject1423 = _taggedTemplateLiteral73(["Vampyre, Grey Goo"]))).includes((0, import_kolmafia85.myClass)()) && (0, import_kolmafia85.myFullness)() + 1 === (0, import_kolmafia85.fullnessLimit)();
  },
  completed: function() {
    return (0, import_kolmafia85.myFullness)() >= (0, import_kolmafia85.fullnessLimit)();
  },
  do: function() {
    var _getBestPantsgivingFo = getBestPantsgivingFood(), food = _getBestPantsgivingFo.food;
    get("_fudgeSporkUsed") || ((0, import_kolmafia85.retrieveItem)($item(_templateObject1521 || (_templateObject1521 = _taggedTemplateLiteral73(["fudge spork"])))), (0, import_kolmafia85.eat)($item(_templateObject1620 || (_templateObject1620 = _taggedTemplateLiteral73(["fudge spork"]))))), (0, import_kolmafia85.retrieveItem)(food), (0, import_kolmafia85.eat)(food);
  }
}, {
  name: "Autumn-Aton",
  completed: function() {
    return !AutumnAton_exports.available();
  },
  do: function() {
    AutumnAton_exports.sendTo(bestAutumnatonLocation);
  }
}, {
  name: "Cold Medicine Cabinet",
  ready: function() {
    return (0, import_kolmafia85.getWorkshed)() === $item(_templateObject1720 || (_templateObject1720 = _taggedTemplateLiteral73(["cold medicine cabinet"])));
  },
  completed: function() {
    return get("_coldMedicineConsults") >= 5 || get("_nextColdMedicineConsult") > (0, import_kolmafia85.totalTurnsPlayed)();
  },
  do: coldMedicineCabinet
}, {
  name: "Trainset",
  ready: function() {
    return TrainSet_exports.installed();
  },
  completed: function() {
    return !willRotateTrainset();
  },
  do: rotateTrainToOptimalCycle
}, {
  name: "Tune Snapper",
  ready: function() {
    return args_default.familiar === $familiar(_templateObject1820 || (_templateObject1820 = _taggedTemplateLiteral73(["Red-Nosed Snapper"])));
  },
  completed: function() {
    return Snapper_exports.getTrackedPhylum() === $phylum(_templateObject1920 || (_templateObject1920 = _taggedTemplateLiteral73(["dude"])));
  },
  do: function() {
    return Snapper_exports.trackPhylum($phylum(_templateObject2020 || (_templateObject2020 = _taggedTemplateLiteral73(["dude"]))));
  }
}, {
  name: "June Cleaver",
  completed: function() {
    return !JuneCleaver_exports.have() || !!get("_juneCleaverFightsLeft");
  },
  do: function() {
    return withProperty("recoveryScript", "", function() {
      var target = (0, import_kolmafia85.myInebriety)() > (0, import_kolmafia85.inebrietyLimit)() ? $location(_templateObject2144 || (_templateObject2144 = _taggedTemplateLiteral73(["Drunken Stupor"]))) : $location(_templateObject2222 || (_templateObject2222 = _taggedTemplateLiteral73(["Noob Cave"])));
      (0, import_kolmafia85.adv1)(target, -1, "");
    });
  },
  choices: juneCleaverChoices,
  outfit: {
    weapon: $item(_templateObject2321 || (_templateObject2321 = _taggedTemplateLiteral73(["June cleaver"])))
  },
  combat: new CandyStrategy(Macro2.abort())
}, {
  name: "Terminal Skills",
  ready: function() {
    return SourceTerminal_exports.have();
  },
  completed: function() {
    return SourceTerminal_exports.isCurrentSkill([$skill(_templateObject2419 || (_templateObject2419 = _taggedTemplateLiteral73(["Extract"]))), $skill(_templateObject2519 || (_templateObject2519 = _taggedTemplateLiteral73(["Duplicate"])))]);
  },
  do: function() {
    return SourceTerminal_exports.educate([$skill(_templateObject2619 || (_templateObject2619 = _taggedTemplateLiteral73(["Extract"]))), $skill(_templateObject2719 || (_templateObject2719 = _taggedTemplateLiteral73(["Duplicate"])))]);
  }
}, {
  name: "Proton Ghost",
  completed: function() {
    return get("questPAGhost") === "unstarted";
  },
  ready: function() {
    return have($item(_templateObject2817 || (_templateObject2817 = _taggedTemplateLiteral73(["protonic accelerator pack"])))) && !!get("ghostLocation");
  },
  do: function() {
    var _get22;
    return (_get22 = get("ghostLocation")) !== null && _get22 !== void 0 ? _get22 : (0, import_kolmafia85.abort)("Failed to find proper ghost location");
  },
  outfit: function() {
    return combatOutfit({
      back: $item(_templateObject2916 || (_templateObject2916 = _taggedTemplateLiteral73(["protonic accelerator pack"])))
    });
  },
  combat: new CandyStrategy(function() {
    return Macro2.trySkill($skill(_templateObject3016 || (_templateObject3016 = _taggedTemplateLiteral73(["Shoot Ghost"])))).trySkill($skill(_templateObject3130 || (_templateObject3130 = _taggedTemplateLiteral73(["Shoot Ghost"])))).trySkill($skill(_templateObject3218 || (_templateObject3218 = _taggedTemplateLiteral73(["Shoot Ghost"])))).trySkill($skill(_templateObject3317 || (_templateObject3317 = _taggedTemplateLiteral73(["Trap Ghost"]))));
  })
}, makeWandererTask("wanderer", !0, {
  name: "Vote Wanderer",
  ready: function() {
    return have($item(_templateObject3414 || (_templateObject3414 = _taggedTemplateLiteral73(['"I Voted!" sticker'])))) && (0, import_kolmafia85.totalTurnsPlayed)() % 11 === 1 && get("_voteFreeFights") < 3;
  },
  completed: function() {
    return get("lastVoteMonsterTurn") === (0, import_kolmafia85.totalTurnsPlayed)();
  },
  combat: new CandyStrategy()
}, $items(_templateObject3514 || (_templateObject3514 = _taggedTemplateLiteral73(['"I Voted!" sticker'])))), makeWandererTask("wanderer", !0, {
  name: "Digitize Wanderer",
  completed: function() {
    return counter_exports.get("Digitize") > 0;
  },
  prepare: function() {
    return shouldRedigitize() && SourceTerminal_exports.educate([$skill(_templateObject3614 || (_templateObject3614 = _taggedTemplateLiteral73(["Digitize"]))), $skill(_templateObject3714 || (_templateObject3714 = _taggedTemplateLiteral73(["Extract"])))]);
  },
  post: function() {
    return get("_sourceTerminalDigitizeMonsterCount") || (_digitizeInitialized = !1);
  },
  outfit: digitizeOutfit,
  combat: new CandyStrategy(function() {
    return Macro2.redigitize().default();
  })
}), makeWandererTask("wanderer", !0, {
  name: "Void Monster",
  ready: function() {
    return have($item(_templateObject3814 || (_templateObject3814 = _taggedTemplateLiteral73(["cursed magnifying glass"])))) && get("cursedMagnifyingGlassCount") === 13;
  },
  completed: function() {
    return get("_voidFreeFights") >= 5;
  }
}, $items(_templateObject3914 || (_templateObject3914 = _taggedTemplateLiteral73(["cursed magnifying glass"])))), makeWandererTask("wanderer", !0, {
  name: "Kramco",
  ready: function() {
    return have($item(_templateObject4014 || (_templateObject4014 = _taggedTemplateLiteral73(["Kramco Sausage-o-Matic\u2122"]))));
  },
  completed: function() {
    return getKramcoWandererChance() < 1;
  },
  post: digitizeInitialized,
  combat: new CandyStrategy()
}, $items(_templateObject4116 || (_templateObject4116 = _taggedTemplateLiteral73(["Kramco Sausage-o-Matic\u2122"])))), makeWandererTask("yellow ray", !1, {
  name: "Yellow Ray: Fondeluge",
  ready: function() {
    return have($skill(_templateObject4215 || (_templateObject4215 = _taggedTemplateLiteral73(["Fondeluge"]))));
  },
  completed: function() {
    return have($effect(_templateObject4315 || (_templateObject4315 = _taggedTemplateLiteral73(["Everything Looks Yellow"]))));
  },
  sobriety: "sober",
  post: digitizeInitialized,
  combat: new CandyStrategy(function() {
    return Macro2.tryHaveSkill($skill(_templateObject4414 || (_templateObject4414 = _taggedTemplateLiteral73(["Duplicate"])))).trySkill($skill(_templateObject4514 || (_templateObject4514 = _taggedTemplateLiteral73(["Fondeluge"])))).abort();
  })
}), makeWandererTask("yellow ray", !1, {
  name: "Yellow Ray: Jurassic Parka",
  ready: function() {
    return have($item(_templateObject4614 || (_templateObject4614 = _taggedTemplateLiteral73(["Jurassic Parka"])))) && have($skill(_templateObject4714 || (_templateObject4714 = _taggedTemplateLiteral73(["Torso Awareness"]))));
  },
  completed: function() {
    return have($effect(_templateObject4814 || (_templateObject4814 = _taggedTemplateLiteral73(["Everything Looks Yellow"]))));
  },
  sobriety: "sober",
  post: digitizeInitialized,
  combat: new CandyStrategy(function() {
    return Macro2.tryHaveSkill($skill(_templateObject4913 || (_templateObject4913 = _taggedTemplateLiteral73(["Duplicate"])))).trySkill($skill(_templateObject5011 || (_templateObject5011 = _taggedTemplateLiteral73(["Spit jurassic acid"])))).abort();
  })
}, $items(_templateObject5114 || (_templateObject5114 = _taggedTemplateLiteral73(["Jurassic Parka"]))), {
  parka: "dilophosaur"
}), makeWandererTask("freefight", !1, {
  name: "Free-for-All",
  ready: function() {
    return have($skill(_templateObject5213 || (_templateObject5213 = _taggedTemplateLiteral73(["Free-For-All"]))));
  },
  completed: function() {
    return have($effect(_templateObject5313 || (_templateObject5313 = _taggedTemplateLiteral73(["Everything Looks Red"]))));
  },
  sobriety: "sober",
  post: digitizeInitialized,
  combat: new CandyStrategy(Macro2.skill($skill(_templateObject5413 || (_templateObject5413 = _taggedTemplateLiteral73(["Free-For-All"])))))
}), makeWandererTask("wanderer", !0, {
  name: "Nemesis Assassin",
  completed: function() {
    return counter_exports.get("Nemesis Assassin window end") > 0;
  },
  post: digitizeInitialized
}), {
  name: "Initialize Digitize",
  completed: function() {
    return _digitizeInitialized;
  },
  do: function() {
    var _getRunSource;
    return (_getRunSource = getRunSource()) === null || _getRunSource === void 0 || _getRunSource.prepare(), wanderer().getTarget("backup");
  },
  choices: function() {
    return wanderer().getChoices("backup");
  },
  post: function() {
    digitizeInitialized(), runSource = null;
  },
  outfit: function() {
    var _run$constraints, _run$constraints$equi, _run$constraints2, _run$constraints2$fam, run = getRunSource(), req = run == null || (_run$constraints = run.constraints) === null || _run$constraints === void 0 || (_run$constraints$equi = _run$constraints.equipmentRequirements) === null || _run$constraints$equi === void 0 ? void 0 : _run$constraints$equi.call(_run$constraints), familiar7 = run == null || (_run$constraints2 = run.constraints) === null || _run$constraints2 === void 0 || (_run$constraints2$fam = _run$constraints2.familiar) === null || _run$constraints2$fam === void 0 ? void 0 : _run$constraints2$fam.call(_run$constraints2), outfit2 = new Outfit();
    if (familiar7 && outfit2.equip(familiar7), req) {
      var _req$maximizeOptions$;
      req.maximizeParameters && (outfit2.modifier = req.maximizeParameters);
      var _iterator = _createForOfIteratorHelper25((_req$maximizeOptions$ = req.maximizeOptions.forceEquip) !== null && _req$maximizeOptions$ !== void 0 ? _req$maximizeOptions$ : []), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var item10 = _step.value;
          outfit2.equip(item10) || (0, import_kolmafia85.abort)("Failed to equip item ".concat(item10, " for free running"));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    return combatOutfit(outfit2.spec());
  },
  combat: new CandyStrategy(function() {
    var _getRunSource$macro, _getRunSource2;
    return Macro2.step((_getRunSource$macro = (_getRunSource2 = getRunSource()) === null || _getRunSource2 === void 0 ? void 0 : _getRunSource2.macro) !== null && _getRunSource$macro !== void 0 ? _getRunSource$macro : Macro2.abort());
  }),
  sobriety: "sober"
}]), regularTasks_default = GLOBAL_TASKS;

// src/trickTreatTasks.ts
init_kolmafia_polyfill();
var import_kolmafia86 = require("kolmafia");
function _createForOfIteratorHelper26(o, allowArrayLike) {
  var it = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray50(o)) || allowArrayLike && o && typeof o.length == "number") {
      it && (o = it);
      var i = 0, F = function() {
      };
      return { s: F, n: function() {
        return i >= o.length ? { done: !0 } : { done: !1, value: o[i++] };
      }, e: function(_e) {
        throw _e;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = !0, didErr = !1, err;
  return { s: function() {
    it = it.call(o);
  }, n: function() {
    var step = it.next();
    return normalCompletion = step.done, step;
  }, e: function(_e2) {
    didErr = !0, err = _e2;
  }, f: function() {
    try {
      !normalCompletion && it.return != null && it.return();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray50(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray50(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray50(o, minLen);
  }
}
function _arrayLikeToArray50(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
var HOUSE_NUMBERS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], blockHtml = "", treated = !1, tricked = [];
function getBlockHtml() {
  return blockHtml || (blockHtml = (0, import_kolmafia86.visitUrl)("place.php?whichplace=town&action=town_trickortreat")), blockHtml;
}
function refreshBlock() {
  blockHtml = (0, import_kolmafia86.visitUrl)("place.php?whichplace=town&action=town_trickortreat");
}
function resetBlock() {
  refreshBlock(), treated = !1, tricked = [], State.blocks++;
}
function ensureInHalloween() {
  var onPage = (0, import_kolmafia86.handlingChoice)() && (0, import_kolmafia86.lastChoice)() === 804;
  onPage || refreshBlock();
}
var TRICK_TREAT_TASKS = [{
  name: "Treat",
  ready: function() {
    return !treated;
  },
  completed: function() {
    return !getBlockHtml().match(/whichhouse=\d*>[^>]*?house_l/);
  },
  outfit: treatOutfit,
  prepare: ensureInHalloween,
  do: function() {
    var _iterator = _createForOfIteratorHelper26(HOUSE_NUMBERS), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var house = _step.value;
        getBlockHtml().match(RegExp("whichhouse=".concat(house, ">[^>]*?house_l"))) ? (tricked.push(house), (0, import_kolmafia86.visitUrl)("choice.php?whichchoice=804&option=3&whichhouse=".concat(house, "&pwd"))) : getBlockHtml().match(RegExp("whichhouse=".concat(house, ">[^>]*?starhouse"))) && (tricked.push(house), (0, import_kolmafia86.visitUrl)("choice.php?whichchoice=804&option=3&whichhouse=".concat(house, "&pwd")), (0, import_kolmafia86.runChoice)(2), refreshBlock());
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    treated = !0;
  }
}, {
  name: "Trick",
  ready: function() {
    return tricked.length < HOUSE_NUMBERS.length;
  },
  completed: function() {
    return !getBlockHtml().match(/whichhouse=\d*>[^>]*?house_d/);
  },
  prepare: ensureInHalloween,
  do: function() {
    var _iterator2 = _createForOfIteratorHelper26(HOUSE_NUMBERS), _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
        var house = _step2.value;
        if (!tricked.includes(house) && (tricked.push(house), getBlockHtml().match(RegExp("whichhouse=".concat(house, ">[^>]*?house_d"))))) {
          (0, import_kolmafia86.visitUrl)("choice.php?whichchoice=804&option=3&whichhouse=".concat(house, "&pwd"));
          do
            (0, import_kolmafia86.runCombat)();
          while ((0, import_kolmafia86.inMultiFight)());
          return;
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    tricked.length < HOUSE_NUMBERS.length && (0, import_kolmafia86.abort)("We thought there were unvisited trickable houses left, but alas! there are not!");
  },
  outfit: trickOutfit,
  combat: new CandyStrategy()
}, {
  name: "Reset Block",
  ready: function() {
    return (0, import_kolmafia86.myAdventures)() >= 5;
  },
  completed: function() {
    return refreshBlock(), getBlockHtml().includes("whichhouse=");
  },
  prepare: ensureInHalloween,
  do: function() {
    (0, import_kolmafia86.visitUrl)("choice.php?whichchoice=804&pwd&option=1"), resetBlock(), getBlockHtml().includes("whichhouse=") || (0, import_kolmafia86.abort)("Something went awry when finding a new block!");
  }
}], trickTreatTasks_default = TRICK_TREAT_TASKS;

// src/index.ts
var import_kolmafia87 = require("kolmafia");
function _toConsumableArray30(arr) {
  return _arrayWithoutHoles30(arr) || _iterableToArray30(arr) || _unsupportedIterableToArray51(arr) || _nonIterableSpread30();
}
function _nonIterableSpread30() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray51(o, minLen) {
  if (o) {
    if (typeof o == "string")
      return _arrayLikeToArray51(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray51(o, minLen);
  }
}
function _iterableToArray30(iter) {
  if (typeof Symbol != "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles30(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray51(arr);
}
function _arrayLikeToArray51(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function main() {
  var argstring = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  if (Args.fill(args_default, argstring), args_default.help) {
    Args.showHelp(args_default);
    return;
  }
  var nemesisStep = function() {
    return questStep("questG04Nemesis");
  }, doingNemesis = nemesisStep() >= 17 && nemesisStep() < 25, noMoreAdventures = function() {
    return (0, import_kolmafia87.myAdventures)() <= 0 ? ((0, import_kolmafia87.print)("Out of adventures! Stopping.", "red"), !0) : !1;
  }, doneWithNemesis = function() {
    return doingNemesis && nemesisStep() >= 25 ? ((0, import_kolmafia87.print)("Fought the final nemesis wanderer! Stopping.", "red"), !0) : !1;
  }, doneWithBlocks = function() {
    return State.blocks >= args_default.blocks ? ((0, import_kolmafia87.print)("Finished ".concat(args_default.blocks, " blocks!"), "red"), !0) : !1;
  };
  _set("_lastCombatLost", !1);
  var quest = {
    name: "hacking your system",
    completed: function() {
      return noMoreAdventures() || doneWithNemesis() || doneWithBlocks();
    },
    tasks: [].concat(_toConsumableArray30(regularTasks_default), _toConsumableArray30(trickTreatTasks_default))
  }, engine = new CandyEngine(getTasks([quest]));
  try {
    engine.run();
  } finally {
    engine.destruct();
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
